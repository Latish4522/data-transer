{"version":3,"file":"src_app_claims_claims_module_ts.js","mappings":"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","sources":["./src/app/claims/claim-info/claim-info.component.ts","./src/app/claims/claim-info/claim-info.component.html","./src/app/claims/claims-layout/claims-layout.component.ts","./src/app/claims/claims-layout/claims-layout.component.html","./src/app/claims/claims-routing.module.ts","./src/app/claims/claims.module.ts","./src/app/claims/qrcode-info/qrcode-info.component.ts","./src/app/claims/qrcode-info/qrcode-info.component.html","./src/app/dashboard/dashboard.service.ts","./src/app/dashboard/survey.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DashboardService } from 'src/app/dashboard/dashboard.service';\r\nimport { SurveyService } from 'src/app/dashboard/survey.service';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { ClaimsService } from '../claims.service';\r\nimport { finalize } from 'rxjs/internal/operators/finalize';\r\nimport { ConfigConstants } from 'src/app/models/constants';\r\n\r\n@Component({\r\n  selector: 'app-claim-info',\r\n  templateUrl: './claim-info.component.html',\r\n  styleUrls: ['./claim-info.component.scss']\r\n})\r\nexport class ClaimInfoComponent implements OnInit {\r\n\r\n  surveyDetails: any = {};\r\n  isAllSurveysAnswered: boolean = false;\r\n  isSidOrSSId = '';\r\n  allSurveyIds: Array<any> = [];\r\n\r\n  isPaymentClaimed: boolean = false;\r\n  personMobileNumber: any;\r\n  appId: any = '';\r\n  isScreenLoaded: boolean = false;\r\n  profileInfo: any;\r\n  surveyType: any;\r\n  showQRCodeInfo: boolean = false;\r\n  qrCodeUrl: any;\r\n  qrCode: any;\r\n  sharedqrcode: any;\r\n  claimType: any;\r\n  isEachSurveyAnswered: boolean = false;\r\n  currentSurveyDay: any;\r\n  paymentMsg: any = '';\r\n\r\n  constructor(private router: Router, private sharedService: SharedService,\r\n    private surveyService: SurveyService, private claimsService: ClaimsService,\r\n    private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n    let sid = localStorage.getItem('sid');\r\n    let ssid = localStorage.getItem('ssid');\r\n    this.surveyType = localStorage.getItem('surveyType');\r\n    this.currentSurveyDay = localStorage.getItem('currentSurveyDay');\r\n\r\n    if (sid != '' && sid != 'null' && sid != null) {\r\n      this.isSidOrSSId = 'sid';\r\n    }\r\n    if (ssid != '' && ssid != 'null' && ssid != null) {\r\n      this.isSidOrSSId = 'ssid';\r\n    }\r\n    this.personMobileNumber = localStorage.getItem('personMobileNumber');\r\n\r\n    this.appId = localStorage.getItem('app');\r\n    this.sharedqrcode = localStorage.getItem('sharedqrcode');\r\n    this.claimType = localStorage.getItem('claim');\r\n\r\n    this.fetchProfileDetails();\r\n\r\n    if (this.isSidOrSSId == 'sid') {\r\n      this.getSurveyListDetails();\r\n    } else if (this.isSidOrSSId == 'ssid') {\r\n      this.getSurveySetDetails();\r\n    }\r\n  }\r\n  // ********** Method to get the Profile details ******************\r\n  fetchProfileDetails() {\r\n    this.dashboardService.getProfileDetails(localStorage.getItem('personBluenumber')).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.profileInfo = res.result;\r\n      }\r\n    });\r\n  }\r\n  // ********** Method to get the Survey details ******************\r\n  getSurveySetDetails() {\r\n    this.sharedService.startLoader();\r\n    if (localStorage.getItem('ssid') == \"null\") {\r\n      this.sharedService.successErrorMsg['message'] = \"Please scan QR code again.\";\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('home/messages');\r\n    }\r\n\r\n    this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      this.isScreenLoaded = true;\r\n      if (!res['isError']) {\r\n        this.surveyDetails = res['result'];\r\n        localStorage.setItem('surveySetId', this.surveyDetails['id']);\r\n        this.isPaymentClaimed = res['result']['claim'];\r\n\r\n        // ******** To check all Surveys are answered or not for claim status ******************\r\n        let count = 0;\r\n        this.surveyDetails['surveyGroupItems'].forEach((item: any) => {\r\n          this.surveyDetails['currency'] = item['currency'];\r\n          this.surveyDetails['paymentOffered'] = item['paymentOffered'];\r\n          this.allSurveyIds.push(item['surveyId']);\r\n          if (item['isAnswered']) {\r\n            count++;\r\n          }\r\n        });\r\n\r\n        // claimType\r\n        // Check this condition first then check count for isAllSurveysAnswered\r\n        /* *****************************************************************************\r\n        Updated the below condition for SurveyType to accommodate the Claims Logic\r\n        if surveyTpe is empty or survey Tpe is ShareQRCODE\r\n        this.surveyType == ConfigConstants.shareQrCode || this.surveyType == ''\r\n        **************************************************************************** */\r\n        if (this.claimType == ConfigConstants.eachSurvey && (this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '')) {\r\n          if (count > 0) {\r\n            let payMsg = this.surveyDetails['paymentMessage'].split('^');\r\n            if (payMsg.length > 1) {\r\n              this.paymentMsg = payMsg[Number(this.currentSurveyDay) - 1];\r\n            } else {\r\n              this.paymentMsg = '';\r\n            }\r\n            this.isEachSurveyAnswered = true;\r\n            return;\r\n          } else {\r\n            this.router.navigateByUrl('home/info');\r\n          }\r\n        } else {\r\n          this.isEachSurveyAnswered = false;\r\n        }\r\n\r\n        if (count == this.surveyDetails['surveyGroupItems'].length && count != 0) {\r\n          this.isAllSurveysAnswered = true;\r\n          return;\r\n        } else {\r\n          this.isAllSurveysAnswered = false;\r\n        }\r\n      }\r\n    },\r\n      (error: any) => {\r\n        if (error.error.responseException.exceptionMessage == \"Survey is not found for QR:null\") {\r\n          this.goBack();\r\n          return;\r\n        }\r\n      });\r\n  }\r\n  // ******** To check SID is answered or not and the claim status ******************\r\n  getSurveyListDetails() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getSurveyDetailsbyQRCode(localStorage.getItem('sid')).subscribe(result => {\r\n      if (!result['isError']) {\r\n        this.surveyDetails = result['result'];\r\n        this.isPaymentClaimed = result['result']['claim'];\r\n      }\r\n      this.sharedService.stopLoader();\r\n      this.isScreenLoaded = true;\r\n    },\r\n      error => {\r\n        this.fetchSurveyAmountDetails();\r\n        this.router.navigateByUrl('/claims');\r\n        if (error.error.responseException.exceptionMessage.substring(0, 15) == \"AlreadyAnswered\") {\r\n          this.isAllSurveysAnswered = true;\r\n          return;\r\n        } else if (error.error.responseException.exceptionMessage.includes('ReachedMaxParticipants')) {\r\n          this.isAllSurveysAnswered = false;\r\n          return;\r\n        } else {\r\n          this.isAllSurveysAnswered = false;\r\n          return;\r\n        }\r\n      });\r\n  }\r\n  // *********** To fetch the Survey SID details if survey is already answered *************\r\n  fetchSurveyAmountDetails() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getSurveyDetailsResponseForAnsweredQRCode(localStorage.getItem('sid')).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      this.isScreenLoaded = true;\r\n      if (!res['isError']) {\r\n        this.surveyDetails = res['result'];\r\n        this.isPaymentClaimed = res['result']['claim'];\r\n      }\r\n    });\r\n  }\r\n  // *********** Triggers on Pay Me Button is clicked *********************\r\n  onPayMeOrOkBtnClick() {\r\n    if (this.isAllSurveysAnswered || this.isEachSurveyAnswered) {\r\n      let params: any = {};\r\n      if (this.isSidOrSSId == 'sid') {\r\n        params = {\r\n          surveyId: this.surveyDetails['id'],\r\n          amount: Number(this.surveyDetails['paymentOffered']),\r\n          latitude: this.profileInfo['latitude'],\r\n          longitude: this.profileInfo['longitude']\r\n        };\r\n        // ***** Claim API for SID *****************\r\n        this.sharedService.startLoader();\r\n        this.claimsService.claimSurvey(params).subscribe((res: any) => {\r\n          this.sharedService.stopLoader();\r\n          console.log(res);\r\n          if (!res['isError']) {\r\n            this.isPaymentClaimed = true;\r\n          }\r\n        });\r\n      } else if (this.isSidOrSSId == 'ssid') {\r\n        this.sharedService.startLoader();\r\n        params = {\r\n          surveySetId: this.surveyDetails['id'],\r\n          dataRequestIds: this.allSurveyIds,\r\n          amount: Number(this.surveyDetails['paymentOffered']),\r\n          latitude: this.profileInfo['latitude'],\r\n          longitude: this.profileInfo['longitude'],\r\n        };\r\n        // ********** Pass the Current Survey Id in the Payload ***************\r\n        if ((this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '') && this.claimType == ConfigConstants.eachSurvey) {\r\n          let survey = this.surveyDetails['surveyGroupItems'][Number(this.currentSurveyDay) - 1];\r\n          params['surveyId'] = survey['surveyId'];\r\n        }\r\n        // ***** Claim API for SSID *****************\r\n        this.claimsService.claimSurveySet(params).subscribe((res: any) => {\r\n          this.sharedService.stopLoader();\r\n          console.log(res);\r\n          if (!res['isError']) {\r\n            if ((this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '') || ((this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '') && this.claimType == ConfigConstants.eachSurvey && this.currentSurveyDay == 1)) {\r\n              if (this.sharedqrcode != '' && this.sharedqrcode != null) {\r\n                this.checkSurveyCompletionData();\r\n              } else {\r\n                if ((this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '') && this.claimType == ConfigConstants.eachSurvey) {\r\n                  if (Number(this.currentSurveyDay) > 1) {\r\n                    this.isPaymentClaimed = true;\r\n                  } else {\r\n                    this.saveClaimQRCode();\r\n                  }\r\n                } else {\r\n                  this.saveClaimQRCode();\r\n                }\r\n              }\r\n            } else {\r\n              this.isPaymentClaimed = true;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.goBack();\r\n    }\r\n  }\r\n  goBack() {\r\n    this.router.navigateByUrl('home/info');\r\n  }\r\n  // *************** Post API to store the SSId deatils for Claim **********************\r\n  saveClaimQRCode() {\r\n    let params = {\r\n      surveySetId: this.surveyDetails['id'],\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.claimsService.checkForsharedCode(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res['result']) {\r\n        // ********** Dont show QR CODE if survey Type is empty ****************\r\n        if (this.surveyType == '') {\r\n          this.closeQRCode({ close: true });\r\n        } else {\r\n          // ********** Show QR CODE only if survey Type is Share QR Code ****************\r\n          this.showQRCodeInfo = true;\r\n          this.qrCodeUrl = res['result']['qrImageUrl'];\r\n          this.qrCode = res['result']['qrCode'];\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // *********** API to Get the Claim QR Code Details *******************\r\n  // ********* Internally based on the success response GET API is called ******\r\n  checkSurveyCompletionData() {\r\n    let params = {\r\n      QrCode: this.sharedqrcode,\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.claimsService.getSharedCodeDetails(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res['result']) {\r\n        let param = {};\r\n        if (res['result']['surveyCompletion']) {\r\n          param = {\r\n            SurveySetQRCode: localStorage.getItem('ssid'),\r\n            IsCreate: true\r\n          };\r\n        } else {\r\n          param = {\r\n            SurveySetQRCode: localStorage.getItem('ssid'),\r\n            GeneratorSurveyClaim: true,\r\n            IsCreate: true,\r\n            Latitude: this.profileInfo['latitude'],\r\n            Longitude: this.profileInfo['longitude'],\r\n            QrCode: this.sharedqrcode\r\n          };\r\n        }\r\n        this.claimGeneratorSurvey(param);\r\n      }\r\n    });\r\n  }\r\n\r\n  claimGeneratorSurvey(params: any) {\r\n    this.sharedService.startLoader();\r\n    this.claimsService.getSharedCodeDetails(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      if (res['result']) {\r\n        // ********** Dont show QR CODE if survey Type is empty ****************\r\n        if (this.surveyType == '') {\r\n          this.closeQRCode({ close: true });\r\n        } else {\r\n          // ********** Show QR CODE only if survey Type is Share QR Code ****************\r\n          this.showQRCodeInfo = true;\r\n          this.qrCodeUrl = res['result']['qrImageUrl'];\r\n          this.qrCode = res['result']['qrCode'];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  closeQRCode(event: any) {\r\n    if (event['close']) {\r\n      this.showQRCodeInfo = false;\r\n      this.isPaymentClaimed = true;\r\n    }\r\n  }\r\n\r\n  getCurrencySymbol(countryCode: string) {\r\n    return this.sharedService.getCurrencySymbol(countryCode);\r\n  }\r\n}\r\n","<div class=\"pma\" *ngIf=\"!showQRCodeInfo\">\r\n  <div class=\"container\">\r\n    <!-- ************ Hiding Back option only if Survey Type is empty ************ -->\r\n    <h1 class=\"pma-heading text-muted mb-4\" *ngIf=\"surveyType != ''\">\r\n      <i class=\"fas fa-chevron-left mouse-pointer pr-3\" (click)=\"goBack()\"></i>&nbsp;\r\n    </h1>\r\n    <div *ngIf=\"isScreenLoaded\">\r\n      <!-- ******** Displays is Payment is not claimed *************** -->\r\n      <div class=\"pay-screen mt-5 pt-5\" *ngIf=\"!isPaymentClaimed\">\r\n        <div class=\"row text-center\">\r\n          <div class=\"col-md-12\">\r\n            <!-- ******** Display if it is not Farmer **************** -->\r\n            <div *ngIf=\"surveyType != 'feedback'\">\r\n              <img src=\"../../../assets/media/pay-logo.svg\" *ngIf=\"!isAllSurveysAnswered && !isEachSurveyAnswered\"\r\n                alt=\"\" class=\"img-fluid\">\r\n              <img src=\"../../../assets/media/reward-cup.svg\" *ngIf=\"isAllSurveysAnswered || isEachSurveyAnswered\"\r\n                alt=\"\" class=\"img-fluid\">\r\n            </div>\r\n            <div *ngIf=\"surveyType == 'feedback'\">\r\n              <img src=\"../../../assets/media/success-logo.svg\" class=\"img-fluid p-success\" alt=\"\">\r\n              <h2 class=\"big-font pb-4\"> Success!</h2>\r\n            </div>\r\n            <!-- ******** Display only for Farmer **************** -->\r\n            <!-- <div *ngIf=\"appId == 'mmind'\">\r\n              <img *ngIf=\"isAllSurveysAnswered\" src=\"../../../assets/media/reward-cup.svg\" alt=\"\" class=\"img-fluid\">\r\n              <img *ngIf=\"!isAllSurveysAnswered\" src=\"../../../../../assets/media/pay-logo.svg\" alt=\"\"\r\n                class=\"img-fluid\" />\r\n            </div> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!-- ********** For Each Survey Display the Msg by splitting with ^ ********************** -->\r\n          <ng-container *ngIf=\"isEachSurveyAnswered\">\r\n            <div class=\"col-md-12 text-center mt-4\">\r\n              <h3 *ngIf=\"paymentMsg != ''\">{{paymentMsg}}</h3>\r\n              <h3 *ngIf=\"paymentMsg == ''\">Congratulations! Day {{currentSurveyDay}} <br>\r\n                completed! Click PAY ME to <br>\r\n                get {{surveyDetails?.currency}} {{surveyDetails?.paymentOffered}} (up to 3 business days). <br>\r\n                Do a survey tomorrow for {{surveyDetails?.currency}} {{surveyDetails?.paymentOffered}} <br>\r\n                more.\r\n              </h3>\r\n            </div>\r\n          </ng-container>\r\n          <div class=\"col-md-12 text-center mt-4\" *ngIf=\"surveyType != 'feedback' && !isEachSurveyAnswered\">\r\n            <h3 *ngIf=\"!isAllSurveysAnswered\">You can only claim <br>\r\n              payment upon completion <br> of the last survey!\r\n            </h3>\r\n            <h3 *ngIf=\"isAllSurveysAnswered && appId != 'mmind' && isSidOrSSId == 'ssid'\">\r\n              {{surveyDetails?.paymentMessage}}\r\n            </h3>\r\n            <h3 *ngIf=\"isAllSurveysAnswered && appId != 'mmind' && isSidOrSSId != 'ssid'\">Congratulations! You have <br>\r\n              finished all Surveys!\r\n              <!-- {{surveyDetails?.surveyGroupItems?.length}} {{surveyDetails?.surveyGroupItems?.length > 1 ?\r\n              'days'  : 'day' }}! -->\r\n              Click on <br> the Pay Me button and Receive <br>\r\n              <span class=\"text-primary\">{{surveyDetails?.currency}} {{surveyDetails?.paymentOffered}}</span>\r\n              within 3 business days.\r\n            </h3>\r\n            <h3 *ngIf=\"isAllSurveysAnswered && appId == 'mmind'\" class=\"\">Congratulations! You have <br> completed your\r\n              <br> registration! You will receive your payment <br> within 3 business days.\r\n            </h3>\r\n          </div>\r\n\r\n          <div class=\"col-md-12 text-center mt-4\" *ngIf=\"surveyType == 'feedback' && !isEachSurveyAnswered\">\r\n            <h3>\r\n              Thank you for answering this survey. <br>\r\n              Click on pay me button and receive <br>\r\n              <span class=\"text-primary\">\r\n                {{surveyDetails?.currency}} {{surveyDetails?.paymentOffered}}\r\n              </span> in 3 business days.\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- ******** Displays if Payment is not claimed ******************* -->\r\n      <div class=\"row text-center p-4 bottom-position\" *ngIf=\"!isPaymentClaimed\">\r\n        <div class=\"col-md-12 text-center\">\r\n          <p class=\"payme-des\" *ngIf=\"(isAllSurveysAnswered || isEachSurveyAnswered) && surveyType != 'feedback'\">\r\n            Click on Pay Me button\r\n          </p>\r\n          <button class=\"btn btn-mm-p\" (click)=\"onPayMeOrOkBtnClick()\">\r\n            <!-- btn-mm-p-disabled -->\r\n            {{(isAllSurveysAnswered || isEachSurveyAnswered) ? 'Pay Me' : 'Okay'}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- ******** Displays if Payment is claimed ******************* -->\r\n      <div class=\"row cont-cent mt-5\" *ngIf=\"isPaymentClaimed\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center mt-5\">\r\n            <!-- *ngIf=\"appId != 'mmind'\" -->\r\n            <div class=\"myr-icon-green mb-4\">\r\n              <div class=\"d-flex align-items-center justify-content-center\">\r\n                <h5 class=\"mr-2\">{{getCurrencySymbol(surveyDetails?.currency)}} </h5>\r\n                <h1>{{surveyDetails?.paymentOffered}}</h1>\r\n              </div>\r\n            </div>\r\n            <!-- <div *ngIf=\"appId == 'mmind'\">\r\n              <img src=\"../../../assets/media/success-logo.svg\" class=\"img-fluid p-success\" alt=\"\">\r\n            </div>\r\n            <p class=\"payment-succ-des\" *ngIf=\"appId == 'mmind'\">You have claimed your payment </p> -->\r\n            <!-- <p class=\"payment-succ-des\" *ngIf=\"appId != 'mmind'\">You have claimed {{surveyDetails?.currency}}\r\n              {{surveyDetails?.paymentOffered}} </p> -->\r\n            <p class=\"payment-succ-des\" *ngIf=\"isSidOrSSId == 'ssid'\">\r\n              {{surveyDetails?.claimMessage}}\r\n            </p>\r\n            <p class=\"payment-succ-des\" *ngIf=\"isSidOrSSId != 'ssid'\">You have claimed\r\n              <span class=\"text-primary\"> {{getCurrencySymbol(surveyDetails?.currency)}} {{surveyDetails?.paymentOffered}}</span>\r\n            <p class=\"payment-des\" *ngIf=\"isSidOrSSId != 'ssid'\">\r\n              Payment will be made to\r\n              <br>\r\n              <span class=\"text-primary\"> {{personMobileNumber}} </span><br>\r\n              as a virtual/mobile gift card\r\n              <!-- linked to your registered mobile wallet within 3 business days from the -->\r\n              <br> (redeemable stored value code).\r\n              <!-- {{ appId == 'mmind' ? '3 business days ' : '72 hours ' }}  -->\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row text-center ms-0 p-4 bottom-position\">\r\n          <div class=\"col-md-12 text-center\">\r\n            <button class=\"btn btn-mm-p\" (click)=\"goBack()\">\r\n              Okay\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- ********** Show the Qr Code info only if the Syrvey Type is shareqrcode ************* -->\r\n<app-qrcode-info *ngIf=\"showQRCodeInfo\" [reqFrom]=\"'claimInfoScreen'\" [qrCodeUrl]=\"qrCodeUrl\" [qrCode]=\"qrCode\"\r\n  (closeQRCode)=\"closeQRCode($event)\">\r\n</app-qrcode-info>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-claims-layout',\r\n  templateUrl: './claims-layout.component.html',\r\n  styleUrls: ['./claims-layout.component.scss']\r\n})\r\nexport class ClaimsLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ClaimInfoComponent } from './claim-info/claim-info.component';\r\nimport { ClaimsLayoutComponent } from './claims-layout/claims-layout.component';\r\nimport { QrcodeInfoComponent } from './qrcode-info/qrcode-info.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ClaimsLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '', redirectTo: 'list', pathMatch: 'full'\r\n      },\r\n      { path: 'list', component: ClaimInfoComponent },\r\n      { path: 'qrinfo', component: QrcodeInfoComponent },\r\n      {\r\n        path: '**', redirectTo: 'list', pathMatch: 'full'\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClaimsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ClaimsRoutingModule } from './claims-routing.module';\r\nimport { ClaimsLayoutComponent } from './claims-layout/claims-layout.component';\r\nimport { ClaimInfoComponent } from './claim-info/claim-info.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { QrcodeInfoComponent } from './qrcode-info/qrcode-info.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClaimsLayoutComponent,\r\n    ClaimInfoComponent,\r\n    QrcodeInfoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ClaimsRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ClaimsModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { ClaimsService } from '../claims.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-qrcode-info',\r\n  templateUrl: './qrcode-info.component.html',\r\n  styleUrls: ['./qrcode-info.component.scss']\r\n})\r\nexport class QrcodeInfoComponent implements OnInit {\r\n\r\n  @Input() qrCodeUrl: any;\r\n  @Input() qrCode: any;  \r\n  @Input() reqFrom: any;\r\n  @Output() closeQRCode = new EventEmitter();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private claimsService: ClaimsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // ********** Call the Get API when req is from the Home Page ************************\r\n    if (this.reqFrom != 'claimInfoScreen') {\r\n      this.checkQRCodeDetails();\r\n    }\r\n  }\r\n  checkQRCodeDetails() {\r\n    let params = {\r\n      SurveySetQRCode: localStorage.getItem('ssid'),\r\n      GeneratorBluenumber: true\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.claimsService.getSharedCodeDetails(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res['result']) {\r\n        this.qrCodeUrl = res['result']['qrImageUrl'];\r\n        this.qrCode = res['result']['qrCode'];\r\n      }\r\n    }, (error => {\r\n      this.router.navigateByUrl('home/info');\r\n    }));\r\n  }\r\n  onOkClick() {\r\n    if (this.reqFrom == 'claimInfoScreen') {\r\n      this.closeQRCode.emit({ close: true });\r\n    } else {\r\n      this.router.navigateByUrl('home/info');\r\n    }\r\n  }\r\n}\r\n","<div class=\"pma\">\r\n    <div class=\"container\">\r\n        <div *ngIf=\"qrCodeUrl\">\r\n            <div class=\"pay-screen mt-5 pt-5\">\r\n                <div class=\"row text-center\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"share-txt\">\r\n                            Share this QR code <br>\r\n                            with a coworker!\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <img [src]=\"qrCodeUrl\" class=\"img-fluid p-success\" alt=\"\" width=\"200px\" height=\"200px\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n\r\n                    <div class=\"col-md-12 text-center mt-4\">\r\n                        <div class=\"earn-txt\">\r\n                            {{qrCode}}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 text-center mt-4\">\r\n                        <div class=\"scan-txt\">\r\n                            They can earn $30 too!\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <div class=\"col-md-12 text-center mt-4\">\r\n                        <div class=\"earn-txt\">\r\n                            They earn RM25 <br>\r\n                            when they complete<br>\r\n                            and you also get RM5!\r\n                        </div>\r\n                    </div> -->\r\n                    <div class=\"col-md-12 text-center mt-4\">\r\n                        <div class=\"welcomet-text\">\r\n                            <span class=\"head-txt\"> MillionMakers™</span> <span class=\"text-primary\"> by\r\n                                Bluenumber®</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row text-center ms-0 p-4 bottom-position\">\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <button class=\"btn btn-mm-p\" (click)=\"onOkClick()\">\r\n                            Okay\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProfileDetails(bNumber: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Person/${bNumber}`);\r\n  }\r\n  getDataRequesDetailsById(surveyId: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/${surveyId}`)\r\n  }\r\n  updateProfileDetails(params: any): Observable<any> {\r\n    return this.http.put(`${environment.BlueNumberGlobalAPI}/api/v1/Person`, params);\r\n  }\r\n  updateProfileStatus(): Observable<any> {\r\n    return this.http.put(`${environment.BlueNumberGlobalAPI}/api/v1/Person/complete`, null);\r\n  }\r\n\r\n  uploadFileToSurvey(dataRequestId: any, params: any) {\r\n    return this.http.post(`${environment.BlueNumberDataReqAPI}/api/v1/File/${dataRequestId}`, params);\r\n  }\r\n\r\n  setConnectionRequestDetailsByCode(params: any): Observable<any> {\r\n    return this.http.post(`${environment.BlueNumberGlobalAPI}/api/v1/ConnectionRequestCode/ConnectionByCode`, params);\r\n  }\r\n\r\n  verifyOTP(params: any) {\r\n    return this.http.post(`${environment.BlueNumberDataReqAPI}/api/v1/OtpTracker/VerifyOTPUpdate`, params);\r\n  }\r\n\r\n  generateOTP(params: any) {\r\n    return this.http.post(`${environment.BlueNumberDataReqAPI}/api/v1/OtpTracker/GenerateOTP`, params);\r\n  }\r\n\r\n  isBlueNoQualified(params: any) {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataQualified/bluenumberids?ContextId=${params['ContextId']}&PhonenumbersorBluenumbers=${params['blueNo']}`);\r\n  }\r\n  checkSSICredentials(): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberCredentialsAPI}/api/v1/Account/CheckSSICredential`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSurveyDetailsbyQRCode(qrCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/QRCode/${qrCode}`);\r\n  }\r\n  getSurveyDetailsResponseForAnsweredQRCode(qrCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/ResponseOnly/QRCode/${qrCode}`);\r\n  }\r\n  getSurveyGroupByQRCode(qrCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/SurveyGroupStateBySS/QRCode/${qrCode}`);\r\n  }\r\n\r\n  getSurveyResponseCount(qrCode: any, registrationSurveyId: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/SurveyGroupResponseCount/QRCode/${qrCode}/${registrationSurveyId}`);\r\n  }\r\n  getDataRequesDetailsById(surveyId: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/${surveyId}`)\r\n  }\r\n  saveSurveyResponse(params: any): Observable<any> {\r\n    return this.http.post(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequestResponse`, params)\r\n  }\r\n  checkSurveyIsValidOrNot(rid: any, qid: any, sid: any): Observable<any> {\r\n   //return this.http.get(`https://bluenumber.global/mm_process/api/check_qualification.php?api_key=bluenumbermmtestapi2023&r_id=${rid}&q_id=${qid}&s_id=${sid}&env=${environment.envType}`);\r\n   return this.http.get(`${environment.BluenumberSurveyOTPValidationUrl}/api/check_qualification.php?api_key=bluenumbermmtestapi2023&r_id=${rid}&q_id=${qid}&s_id=${sid}&env=${environment.envType}`);\r\n  }\r\n  \r\n  getConnectionRequestDetailsByCode(connectionCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/ConnectionRequestCode/Bluenumber/${connectionCode}`);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}