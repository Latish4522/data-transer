{"version":3,"file":"src_app_my-surveys_my-surveys_module_ts.js","mappings":"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","sources":["./src/app/dashboard/survey.service.ts","./src/app/my-surveys/my-surveys-routing.module.ts","./src/app/my-surveys/my-surveys.module.ts","./src/app/my-surveys/survey-layout/survey-layout.component.ts","./src/app/my-surveys/survey-layout/survey-layout.component.html","./src/app/my-surveys/survey-list/survey-list.component.ts","./src/app/my-surveys/survey-list/survey-list.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSurveyDetailsbyQRCode(qrCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/QRCode/${qrCode}`);\r\n  }\r\n  getSurveyDetailsResponseForAnsweredQRCode(qrCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/ResponseOnly/QRCode/${qrCode}`);\r\n  }\r\n  getSurveyGroupByQRCode(qrCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/SurveyGroupStateBySS/QRCode/${qrCode}`);\r\n  }\r\n\r\n  getSurveyResponseCount(qrCode: any, registrationSurveyId: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/SurveyGroupResponseCount/QRCode/${qrCode}/${registrationSurveyId}`);\r\n  }\r\n  getDataRequesDetailsById(surveyId: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequest/${surveyId}`)\r\n  }\r\n  saveSurveyResponse(params: any): Observable<any> {\r\n    return this.http.post(`${environment.BlueNumberDataReqAPI}/api/v1/DataRequestResponse`, params)\r\n  }\r\n  checkSurveyIsValidOrNot(rid: any, qid: any, sid: any): Observable<any> {\r\n   //return this.http.get(`https://bluenumber.global/mm_process/api/check_qualification.php?api_key=bluenumbermmtestapi2023&r_id=${rid}&q_id=${qid}&s_id=${sid}&env=${environment.envType}`);\r\n   return this.http.get(`${environment.BluenumberSurveyOTPValidationUrl}/api/check_qualification.php?api_key=bluenumbermmtestapi2023&r_id=${rid}&q_id=${qid}&s_id=${sid}&env=${environment.envType}`);\r\n  }\r\n  \r\n  getConnectionRequestDetailsByCode(connectionCode: any): Observable<any> {\r\n    return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/ConnectionRequestCode/Bluenumber/${connectionCode}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SurveyLayoutComponent } from './survey-layout/survey-layout.component';\r\nimport { SurveyListComponent } from './survey-list/survey-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SurveyLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'list',\r\n        component: SurveyListComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: 'list',\r\n        pathMatch: 'full'\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MySurveysRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MySurveysRoutingModule } from './my-surveys-routing.module';\r\nimport { SurveyLayoutComponent } from './survey-layout/survey-layout.component';\r\nimport { SurveyListComponent } from './survey-list/survey-list.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SurveyLayoutComponent,\r\n    SurveyListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MySurveysRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class MySurveysModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-survey-layout',\r\n  templateUrl: './survey-layout.component.html',\r\n  styleUrls: ['./survey-layout.component.scss']\r\n})\r\nexport class SurveyLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SurveyService } from 'src/app/dashboard/survey.service';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { interval } from 'rxjs';\r\nimport { ConfigConstants } from 'src/app/models/constants';\r\n\r\n@Component({\r\n  selector: 'app-survey-list',\r\n  templateUrl: './survey-list.component.html',\r\n  styleUrls: ['./survey-list.component.scss']\r\n})\r\nexport class SurveyListComponent implements OnInit {\r\n\r\n  globalConstants = ConfigConstants;\r\n\r\n  streakDays: Array<any> = [];\r\n\r\n  surveyDetails: any = [];\r\n  surveyMsg: string = '';\r\n  timeCounter: any;\r\n  timerSubscription: any;\r\n  surveyState: number = 0;\r\n\r\n  currentSurveyIndex: number = 0;\r\n  firstSurveyAnswered: boolean = false;\r\n  surveyType: any = '';\r\n  claimType: any = '';\r\n\r\n  isEachClaimSurvey: boolean = false;\r\n\r\n  constructor(private surveyService: SurveyService, private sharedService: SharedService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.surveyType = localStorage.getItem('surveyType');\r\n    this.claimType = localStorage.getItem('claim');\r\n    if ((this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '') && this.claimType == ConfigConstants.eachSurvey) {\r\n      this.isEachClaimSurvey = true;\r\n    } else {\r\n      this.isEachClaimSurvey = false;\r\n    }\r\n    this.getSurveyListDetails();\r\n  }\r\n\r\n  getSurveyListDetails() {\r\n    this.sharedService.startLoader();\r\n    if (localStorage.getItem('ssid') == \"null\" || localStorage.getItem('ssid') == '') {\r\n      this.sharedService.successErrorMsg['message'] = \"Please scan QR code again.\";\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('home/messages');\r\n    }\r\n    this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.surveyDetails = res['result'];\r\n        localStorage.setItem('surveySetId', this.surveyDetails['id']);\r\n\r\n        if (this.surveyDetails == null || this.surveyDetails['surveyGroupItems'].length <= 0) {\r\n          this.surveyState = 1;\r\n          this.surveyMsg = \"Surveys are not available\";\r\n          return;\r\n        }\r\n        this.surveyDetails['surveyGroupItems'].forEach((item: any, index: number) => {\r\n          if (index == 0 && item['isAnswered']) {\r\n            this.firstSurveyAnswered = true;\r\n          }\r\n        });\r\n\r\n        let now: any = new Date(); // todays date\r\n        now.setHours(0, 0, 0, 0);\r\n        let pend: any = new Date(this.surveyDetails['endDate']);\r\n\r\n        pend = new Date(pend.getTime() + pend.getTimezoneOffset() * 60000);\r\n        console.log(\"DATE: \", pend);\r\n\r\n        let pduration = pend - now;\r\n        console.log(pduration);\r\n\r\n        if (pduration < 0) {\r\n          this.surveyState = 2;\r\n          this.surveyMsg = \"Survey program ended. We will notify when next program available.\";\r\n          return;\r\n        }\r\n        if (pduration == 0) {\r\n          let length: number = this.surveyDetails['surveyGroupItems'].length;\r\n          if (this.surveyDetails['surveyGroupItems'][length - 1]['isAnswered'] == true) {\r\n            this.surveyState = 2;\r\n            this.surveyMsg = \"Survey program ended. We will notify when next program available.\";\r\n            return;\r\n          }\r\n        }\r\n\r\n        this.sortSuveys();\r\n\r\n        if (this.surveyDetails['type'] != 'Hourly') {\r\n          this.dailySurveySSIDDetails(now);\r\n        } else {\r\n          let today: any = new Date();\r\n          today = new Date(today.getTime() + today.getTimezoneOffset() * 60000);\r\n\r\n          let start: any = new Date(this.surveyDetails['startDate']);\r\n          start = new Date(start.getTime() + start.getTimezoneOffset() * 60000);\r\n\r\n          let end: any = new Date(this.surveyDetails['endDate']);\r\n          end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n\r\n          let firstSurveyStartDate: any = new Date(this.surveyDetails['surveyGroupItems'][0]['startDate']);\r\n          firstSurveyStartDate = new Date(firstSurveyStartDate.getTime() + firstSurveyStartDate.getTimezoneOffset() * 60000);\r\n          firstSurveyStartDate.setHours(0, 0, 0, 0);\r\n\r\n          for (let i = 0; i < this.surveyDetails['surveyGroupItems'].length; i++) {\r\n            let item: any = this.surveyDetails['surveyGroupItems'][i];\r\n            if (!item['isAnswered']) {\r\n              this.currentSurveyIndex = i;\r\n              let duration = start - today;\r\n              if (duration == 0) {\r\n                //enable start survey buton\r\n                this.surveyState = 3;\r\n                this.surveyMsg = \"New survey is available!\";\r\n                break;\r\n              } else {\r\n                let a = end - today;\r\n                if (a >= 0) {\r\n                  let previousItem: any;\r\n                  let prevTime: any;\r\n                  let mins = this.surveyDetails['minutesDifference'];\r\n                  let newTime: any;\r\n                  previousItem = this.surveyDetails['surveyGroupItems'][i - 1];\r\n\r\n                  if (previousItem && previousItem['answeredTime']) {\r\n                    prevTime = new Date(previousItem['answeredTime']);\r\n                    prevTime = new Date(prevTime.getTime() + prevTime.getTimezoneOffset() * 60000);\r\n                    newTime = new Date(prevTime.getTime() + (Number(mins) * 60 * 1000));\r\n                    let diff = newTime - today;\r\n                    if (diff <= 0) {\r\n                      this.surveyState = 3;\r\n                      this.surveyMsg = \"New survey is available!\";\r\n                    } else if (diff > 0) {\r\n                      this.surveyState = 4;\r\n                      this.showHourlySurveyCounter(newTime);\r\n                      break;\r\n                    }\r\n                  } else {\r\n                    this.surveyState = 3;\r\n                    this.surveyMsg = \"New survey is available!\";\r\n                  }\r\n                  break;\r\n                }\r\n              }\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n      (error: any) => {\r\n        if (error.error.responseException.exceptionMessage == \"Survey is not found for QR:null\") {\r\n          this.router.navigateByUrl(`home/info`);\r\n          return;\r\n        }\r\n        console.log(\"Error: \", error);\r\n      });\r\n  }\r\n  dailySurveySSIDDetails(now: any) {\r\n    for (let i = 0; i < this.surveyDetails['surveyGroupItems'].length; i++) {\r\n      let item: any = this.surveyDetails['surveyGroupItems'][i];\r\n      if (item['isAnswered'] == false) {\r\n        let end: any = new Date(item['startDate']);\r\n        end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n        end.setHours(0, 0, 0, 0);\r\n        let duration = end - now;\r\n        if (duration == 0) {\r\n          //enable start survey buton\r\n          this.surveyState = 3;\r\n          this.surveyMsg = \"New survey is available!\";\r\n          break;\r\n        }\r\n        else if (duration > 0) {\r\n          this.surveyState = 4;\r\n          this.showCounter(item['startDate']);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  showHourlySurveyCounter(newTime: any) {\r\n    this.timerSubscription = interval(1000).subscribe(val => {\r\n      let now: any;\r\n      let end: any;\r\n      let days = 0, hours = 0, minutes = 0, seconds = 0;\r\n      now = new Date(); // todays date\r\n\r\n      let today: any = new Date();\r\n      today = new Date(today.getTime() + today.getTimezoneOffset() * 60000);\r\n\r\n      let duration = newTime - today;\r\n\r\n      if (duration <= 0) {\r\n        this.clearCounter();\r\n      }\r\n      days = Math.floor(duration / (1000 * 60 * 60 * 24));\r\n      hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\r\n      seconds = Math.floor((duration % (1000 * 60)) / 1000);\r\n      this.timeCounter = hours + 'hrs : ' + minutes +\r\n        'min : ' + seconds + 'secs';\r\n    });\r\n\r\n  }\r\n  sortSuveys() {\r\n    return this.surveyDetails['surveyGroupItems'].sort((a: any, b: any) => {\r\n      return <any>new Date(a['startDate']) - <any>new Date(b['startDate']);\r\n    });\r\n  }\r\n  getNumberSuffix(num: number) {\r\n    if (num == 1) {\r\n      return 'st';\r\n    } else if (num == 2) {\r\n      return 'nd';\r\n    } else if (num == 3) {\r\n      return 'rd';\r\n    } else {\r\n      return 'th';\r\n    }\r\n  }\r\n  showCounter(suveydate: any) {\r\n    this.timerSubscription = interval(1000).subscribe((val: any) => {\r\n      let now: any;\r\n      let end: any;\r\n      let days = 0, hours = 0, minutes = 0, seconds = 0;\r\n      now = new Date(); // todays date\r\n      end = new Date(suveydate);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      let duration = end - now;\r\n      if (duration <= 0) {\r\n        this.clearCounter();\r\n      }\r\n      days = Math.floor(duration / (1000 * 60 * 60 * 24));\r\n      hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\r\n      seconds = Math.floor((duration % (1000 * 60)) / 1000);\r\n      this.timeCounter = days + 'Days : ' + hours + 'Hours : ' + minutes +\r\n        'Minutes : ' + seconds + 'Seconds';\r\n    });\r\n  }\r\n  clearCounter() {\r\n    if (this.timerSubscription) {\r\n      this.timerSubscription.unsubscribe();\r\n    }\r\n    this.surveyState = 3;\r\n    this.surveyMsg = \"New survey is available!\";\r\n  }\r\n  goBack() {\r\n    this.router.navigateByUrl('home/info');\r\n  }\r\n  // *********** To add vertical height of the Progress bar based on Survey Count *************\r\n  getSurveyStyles() {\r\n    if (this.surveyDetails && this.surveyDetails['surveyGroupItems']) {\r\n      let totalSurveys = this.surveyDetails['surveyGroupItems'].length;\r\n      if (totalSurveys <= 1) {\r\n        return 'height: 0%';\r\n      } else {\r\n        let height = 0;\r\n        this.surveyDetails['surveyGroupItems'].forEach((survey: any, index: number) => {\r\n          if ((index + 1) < totalSurveys) {\r\n            if (survey['isAnswered']) {\r\n              // 170 => Circle Height 120 + Gap height 50\r\n              height = height + 170;\r\n            }\r\n          }\r\n        });\r\n        return `height: ${height}px`;\r\n      }\r\n    } else {\r\n      return 'height: 0%';\r\n    }\r\n  }\r\n  // *********** To add the pink color to Progress bar indicating Answered Survey *************\r\n  getVerticalLineStyle() {\r\n    if (this.surveyDetails && this.surveyDetails['surveyGroupItems']) {\r\n      let totalSurveys = this.surveyDetails['surveyGroupItems'].length;\r\n      if (totalSurveys <= 1) {\r\n        return 'height: 0%';\r\n      } else {\r\n        // 120 => Circle Height  Gap => 30\r\n        let height = (120 * totalSurveys) + (30 * (totalSurveys - 1));\r\n        return `height: ${height}px`;\r\n      }\r\n    } else {\r\n      return 'height: 0%';\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.timerSubscription) {\r\n      this.timerSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"pma\">\r\n  <div class=\"container\">\r\n    <div class=\"my_streaks mb-5 pb-5\">\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-12 d-flex align-items-center justify-content-between\">\r\n          <div>\r\n            <h1 class=\"pma-heading text-gray-1 \">\r\n              <i class=\"fas fa-chevron-left mouse-pointer pe-3\" (click)=\"goBack()\"></i>\r\n              <span>My Surveys</span>\r\n            </h1>\r\n          </div>\r\n          <div class=\"d-flex justify-content-end\">\r\n            <img src=\"../../../../../assets/media/MMlogo-svg.svg\" alt=\"\" class=\"img-fluid \" width=\"52px\" height=\"auto\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"row mb-3\">\r\n        <div class=\"col-md-12 d-flex flex-column px-4 justify-content-center text-center my_streaks-img\">\r\n          <img src=\"../../../assets/media/my_streaks.svg\" alt=\"\" class=\"img-fluid\">\r\n          <h2 class=\"survey-heading \">My Surveys </h2>\r\n          <h2 class=\"survey-heading\" *ngIf=\"surveyState <= 3\">{{surveyMsg}}</h2>\r\n    \r\n          <h2 class=\"survey-heading text-lightgrey\" *ngIf=\"surveyState == 4\">Next survey will be available in:</h2>\r\n          <h2 class=\"survey-heading fw-bold\" *ngIf=\"surveyState == 4\">{{timeCounter}}</h2>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 \">\r\n          <div class=\"d-flex justify-content-center mt-4\">\r\n            <div class=\"position-relative left-51\">\r\n              <div class=\"positioning\">\r\n                <!-- *************** Default 1st Survey will be in Pink color with border as\r\n                  light pink. Once the Survey is Answered then the border updates to dark shade\r\n                and DONE Text will be added ************************ -->\r\n                <div *ngFor=\"let surveys of surveyDetails?.surveyGroupItems; let i = index\"\r\n                  class=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <!-- [ngClass]=\"i == 0 ? 'circle-completed' :\r\n                  (currentSurveyIndex == i && !surveys?.isAnswered && surveyState <= 3) ? 'common-circle-top circle-first-active' :\r\n                     (surveys?.isAnswered ? 'common-circle-top circle-final-active' : 'common-circle-top circle-inactive')\"> -->\r\n                    <div class=\"common-circle\"\r\n                      [ngClass]=\"i == 0 ? (surveys?.isAnswered ? 'circle-final-active' : 'circle-first-active')  :\r\n                  (currentSurveyIndex == i && !surveys?.isAnswered && surveyState <= 3) ? 'common-circle-top circle-first-active' :\r\n                     (surveys?.isAnswered ? 'common-circle-top circle-final-active' : 'common-circle-top circle-inactive')\">\r\n                      <ng-container *ngIf=\"isEachClaimSurvey\">\r\n                        <span>\r\n                          {{i+1}} {{getNumberSuffix(i+1)}} Day\r\n                          <br> {{ surveys?.isAnswered ? 'DONE!' : '' }}\r\n                        </span>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"!isEachClaimSurvey\">\r\n                        <span *ngIf=\"i == 0\">Qualified</span>\r\n                        <span *ngIf=\"i != 0\">\r\n                          {{i}} {{getNumberSuffix(i)}} Day\r\n                          <br> {{ surveys?.isAnswered ? 'DONE!' : '' }}\r\n                        </span>\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf=\"surveys?.answeredTime\" class=\"survey-timedate-fs\">\r\n                    <span>\r\n                      {{ surveys?.answeredTime | date:'dd MMM y' }}\r\n                    </span>\r\n                    <span class=\"text-truncate text-wrap\">\r\n                      {{ surveys?.location[0] }}, {{ surveys?.location[1] }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- *********** Progress abr is displayed dynamically ****************** -->\r\n              <div class=\"vertical-line\" [style]=\"getVerticalLineStyle()\">\r\n                <div [ngClass]=\"firstSurveyAnswered ? 'vertical-line-progress' : 'line-border'\"\r\n                  [style]=\"getSurveyStyles()\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],"names":[],"sourceRoot":"webpack:///"}