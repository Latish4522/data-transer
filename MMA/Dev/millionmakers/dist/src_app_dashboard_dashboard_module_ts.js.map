{"version":3,"file":"src_app_dashboard_dashboard_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAKmC;;;;;AAO5B,MAAM,yBAAyB;IAIpC,YAAoB,MAAc,EACxB,KAAqB,EACrB,aAA4B,EAAU,gBAAkC;QAF9D,WAAM,GAAN,MAAM,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJlF,qBAAgB,GAAW,EAAE,CAAC;IAIwD,CAAC;IAEvF,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YAC5C,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE;gBAC/B,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oFAAoF;IACpF,YAAY;QACV,IAAI,MAAM,GAAG;YACX,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpC,UAAU,EAAE,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9E,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBAC3C,qBAAqB;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qEAAqE;IACrE,aAAa;QACX,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACxC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,qDAAY,EAAE,CAAC;QACf,8BAA8B;IAChC,CAAC;;kGAtCU,yBAAyB;uHAAzB,yBAAyB;QCZtC,yEAAuB;QAKb,8EAAkB;QAAA,gEAAI;QACtB,4EAAwB;QAAC,uDAAuB;QAAA,4DAAS;QACzD,kFACF;QAAA,4DAAI;QACJ,uEAAK;QAC4B,kJAAS,kBAAc,IAAC;QAAC,2EAAe;QAAA,4DAAS;QAChF,6EAAyD;QAA1B,kJAAS,mBAAe,IAAC;QAAC,kEAAM;QAAA,4DAAS;;QAL/C,0DAAuB;QAAvB,gGAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ1D;AAEA;;;;;;;;;;;;;;;;ACgCkBI,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAFuDA,IAAAA,wDAAAA;AACrDA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAGJA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAUEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAFyDA,IAAAA,wDAAAA;AACvDA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAGJA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAUEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAFwDA,IAAAA,wDAAAA;AACtDA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAGJA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAWEA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAF4DA,IAAAA,wDAAAA;AAC1DA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAGJA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAYIA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAFkDA,IAAAA,wDAAAA;AAChDA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAFJA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;;;;;AAJoEA,IAAAA,wDAAAA;AAClCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAKpCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAiBFA,IAAAA,4DAAAA;AAEEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AACAA,IAAAA,4DAAAA;AAEEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAKAA,IAAAA,4DAAAA;AAEEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AApHNA,IAAAA,4DAAAA,WAA6C,CAA7C,EAA6C,IAA7C,EAA6C,EAA7C;AACgCA,IAAAA,oDAAAA;AAAkBA,IAAAA,0DAAAA;AAChDA,IAAAA,4DAAAA,gBAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,WAA3B;AAEeA,IAAAA,oDAAAA;AAASA,IAAAA,0DAAAA;AACpBA,IAAAA,4DAAAA,0BAAgE,CAAhE,EAAgE,OAAhE,EAAgE,EAAhE;AAGIA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAUC,0CAAkC,MAAlC,EAAwCA,aAAxC,CAAV;AAA0D,KAA1D;AAFFD,IAAAA,0DAAAA;AAGAA,IAAAA,4DAAAA;AAAoEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAkBE,mBAAlB;AAA6B,KAA7B;AAClEF,IAAAA,wDAAAA;;AAGFA,IAAAA,0DAAAA;AACAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;AAEFA,IAAAA,4DAAAA,YAAK,EAAL,EAAK,WAAL;AACaA,IAAAA,oDAAAA;AAAUA,IAAAA,0DAAAA;AACrBA,IAAAA,4DAAAA,2BAAgE,EAAhE,EAAgE,OAAhE,EAAgE,EAAhE;AAGIA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAUG,0CAAkC,OAAlC,EAAyCA,cAAzC,CAAV;AAA4D,KAA5D;AAFFH,IAAAA,0DAAAA;AAGAA,IAAAA,4DAAAA;AAAqEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAkBI,mBAAlB;AAA6B,KAA7B;AACnEJ,IAAAA,wDAAAA;;AAGFA,IAAAA,0DAAAA;AACAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;AAEFA,IAAAA,4DAAAA,YAAK,EAAL,EAAK,WAAL;AACaA,IAAAA,oDAAAA;AAASA,IAAAA,0DAAAA;AACpBA,IAAAA,4DAAAA,2BAAgE,EAAhE,EAAgE,OAAhE,EAAgE,EAAhE;AAGIA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAUK,0CAAkC,MAAlC,EAAwCA,cAAxC,CAAV;AAA2D,KAA3D;AAFFL,IAAAA,0DAAAA;AAGAA,IAAAA,4DAAAA;AAAoEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAkBM,qBAAlB;AAA+B,KAA/B;AAClEN,IAAAA,wDAAAA;;AAGFA,IAAAA,0DAAAA;AACAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;AAEFA,IAAAA,4DAAAA,YAAK,EAAL,EAAK,WAAL;AACaA,IAAAA,oDAAAA;AAAMA,IAAAA,0DAAAA;AACjBA,IAAAA,4DAAAA,2BAAgE,EAAhE,EAAgE,OAAhE,EAAgE,EAAhE;AAGIA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAUO,0CAAkC,QAAlC,EAA0CA,gBAA1C,CAAV;AAA+D,KAA/D;AAFFP,IAAAA,0DAAAA;AAGAA,IAAAA,4DAAAA;AACEA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAkBQ,+BAAlB;AAAyC,KAAzC;AACAR,IAAAA,wDAAAA;;AAGFA,IAAAA,0DAAAA;AACAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;AAGJA,IAAAA,4DAAAA,iBAA8B,EAA9B,EAA8B,KAA9B,EAA8B,EAA9B,EAA8B,WAA9B;AAEeA,IAAAA,oDAAAA;AAAeA,IAAAA,0DAAAA;AAC1BA,IAAAA,4DAAAA,2BAAgE,EAAhE,EAAgE,OAAhE,EAAgE,EAAhE;AAEkCA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAUS,0CAAkC,MAAlC,EAAwCA,sBAAxC,CAAV;AAAmE,KAAnE;AADhCT,IAAAA,0DAAAA;AAEAA,IAAAA,4DAAAA;AAA+CA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAkBU,gCAAlB;AAA0C,KAA1C;AAC7CV,IAAAA,wDAAAA;;AAKFA,IAAAA,0DAAAA;AACAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;AAGJA,IAAAA,4DAAAA,gBAA6C,EAA7C,EAA6C,IAA7C,EAA6C,EAA7C;AAC0BA,IAAAA,oDAAAA;AAAKA,IAAAA,0DAAAA;AAC7BA,IAAAA,4DAAAA;AAA0BA,IAAAA,oDAAAA;AAAQA,IAAAA,0DAAAA;AAEpCA,IAAAA,4DAAAA,gBAAgC,EAAhC,EAAgC,IAAhC,EAAgC,EAAhC;AAC0BA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;AACtCA,IAAAA,4DAAAA;AAA0BA,IAAAA,oDAAAA;AAAWA,IAAAA,0DAAAA;AAEvCA,IAAAA,4DAAAA,YAAK,EAAL,EAAK,WAAL;AACaA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;AACzBA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AAEAA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AAEAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;AAEFA,IAAAA,4DAAAA,gBAA8B,EAA9B,EAA8B,QAA9B,EAA8B,EAA9B;AAC4BA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASW,6BAAT;AAA8B,KAA9B;AAA2DX,IAAAA,oDAAAA;AAAMA,IAAAA,0DAAAA;;;;;;;;;;;;;;;AAjHrFA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,oCAA2B,iBAA3B,EAA2BY,GAA3B;AAG6BZ,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,yDAAAA;AAIHA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAS1BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,qCAA4B,iBAA5B,EAA4Ba,GAA5B;AAG8Bb,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,yDAAAA;AAIJA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAS1BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,oCAA2B,iBAA3B,EAA2Bc,GAA3B;AAG6Bd,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,yDAAAA;AAIHA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAS1BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,sCAA6B,iBAA7B,EAA6Be,IAA7B;AAI+Bf,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,yDAAAA;AAILA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAM5BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIwDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,mCAA0B,iBAA1B,EAA0BgB,IAA1B;AAGtBhB,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,YAAAA,yDAAAA;AAMNA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAQNA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAMtBA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAECA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAMDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAECA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;AAoBDA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAgCEA,IAAAA,4DAAAA;AAEEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AACAA,IAAAA,4DAAAA;AAEEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;AAKAA,IAAAA,4DAAAA;AAEEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;;;;AAvCNA,IAAAA,qEAAAA;AACEA,IAAAA,4DAAAA;AAAmCA,IAAAA,oDAAAA;AAAaA,IAAAA,0DAAAA;AAEhDA,IAAAA,4DAAAA,cAA8B,CAA9B,EAA8B,IAA9B,EAA8B,EAA9B;AAC0BA,IAAAA,oDAAAA;AAASA,IAAAA,0DAAAA;AACjCA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAoBA,IAAAA,0DAAAA;AAC/CA,IAAAA,4DAAAA;AAAwBA,IAAAA,oDAAAA;AAAUA,IAAAA,0DAAAA;AAClCA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAqBA,IAAAA,0DAAAA;AAChDA,IAAAA,4DAAAA;AAAwBA,IAAAA,oDAAAA;AAAUA,IAAAA,0DAAAA;AAClCA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAsBA,IAAAA,0DAAAA;AACjDA,IAAAA,4DAAAA;AAAwBA,IAAAA,oDAAAA;AAAUA,IAAAA,0DAAAA;AAClCA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAsBA,IAAAA,0DAAAA;AACjDA,IAAAA,4DAAAA;AAAwBA,IAAAA,oDAAAA;AAAMA,IAAAA,0DAAAA;AAC9BA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAsBA,IAAAA,0DAAAA;AACjDA,IAAAA,4DAAAA;AAAwBA,IAAAA,oDAAAA;AAAIA,IAAAA,0DAAAA;AAC5BA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAoBA,IAAAA,0DAAAA;AAC/CA,IAAAA,4DAAAA;AAAwBA,IAAAA,oDAAAA;AAAOA,IAAAA,0DAAAA;AAC/BA,IAAAA,4DAAAA;AAA2BA,IAAAA,oDAAAA;AAAuBA,IAAAA,0DAAAA;AAEpDA,IAAAA,4DAAAA,YAAK,EAAL,EAAK,WAAL;AACaA,IAAAA,oDAAAA;AAAcA,IAAAA,0DAAAA;AACzBA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AAEAA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;AACAA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AAEAA,IAAAA,wDAAAA;AAIFA,IAAAA,0DAAAA;AAEFA,IAAAA,4DAAAA,gBAA8B,EAA9B,EAA8B,QAA9B,EAA8B,EAA9B;AAC4BA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASiB,6BAAT;AAA8B,KAA9B;AACxBjB,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;AAEJA,IAAAA,mEAAAA;;;;;AA1C+BA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAEAA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;AAMvBA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAECA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAMDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAECA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;;;;;AAzDbA,IAAAA,4DAAAA,WAA2C,CAA3C,EAA2C,MAA3C,EAA2C,EAA3C,EAA2C,CAA3C,EAA2C,KAA3C,EAA2C,CAA3C,EAA2C,WAA3C;AAGiBA,IAAAA,oDAAAA;AAASA,IAAAA,0DAAAA;AACpBA,IAAAA,4DAAAA;AACEA,IAAAA,uDAAAA;AAEAA,IAAAA,wDAAAA;AAGAA,IAAAA,wDAAAA;AAGFA,IAAAA,0DAAAA;AAEFA,IAAAA,4DAAAA,eAAkC,EAAlC,EAAkC,QAAlC,EAAkC,EAAlC;AAC4BA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAASkB,kBAAT;AAAmB,KAAnB;AACHlB,IAAAA,oDAAAA;AAAMA,IAAAA,0DAAAA;AAG/BA,IAAAA,wDAAAA;AAgDFA,IAAAA,0DAAAA;;;;;AA9DQA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAC0BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAGAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAMiBA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIlCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;;;;ADzIrB,MAAOmB,iBAAP,CAAwB;AAiJ5BC,cAAoBC,MAApB,EAA4CC,eAA5C,EAAsFC,QAAtF,EACUC,YADV,EAC6CC,aAD7C,EACmFC,aADnF,EAC+G;AAD3F;AAAwB;AAA0C;AAC5E;AAAmC;AAAsC;AAhJnF,gBAAe,EAAf;AACA,mBAAkB,EAAlB;AACA,4BAAuC,EAAvC;AACA,0BAAyB,EAAzB;AACA,uBAA2B;AACzBC,UAAI,EAAE,EADmB;AAEzBC,WAAK,EAAE,EAFkB;AAGzBC,WAAK,EAAE,EAHkB;AAIzBC,WAAK,EAAE,EAJkB;AAKzBC,UAAI,EAAE,EALmB;AAMzBC,YAAM,EAAE,EANiB;AAOzBC,aAAO,EAAE;AAPgB,KAA3B;AAUA,qBAAuB,KAAKT,YAAL,CAAkBU,KAAlB,CAAwB;AAC7CC,gBAAU,EAAE;AADiC,KAAxB,CAAvB;AAMA,iBAAQ,YAAR;AACA,6BAAoB,IAAIvC,uDAAJ,CAAgB,MAAhB,CAApB;AAEA,uBAAc,IAAIA,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,CAApB,CAAd;AACA,wBAAe,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,CAApB,CAAf;AACA,uBAAc,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,CAApB,CAAd;AACA,yBAAgB,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,CAApB,CAAhB;AACA,sBAAa,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,CAApB,CAAb;AACA,4BAA2B,CAA3B;AACA,uBAAc,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,EAAsBA,gEAAA,CAAqB,EAArB,CAAtB,EAAgDA,gEAAA,CAAqB,EAArB,CAAhD,CAApB,CAAd;AACA,gCAAuB,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,EAAsBA,gEAAA,CAAqB,CAArB,CAAtB,CAApB,CAAvB;AACA,sCAA6B,IAAID,uDAAJ,CAAgB,EAAhB,EAAoB,CAACC,+DAAD,CAApB,CAA7B;AAGA,iBAAkB,EAAlB,CA8G+G,CA9GzF;;AACtB,kBAAmB,EAAnB;AACA,kBAAmB,EAAnB;AACA,oBAAqB,EAArB;AACA,0BAAqC,EAArC;;AA8BQ,0BAAiB,CAAC0C,GAAD,EAAgBC,KAAhB,KAA2C;AAClE,YAAMC,WAAW,GAAGD,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEE,WAAP,EAApB;AAEA,aAAOH,GAAG,CAACI,MAAJ,CAAWC,IAAI,IAAIA,IAAI,CAACF,WAAL,GAAmBG,QAAnB,CAA4BJ,WAA5B,CAAnB,CAAP;AACD,KAJO;AA8EP;;AArGOK,cAAY,CAACN,KAAD,EAAc;AAChC,UAAMC,WAAW,GAAGD,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEE,WAAP,EAApB;AACA,WAAO,KAAKK,KAAL,CAAWJ,MAAX,CAAkBhB,IAAI,IAAIA,IAAI,CAACe,WAAL,GAAmBG,QAAnB,CAA4BJ,WAA5B,CAA1B,CAAP;AACD;;AAEOO,UAAQ,CAACR,KAAD,EAAc;AAC5B,UAAMC,WAAW,GAAGD,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEE,WAAP,EAApB;AAEA,WAAO,KAAKO,MAAL,CAAYN,MAAZ,CAAmBf,KAAK,IAAIA,KAAK,CAACc,WAAN,GAAoBG,QAApB,CAA6BJ,WAA7B,CAA5B,CAAP;AACD;;AAEOS,aAAW,CAACV,KAAD,EAAc;AAC/B,UAAMC,WAAW,GAAGD,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEE,WAAP,EAApB;AAEA,WAAO,KAAKS,MAAL,CAAYR,MAAZ,CAAmBS,MAAM,IAAIA,MAAM,CAACV,WAAP,GAAqBG,QAArB,CAA8BJ,WAA9B,CAA7B,CAAP;AACD;;AAEOY,eAAa,CAACb,KAAD,EAAc;AACjC,UAAMC,WAAW,GAAGD,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEE,WAAP,EAApB;AAEA,WAAO,KAAKY,QAAL,CAAcX,MAAd,CAAqBS,MAAM,IAAIA,MAAM,CAACV,WAAP,GAAqBG,QAArB,CAA8BJ,WAA9B,CAA/B,CAAP;AACD;;AAQOc,cAAY,CAACf,KAAD,EAAc;AAChC,QAAIA,KAAJ,EAAW;AACT,aAAO,KAAKgB,gBAAL,CACJ1D,GADI,CACAoC,KAAK,KAAK;AAAEH,YAAI,EAAEG,KAAK,CAACH,IAAd;AAAoBE,eAAO,EAAE,KAAKwB,cAAL,CAAoBvB,KAAK,CAACD,OAA1B,EAAmCO,KAAnC;AAA7B,OAAL,CADL,EAEJG,MAFI,CAEGT,KAAK,IAAIA,KAAK,CAACD,OAAN,CAAcyB,MAAd,GAAuB,CAFnC,CAAP;AAGD;;AACD,WAAO,KAAKF,gBAAZ;AACD;;AAEDG,qBAAmB;AACjB,QAAI5B,IAAI,GAAG,EAAX;AACA,SAAK6B,oBAAL,CAA0BC,gBAA1B;AACA,SAAKC,0BAAL,CAAgCD,gBAAhC;;AAEA,QAAI,KAAKE,cAAL,IAAuB,UAA3B,EAAuC;AACrChC,UAAI,GAAG,KAAKiC,WAAL,CAAiBxB,KAAxB;AACD,KAFD,MAEO,IAAI,KAAKuB,cAAL,IAAuB,YAA3B,EAAyC;AAC9ChC,UAAI,GAAG,KAAKA,IAAZ;AACA,WAAKkC,WAAL,CAAiBJ,gBAAjB;AACA,WAAKK,YAAL,CAAkBL,gBAAlB;AACA,WAAKM,WAAL,CAAiBN,gBAAjB;AACA,WAAKO,aAAL,CAAmBP,gBAAnB;AACA,WAAK1B,UAAL,CAAgB0B,gBAAhB;AACD,KAdgB,CAejB;;;AACA,QAAI,KAAKD,oBAAL,CAA0BS,OAA1B,IAAqC,KAAKP,0BAAL,CAAgCO,OAAzE,EAAkF;AAAE;AAAS;;AAC7F,QAAI,KAAKT,oBAAL,CAA0BpB,KAA1B,KAAoC,KAAKsB,0BAAL,CAAgCtB,KAAxE,EAA+E;AAC7E,WAAKf,aAAL,CAAmB6C,iBAAnB,CAAqC,OAArC,EAA8C,4BAA9C;AACA;AACD,KAHD,MAGO;AACL;AACA,UAAI,KAAKP,cAAL,IAAuB,UAA3B,EAAuC;AACrC,aAAKQ,eAAL,CAAqBxC,IAArB;AACD,OAFD,MAEO,IAAI,KAAKgC,cAAL,IAAuB,YAA3B,EAAyC;AAC9C;AACA,YAAI,KAAKS,wBAAL,EAAJ,EAAqC;AACnC,eAAK/C,aAAL,CAAmBgD,WAAnB;AACAC,oBAAU,CAAC,MAAK;AACd,iBAAKjD,aAAL,CAAmBkD,UAAnB;;AACA,gBAAI,KAAKH,wBAAL,EAAJ,EAAqC;AACnC,mBAAKD,eAAL,CAAqBxC,IAArB;AACD;AACF,WALS,EAKP,IALO,CAAV;AAMD;AACF;AACF;AACF,GA1H2B,CA2H5B;;;AACAyC,0BAAwB;AACtB,WAAO,KAAKP,WAAL,CAAiBW,KAAjB,IAA0B,KAAKV,YAAL,CAAkBU,KAA5C,IAAqD,KAAKT,WAAL,CAAiBS,KAAtE,IACF,KAAKR,aAAL,CAAmBQ,KADjB,IAC0B,KAAKzC,UAAL,CAAgByC,KADjD;AAED,GA/H2B,CAgI5B;;;AACAL,iBAAe,CAACxC,IAAD,EAAU;AACvB,SAAKN,aAAL,CAAmBgD,WAAnB;AACA,SAAKnD,eAAL,CAAqBuD,eAArB,CAAqC;AACnCC,cAAQ,EAAE/C,IADyB;AAEnCgD,iBAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAFsB;AAGnCC,uBAAiB,EAAE,KAAKtB,oBAAL,CAA0BpB;AAHV,KAArC,EAIG2C,SAJH,CAIcC,GAAD,IAAa;AACxB,UAAI,CAACA,GAAG,CAAC,SAAD,CAAR,EAAqB;AACnB,aAAK3D,aAAL,CAAmB6C,iBAAnB,CAAqC,SAArC,EAAgD,sCAAhD;AACA,aAAKjD,MAAL,CAAYgE,aAAZ,CAA0B,WAA1B;AACD;;AACD,WAAK5D,aAAL,CAAmBkD,UAAnB,GALwB,CAMxB;AACD,KAXD;AAYD;;AAODW,UAAQ;AACN,QAAIN,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAAhC,IAAwCD,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,MAAxE,IAAkFD,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,EAAtH,EAA0H;AACxH,WAAKM,yBAAL;AACD;AACF,GA1J2B,CA2J5B;;;AACAA,2BAAyB;AACvB,SAAK9D,aAAL,CAAmBgD,WAAnB;AACA,SAAK/C,aAAL,CAAmB8D,sBAAnB,CAA0CR,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA1C,EAAwEE,SAAxE,CAAkFC,GAAG,IAAG;AACtF,WAAK3D,aAAL,CAAmBkD,UAAnB;;AACA,UAAI,CAACS,GAAG,CAAC,SAAD,CAAR,EAAqB;AACnB,YAAIA,GAAG,CAAC,QAAD,CAAH,CAAc,oBAAd,CAAJ,EAAyC;AACvC,eAAK3D,aAAL,CAAmB6C,iBAAnB,CAAqC,MAArC,EAA6C,4BAA7C;AACA,eAAKjD,MAAL,CAAYgE,aAAZ,CAA0B,WAA1B;AACD;AACF;AACF,KARD;AASD;;AAEDI,UAAQ;AACN,SAAKhE,aAAL,CAAmBgD,WAAnB;AACA,SAAKnD,eAAL,CAAqBoE,cAArB,CAAoC,KAAK1B,WAAL,CAAiBxB,KAArD,EAA4D2C,SAA5D,CAAuEC,GAAD,IAAa;AACjF,WAAK3D,aAAL,CAAmBkD,UAAnB;;AACA,UAAI,CAACS,GAAG,CAAC,SAAD,CAAR,EAAqB;AACnB,aAAKO,WAAL,GAAmBP,GAAG,CAACQ,MAAvB;AACD;AACF,KALD,EAKIC,KAAK,IAAG;AACV,WAAKpE,aAAL,CAAmB6C,iBAAnB,CAAqC,OAArC,EAA8C,uBAA9C;AACD,KAPD;AAQD;;AAEDwB,UAAQ;AACN,QAAI,KAAKC,gBAAL,IAAyB,CAA7B,EAAgC;AAC9B;AACA,WAAK/B,WAAL,CAAiBgC,KAAjB;AACA,WAAKL,WAAL,GAAmB,EAAnB;AAEA,WAAKlE,aAAL,CAAmBgD,WAAnB;AACA,WAAKV,cAAL,GAAsB,YAAtB;AACA,WAAKzC,eAAL,CAAqB2E,YAArB,GAAoCd,SAApC,CAA+Ce,IAAD,IAAc;AAC1D,aAAKjC,WAAL,CAAiBkC,QAAjB,CAA0B,EAA1B;AACA,aAAKC,WAAL,CAAiB,OAAjB,EAA0B,MAA1B,EAAkC,QAAlC,EAA4C,MAA5C,EAAoD,gBAApD;AACA,aAAKrD,KAAL,GAAamD,IAAI,CAACN,MAAL,CAAYS,KAAzB,CAH0D,CAI1D;;AACA,aAAK5E,aAAL,CAAmBkD,UAAnB;AACA,aAAK2B,aAAL,GAAqB,KAAKrC,WAAL,CAAiBsC,YAAjB,CAA8BC,IAA9B,CACnBzG,yDAAS,CAAC,EAAD,CADU,EAEnBD,mDAAG,CAAC0C,KAAK,IAAI,KAAKM,YAAL,CAAkBN,KAAlB,CAAV,CAFgB,CAArB;AAID,OAVD;AAWD,KAlBD,MAkBO,IAAI,KAAKuD,gBAAL,IAAyB,CAA7B,EAAgC;AACrC,WAAKhC,cAAL,GAAsB,UAAtB,CADqC,CAErC;;AACA,WAAKqC,WAAL,CAAiB,MAAjB,EAAyB,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,gBAA5D;AACD;;AACD,SAAKxC,oBAAL,CAA0BoC,KAA1B;AACA,SAAKlC,0BAAL,CAAgCkC,KAAhC;AACD,GA/M2B,CAiN5B;;;AACAS,WAAS;AACP,SAAKhF,aAAL,CAAmBgD,WAAnB;AACA,SAAKnD,eAAL,CAAqBoF,aAArB,CAAmC,KAAKzC,WAAL,CAAiBzB,KAApD,EAA2D2C,SAA3D,CAAsEe,IAAD,IAAc;AACjF,WAAKhC,YAAL,CAAkBiC,QAAlB,CAA2B,EAA3B;AACA,WAAKlD,MAAL,GAAciD,IAAI,CAACN,MAAL,CAAYhE,KAA1B,CAFiF,CAGjF;;AACA,WAAKwE,WAAL,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,MAAnC,EAA2C,gBAA3C;AACA,WAAK3E,aAAL,CAAmBkD,UAAnB;AACA,WAAKgC,cAAL,GAAsB,KAAKzC,YAAL,CAAkBqC,YAAlB,CAA+BC,IAA/B,CACpBzG,yDAAS,CAAC,EAAD,CADW,EAEpBD,mDAAG,CAAC0C,KAAK,IAAI,KAAKQ,QAAL,CAAcR,KAAd,CAAV,CAFiB,CAAtB;AAID,KAVD;AAWD,GA/N2B,CAiO5B;;;AACAoE,WAAS;AACP,SAAKnF,aAAL,CAAmBgD,WAAnB;AACA,SAAKnD,eAAL,CAAqBuF,YAArB,CAAkC,KAAK5C,WAAL,CAAiBzB,KAAnD,EAA0D,KAAK0B,YAAL,CAAkB1B,KAA5E,EAAmF2C,SAAnF,CAA8Fe,IAAD,IAAc;AACzG,WAAK/B,WAAL,CAAiBgC,QAAjB,CAA0B,EAA1B;AACA,WAAKhD,MAAL,GAAc+C,IAAI,CAACN,MAAL,CAAYzC,MAA1B,CAFyG,CAIzG;;AACA,WAAKiD,WAAL,CAAiB,QAAjB,EAA2B,MAA3B,EAAmC,gBAAnC;AACA,WAAK3E,aAAL,CAAmBkD,UAAnB;AACA,WAAKmC,cAAL,GAAsB,KAAK3C,WAAL,CAAiBoC,YAAjB,CAA8BC,IAA9B,CACpBzG,yDAAS,CAAC,EAAD,CADW,EAEpBD,mDAAG,CAAC0C,KAAK,IAAI,KAAKU,WAAL,CAAiBV,KAAjB,CAAV,CAFiB,CAAtB;AAID,KAXD;AAYD,GAhP2B,CAkP5B;;;AACAuE,aAAW;AACT,SAAKtF,aAAL,CAAmBgD,WAAnB;AACA,SAAKnD,eAAL,CAAqB0F,cAArB,CAAoC,KAAK/C,WAAL,CAAiBzB,KAArD,EAA4D,KAAK0B,YAAL,CAAkB1B,KAA9E,EAAqF,KAAK2B,WAAL,CAAiB3B,KAAtG,EAA6G2C,SAA7G,CAAwHe,IAAD,IAAc;AACnI,WAAK9B,aAAL,CAAmB+B,QAAnB,CAA4B,EAA5B;AACA,WAAK7C,QAAL,GAAgB4C,IAAI,CAACN,MAAL,CAAYtC,QAA5B,CAFmI,CAInI;;AACA,WAAK8C,WAAL,CAAiB,MAAjB,EAAyB,gBAAzB;AACA,WAAK3E,aAAL,CAAmBkD,UAAnB;AACA,WAAKsC,gBAAL,GAAwB,KAAK7C,aAAL,CAAmBmC,YAAnB,CAAgCC,IAAhC,CACtBzG,yDAAS,CAAC,EAAD,CADa,EAEtBD,mDAAG,CAAC0C,KAAK,IAAI,KAAKa,aAAL,CAAmBb,KAAnB,CAAV,CAFmB,CAAxB;AAID,KAXD;AAYD,GAjQ2B,CAmQ5B;;;AACA0E,uBAAqB;AAEnB,SAAKzF,aAAL,CAAmBgD,WAAnB;AACA,SAAKnD,eAAL,CAAqB6F,iBAArB,CACE,KAAKlD,WAAL,CAAiBzB,KADnB,EAC0B,KAAK0B,YAAL,CAAkB1B,KAD5C,EACmD,KAAK2B,WAAL,CAAiB3B,KADpE,EAC2E,KAAK4B,aAAL,CAAmB5B,KAD9F,EAEE2C,SAFF,CAEae,IAAD,IAAc;AACxB,WAAK/D,UAAL,CAAgBgE,QAAhB,CAAyB,EAAzB;AACA,WAAKC,WAAL,CAAiB,MAAjB;AACA,WAAK5C,gBAAL,GAAwB0C,IAAI,CAACN,MAA7B;AACA,WAAKnE,aAAL,CAAmBkD,UAAnB;AACA,WAAKnB,gBAAL,GAAwB0C,IAAI,CAACN,MAAL,CAAY9F,GAAZ,CAAiB8C,IAAD,KAAgB;AACtDb,YAAI,EAAEa,IAAI,CAACb,IAD2C;AAEtDE,eAAO,EAAE,CAACW,IAAI,CAACX,OAAN;AAF6C,OAAhB,CAAhB,CAAxB;AAKA,WAAKmF,uBAAL,GAA+B,KAAKC,SAAL,CAAeC,GAAf,CAAmB,YAAnB,EAAkCf,YAAlC,CAA+CC,IAA/C,CAC7BzG,yDAAS,CAAC,EAAD,CADoB,EAE7BD,mDAAG,CAAC0C,KAAK,IAAI,KAAKe,YAAL,CAAkBf,KAAlB,CAAV,CAF0B,CAA/B;AAID,KAhBD;AAiBD,GAxR2B,CA2R5B;;;AACA+E,wBAAsB;;;AACpB,eAAKH,uBAAL,MAA4B,IAA5B,IAA4BI,aAA5B,GAA4B,MAA5B,GAA4BA,GAAErC,SAAF,CAAYC,GAAG,IAAG;AAC5C,UAAIc,IAAI,GAAGd,GAAG,CAACzC,MAAJ,CAAW8E,CAAC,IAAIA,CAAC,CAACxF,OAAF,CAAU,CAAV,KAAgB,KAAKE,UAAL,CAAgBK,KAAhD,CAAX;;AACA,UAAI0D,IAAI,IAAIA,IAAI,CAACxC,MAAL,GAAc,CAA1B,EAA6B;AAC3B,aAAK3B,IAAL,GAAYmE,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAZ;AACA,aAAKjE,OAAL,GAAe,KAAKE,UAAL,CAAgBK,KAA/B;AACD;AACF,KAN2B,CAA5B;AAOD;;AAGDkF,aAAW;AACT,SAAKrG,MAAL,CAAYgE,aAAZ,CAA0B,OAA1B;AACD;;AAEDe,aAAW,CAAC,GAAGuB,IAAJ,EAAe;AACxBA,QAAI,CAACC,OAAL,CAAaC,GAAG,IAAG;AACjB,cAAQA,GAAR;AACE,aAAK,MAAL;AACE,eAAK5D,WAAL,CAAiBkC,QAAjB,CAA0B,EAA1B;AACA,eAAKpD,KAAL,GAAa,EAAb;AACA,eAAKkB,WAAL,CAAiB+B,KAAjB;AACA;;AACF,aAAK,OAAL;AACE,eAAK9B,YAAL,CAAkBiC,QAAlB,CAA2B,EAA3B;AACA,eAAKlD,MAAL,GAAc,EAAd;AACA,eAAKiB,YAAL,CAAkB8B,KAAlB;AACA;;AACF,aAAK,MAAL;AACE,eAAK7B,WAAL,CAAiBgC,QAAjB,CAA0B,EAA1B;AACA,eAAKhD,MAAL,GAAc,EAAd;AACA,eAAKgB,WAAL,CAAiB6B,KAAjB;AACA;;AACF,aAAK,QAAL;AACE,eAAK5B,aAAL,CAAmB+B,QAAnB,CAA4B,EAA5B;AACA,eAAK7C,QAAL,GAAgB,EAAhB;AACA,eAAKc,aAAL,CAAmB4B,KAAnB;AACA;;AACF,aAAK,MAAL;AACE,eAAK7D,UAAL,CAAgBgE,QAAhB,CAAyB,EAAzB;AACA,eAAKpE,IAAL,GAAY,EAAZ;AACA,eAAKE,OAAL,GAAe,EAAf;AACA,eAAKE,UAAL,CAAgB6D,KAAhB;AACA;AA1BJ;AA4BD,KA7BD;AA8BD,GA1U2B,CA4U5B;;;AACA8B,2BAAyB,CAACC,KAAD,EAAaC,IAAb,EAA2BC,WAA3B,EAA2C;AAClEvD,cAAU,CAAC,MAAK;AACd,UAAIwD,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa3F,KAA/B;AACA,UAAI4F,YAAJ;;AACA,UAAIF,WAAW,IAAI,EAAnB,EAAuB;AACrBE,oBAAY,GAAGH,WAAW,CAACtF,MAAZ,CAAoBuD,IAAD,IAAeA,IAAI,CAACxD,WAAL,MAAsBwF,WAAW,CAACxF,WAAZ,EAAxD,CAAf,CADqB,CAErB;;AACA,YAAI0F,YAAY,CAAC1E,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,kBAAQsE,IAAR;AACE,iBAAK,MAAL;AACE,mBAAK/D,WAAL,CAAiB+B,KAAjB;AACA,mBAAKI,WAAL,CAAiB,OAAjB,EAA0B,MAA1B,EAAkC,QAAlC,EAA4C,MAA5C;AACA;;AACF,iBAAK,OAAL;AACE,mBAAKlC,YAAL,CAAkB8B,KAAlB;AACA,mBAAKI,WAAL,CAAiB,MAAjB,EAAyB,QAAzB,EAAmC,MAAnC;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKjC,WAAL,CAAiB6B,KAAjB;AACA,mBAAKI,WAAL,CAAiB,QAAjB,EAA2B,MAA3B;AACA;;AACF,iBAAK,QAAL;AACE,mBAAKhC,aAAL,CAAmB4B,KAAnB;AACA,mBAAKI,WAAL,CAAiB,MAAjB;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKjE,UAAL,CAAgB6D,KAAhB;AACA,mBAAKjE,IAAL,GAAY,EAAZ;AACA,mBAAKE,OAAL,GAAe,EAAf;AACA;AArBJ;AAuBD,SAxBD,MAwBO;AACL;AACA,kBAAQ+F,IAAR;AACE,iBAAK,MAAL;AACE,mBAAKvB,SAAL;AACA;;AACF,iBAAK,OAAL;AACE,mBAAKG,SAAL;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKG,WAAL;AACA;;AACF,iBAAK,QAAL;AACE,mBAAKG,qBAAL;AACA;;AACF,iBAAK,MAAL;AACE,mBAAKK,sBAAL;AACA;AAfJ;AAiBD;AACF,OAlDa,CAmDd;AACA;AACA;;AACD,KAtDS,EAsDP,IAtDO,CAAV;AAuDD;;AArY2B;;;mBAAjBpG,mBAAiBnB,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,8DAAAA,GAAAA,+DAAAA,CAAAA,oDAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,wEAAAA,GAAAA,+DAAAA,CAAAA,0DAAAA;AAAA;;;QAAjBmB;AAAiBkH;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACpC9BzI,MAAAA,4DAAAA,cAAmC,CAAnC,EAAmC,KAAnC,EAAmC,CAAnC,EAAmC,CAAnC,EAAmC,KAAnC,EAAmC,CAAnC,EAAmC,CAAnC,EAAmC,KAAnC,EAAmC,CAAnC,EAAmC,CAAnC,EAAmC,IAAnC,EAAmC,CAAnC,EAAmC,CAAnC,EAAmC,GAAnC,EAAmC,CAAnC;AAK4DA,MAAAA,wDAAAA;AAAA,eAAS0I,iBAAT;AAAsB,OAAtB;AAAwB1I,MAAAA,0DAAAA;AAC1EA,MAAAA,oDAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA,cAAkB,CAAlB,EAAkB,OAAlB,EAAkB,CAAlB;AAEIA,MAAAA,oDAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAA+CA,MAAAA,wDAAAA;AAAA;AAAA;AAE7CA,MAAAA,4DAAAA;AAA4BA,MAAAA,oDAAAA;AAAmBA,MAAAA,0DAAAA;AAC/CA,MAAAA,4DAAAA;AAA4BA,MAAAA,oDAAAA;AAAyBA,MAAAA,0DAAAA;AAIzDA,MAAAA,4DAAAA,gBAAkC,EAAlC,EAAkC,QAAlC,EAAkC,EAAlC;AAC4BA,MAAAA,wDAAAA;AAAA,eAAS0I,cAAT;AAAmB,OAAnB;AACH1I,MAAAA,oDAAAA;AAAMA,MAAAA,0DAAAA;AAGjCA,MAAAA,4DAAAA;AACEA,MAAAA,wDAAAA;AA2HFA,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACEA,MAAAA,wDAAAA;AAsEFA,MAAAA,0DAAAA;;;;AAlNmDA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAK3CA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AA+HAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;;;;;;;;;;;;;;;;;;;;;;;;ACvJ+C;AAEX;;;AAK3C,MAAM,eAAe;IAExB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,YAAY;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,sFAA+B,4BAA4B,CAAC,CAAC;IACzF,CAAC;IAED,aAAa,CAAC,QAAgB;QAC1B,MAAM,MAAM,GAAI,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,sFAA+B,mCAAmC,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAC1G,CAAC;IAED,YAAY,CAAC,QAAgB,EAAE,SAAiB;QAC5C,MAAM,MAAM,GAAI,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC/E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,sFAA+B,yCAAyC,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAChH,CAAC;IAED,cAAc,CAAC,QAAgB,EAAE,SAAiB,EAAE,QAAgB;QAChE,MAAM,MAAM,GAAI,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACrG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,sFAA+B,0CAA0C,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACjH,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,SAAiB,EAAE,QAAgB,EAAE,UAAkB;QACvF,MAAM,MAAM,GAAI,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC/H,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,sFAA+B,mDAAmD,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAC1H,CAAC;IAED,cAAc,CAAC,IAAY;QACvB,MAAM,MAAM,GAAI,IAAI,4DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,sFAA+B,4CAA4C,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACnH,CAAC;IAED,eAAe,CAAC,MAAW;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,sFAA+B,+BAA+B,EAAE,MAAM,CAAC,CAAC;IACrG,CAAC;;8EAnCQ,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJoB;AACsB;AAII;AAET;;;;;;;;;;;;;;;;;ICJrD,0EACkH;IAChF,0SAAS,yBAAiB,IAAC;IACzD,qEAA6F;IAC7F,2EAAe;IAAA,qEAAU;IAAA,4DAAO;;;IAIpC,0EAAyD;IAErD,qEAA6F;IAC/F,4DAAM;;;IAkCE,yEAAsD;IAAC,yEAAa;IAAA,4DAAK;;;IACzE,yEAAsD;IACpD,uDAAY;IAAA,gEAAI;IAChB,uDAAc;IAAA,gEAAI;IAClB,uDACF;IAAA,4DAAK;;;IAHH,0DAAY;IAAZ,yFAAY;IACZ,0DAAc;IAAd,2FAAc;IACd,0DACF;IADE,2FACF;;;;IAVJ,0EAGoE;IAA/B,4TAAS,4BAAoB,IAAC;IACjE,0EAA4C;IAC1C,+IAAyE;IACzE,+IAIK;IACP,4DAAM;;;IATN,iLAAwG;IAGzE,0DAAuB;IAAvB,2FAAuB;IACvB,0DAAuB;IAAvB,2FAAuB;;;IAP1D,0EAAwG;IACtG,2IAYM;IACR,4DAAM;;;IAZD,0DAA2B;IAA3B,+FAA2B;;;IAiB9B,yEACkH;IAChH,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,uFACF;;;;IAoBA,sEAA+E;IAE3E,0TAAS,4BAAoB,IAAC;IAC9B,+EACF;IAAA,4DAAI;;;IAEN,yEACqH;IACnH,0EAAc;IAAA,gEAAI;IAClB,oFACF;IAAA,4DAAK;;;IACL,yEAA8F;IAC5F,6EAAiB;IAAA,gEAAI;IACrB,0EAA2B;IAAA,uDAAgF;IAAA,4DAAO;;;IAAvF,0DAAgF;IAAhF,4PAAgF;;;IAvC/G,sEAA4F;IAG1F,yIAGK;IAoBL,2IAKM;IACN,yIAIK;IACL,yIAGK;IACP,4DAAM;;;IArCD,0DAA6G;IAA7G,iNAA6G;IAsB1G,0DAAuE;IAAvE,mMAAuE;IAO1E,0DAAgH;IAAhH,4PAAgH;IAIzE,0DAAkD;IAAlD,sKAAkD;;;IAxDpG,8EAAwD;IAGlD,qIAcM;IAEN,qIAyCM;IACR,4DAAM;;;IA1DuE,0DAA2B;IAA3B,8FAA2B;IAgBhG,0DAAoF;IAApF,4KAAoF;;;IAuDtF,wEAA0D;IAAA,qHAChC;IAAA,4DAAI;;;IAC9B,wEAA+C;IAAA,yHAC1C;IAAA,4DAAI;;;IACT,wEAA8E;IAC5E,qHACF;IAAA,4DAAI;;;IAPN,sEAAsD;IACpD,6IAC8B;IAC9B,6IACS;IACT,6IAEI;IACN,4DAAM;;;IAPA,0DAAsB;IAAtB,0FAAsB;IAEtB,0DAAsB;IAAtB,0FAAsB;IAEtB,0DAAsB;IAAtB,0FAAsB;;;IAS5B,yEACkH;IAChH,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,uFACF;;;IAEA,yEAAuG;IACrG,kFACF;IAAA,4DAAK;;;IACL,wEAAgF;IAC9E,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,uFACF;;;IACA,yEAAwF;IACtF,mFAAuB;IAAA,gEAAI;IAC3B,qFAAyB;IAAA,gEAAI;IAC7B,2EAA2B;IACzB,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,+FACF;;;IAEF,yEAAuF;IACrF,gFAAoB;IAAA,gEAAI;IACxB,2EAA2B;IACzB,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,+FACF;;;;IAEF,sEAA+E;IAE3E,0TAAS,4BAAoB,IAAC;IAC9B,+EACF;IAAA,4DAAI;;;IAEN,yEAC6I;IAC3I,0EAAc;IAAA,gEAAI;IAClB,oFACF;IAAA,4DAAK;;;IACL,yEAA8F;IAC5F,6EAAiB;IAAA,gEAAI;IACrB,0EAA2B;IAAA,uDAAgF;IAAA,4DAAO;;;IAAvF,0DAAgF;IAAhF,4PAAgF;;;;IAE7G,wEAEiC;IAA/B,yTAAS,4BAAoB,IAAC;IAC9B,uDACF;IAAA,4DAAI;;;IAHF,sJAAqF;IAErF,0DACF;IADE,8LACF;;;;IAEA,wEAEiC;IAA/B,yTAAS,4BAAoB,IAAC;IAC9B,+EACF;IAAA,4DAAI;;;IAHF,sJAAqF;;;IA/DzF,sEAA4F;IAG1F,2IAQM;IAMN,yIAGK;IAEL,yIAEK;IACL,uIAEI;IACJ,yIAMK;IACL,yIAKK;IACL,2IAKM;IACN,yIAIK;IACL,yIAGK;IACL,yIAII;IAEJ,yIAII;IACN,4DAAM;;;IAhEE,0DAA8C;IAA9C,0HAA8C;IAejD,0DAA6G;IAA7G,iNAA6G;IAIpF,0DAAyE;IAAzE,6JAAyE;IAGxE,0DAAiD;IAAjD,6HAAiD;IAGpC,0DAA4C;IAA5C,wHAA4C;IAO5C,0DAA2C;IAA3C,uHAA2C;IAM/E,0DAAuE;IAAvE,mMAAuE;IAO1E,0DAAwI;IAAxI,4RAAwI;IAIjG,0DAAkD;IAAlD,sKAAkD;IAInD,0DAA+C;IAA/C,2HAA+C;IAMnC,0DAA+C;IAA/C,2HAA+C;;;IAQpG,yEAAkE;IAC7D,yEAAc;IAAA,gEAAI;IAAC,8FAAkC;IAAA,gEAAI;IAAC,4EAAgB;IAAA,4DAAI;;;IAEnF,yEAAkE;IAChE,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,uFACF;;;;IANF,sEAAsE;IACpE,yIAEK;IACL,yIAEK;IACL,wEACwF;IADhD,oTAAS,4BAAoB,IAAC;IAEpE,mEACF;IAAA,4DAAI;;;IATsC,0DAAsB;IAAtB,0FAAsB;IAGtB,0DAAsB;IAAtB,0FAAsB;IAI9D,0DAAqF;IAArF,sJAAqF;;;IAOvF,wEAAgE;IAC9D,yEAAwB;IACtB,2FACF;IAAA,4DAAK;IACP,qEAAe;;;IAGb,yEAAiD;IAC5C,yEAAc;IAAA,gEAAI;IAAC,qGACpB;IAAA,gEAAI;IAAC,8FACP;IAAA,4DAAI;;;IAEN,yEAAkE;IAChE,gFAAoB;IAAA,gEAAI;IACxB,2EAA2B;IACzB,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,+FACF;;;IAEF,yEAA2F;IACzF,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,uFACF;;;IACA,yEAA+F;IAC7F,qFAAyB;IAAA,gEAAI;IAAC,wEAChC;IAAA,4DAAK;;;IACL,yEAA8F;IAC5F,6EAAiB;IAAA,gEAAI;IACrB,0EAA2B;IACzB,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,8PACF;;;;IAEF,wEAEwF;IAF3C,uUAAS,4BAAoB,IAAC;IAGzE,yEACF;IAAA,4DAAI;;;IAFF,sJAAqF;;;IAGvF,yEAAgD;IAC3C,4GAAiD;IAAA,gEAAI;IAAC,iEACvD;IAAA,0EAA2B;IACzB,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,oOACF;;;IAjCN,wEAAuF;IACrF,wJAIK;IACL,wJAKK;IACL,wJAEK;IACL,wJAEK;IACL,wJAKK;IACL,sJAII;IACJ,wJAMK;IACP,qEAAe;;;IAnCY,0DAAsB;IAAtB,0FAAsB;IAKL,0DAAsB;IAAtB,0FAAsB;IAMtB,0DAA+C;IAA/C,2HAA+C;IAG/C,0DAAmD;IAAnD,uKAAmD;IAGnD,0DAAkD;IAAlD,sKAAkD;IAOzF,0DAA+C;IAA/C,2HAA+C;IAI1B,0DAAsB;IAAtB,0FAAsB;;;IArClD,sEAAoD;IAElD,6JAIe;IAEf,6JAoCe;IAEjB,4DAAM;;;IA5CW,0DAA+C;IAA/C,2HAA+C;IAM/C,0DAAsE;IAAtE,sJAAsE;;;IA9F7F,8EAAwD;IAGlD,qEAA8F;IAC9F,uIAmEM;IAEN,qIAWM;IAEN,qIA8CM;IACR,4DAAM;;;IAjIE,0DAAoF;IAApF,4KAAoF;IAqEpF,0DAA8D;IAA9D,+IAA8D;IAa9D,0DAA4C;IAA5C,sHAA4C;;;;IA0DpD,0EACiD;IAC1B,sTAAS,0BAAkB,IAAC;IAC/C,qEAAmF;IACnF,yEAAa;IAAA,qEAAU;IAAA,4DAAK;;;IAJb,mJAA2E;;;;IAO9F,0EAA2F;IACpE,sTAAS,oBAAY,IAAC;IACzC,qEAA6E;IAC7E,qEAAI;IAAA,8DAAG;IAAA,4DAAK;;;;IAGhB,0EAAoG;IAClE,sTAAS,yBAAiB,IAAC;IACzD,qEAA0E;IAC1E,qEAAI;IAAA,qEAAU;IAAA,4DAAK;;;;IAGvB,0EACiD;IAC1B,sTAAS,qBAAa,IAAC;IAC1C,qEAA8E;IAC9E,qEAAI;IAAA,+DAAI;IAAA,4DAAK;;;IAJE,qHAAqD;;;;IASxE,0EACkU;IAC1Q,oTAAS,wBAAgB,IAAC;IAC9E,6EACF;IAAA,4DAAI;;;IAGN,0EAAmE;IAC9C,oIAAyE;IAAA,0EACnE;IAAC,uDAAiF;IAAA,4DAAO;IAClH,wEAAuB;IAAA,4HAAiE;IAAA,4DAAI;;;IADlE,0DAAiF;IAAjF,8PAAiF;;;;IAe3G,0EAAqF;IACxC,0TAAS,wBAAgB,IAAC;IAAC,qEAAU;IAAA,gEAAI;IAAC,6EACrF;IAAA,4DAAI;;;;IAZR,0EAC0F;IAGnD,sTAAS,wBAAgB,IAAC;IAC7D,0EAAsF;IACnE,uDAA8C;IAAA,4DAAK;IACpE,qEAAI;IAAA,uDAAiC;IAAA,4DAAK;IAG9C,2IAGM;IACR,4DAAM;;;IAXF,0DAA0F;IAA1F,0MAA0F;IAGvE,0DAA8C;IAA9C,iKAA8C;IAC3D,0DAAiC;IAAjC,4IAAiC;IAGT,0DAAmD;IAAnD,uKAAmD;;;;IAyBnF,0EAAqF;IACxC,0TAAS,wBAAgB,IAAC;IAAC,qEAAU;IAAA,gEAAI;IAAC,6EACrF;IAAA,4DAAI;;;;IApBR,0EACqE;IAW9B,sTAAS,wBAAgB,IAAC;IAC7D,0EAAsF;IACnE,uDAA8C;IAAA,4DAAK;IACpE,qEAAI;IAAA,uDAAiC;IAAA,4DAAK;IAG9C,2IAGM;IACR,4DAAM;;;IAXF,0DAA0F;IAA1F,0MAA0F;IAGvE,0DAA8C;IAA9C,iKAA8C;IAC3D,0DAAiC;IAAjC,4IAAiC;IAGT,0DAAmD;IAAnD,uKAAmD;;;IArFzF,8EAAkF;IAQ9E,qIAMM;IACN,qIAKM;IACN,qIAKM;IACN,qIAMM;IAGN,qIAKM;IAEN,qIAIM;IAGN,qIAcM;IAGN,qIAsBM;IACR,4DAAM;;;IAjFD,0DAA4C;IAA5C,sHAA4C;IAM3B,0DAAqE;IAArE,sJAAqE;IAM5D,0DAAqE;IAArE,sJAAqE;IAO/F,0DAA4C;IAA5C,sHAA4C;IAS5C,0DAA6T;IAA7T,8lBAA6T;IAM7S,0DAA8C;IAA9C,wHAA8C;IAQ9D,0DAAqF;IAArF,6KAAqF;IAiBrF,0DAAgE;IAAhE,iJAAgE;;;;IAoE7D,0EAAoF;IACxC,iUAAS,yBAAgB,IAAC;IAAC,qEAAU;IAAA,gEAAI;IAAC,6EACpF;IAAA,4DAAI;;;IATR,0EAAuF;IAGhE,uDAA8C;IAAA,4DAAK;IACpE,qEAAI;IAAA,uDAAiC;IAAA,4DAAK;IAG9C,iJAGM;IACR,4DAAM;;;IARiB,0DAA8C;IAA9C,iKAA8C;IAC3D,0DAAiC;IAAjC,4IAAiC;IAGV,0DAAmD;IAAnD,uKAAmD;;;;IAnB9F,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAC1D,0EAA+C;IAAvB,qTAAS,qBAAY,IAAC;IAC5C,wEAAgF;IAClF,4DAAM;IAER,0EAAkC;IAMxB,2IAWM;IACR,4DAAM;IAIN,2EAA8D;IACpC,+EAAmB;IAAA,iEAAI;IAAA,4EAA6B;IAAA,wDACvC;IAAA,4DAAO;IAAC,iFAAoB;IAAA,iEAAI;IACnE,qEACF;IAAA,4DAAK;IAKb,2EAA0C;IAEyC,yTAAS,qBAAY,IAAC;IACnG,kEACF;IAAA,4DAAS;;;IA7BuC,2DAAyC;IAAzC,mHAAyC;IAiBT,0DACvC;IADuC,uPACvC;;;;IAmB/C,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAE5D,0EAAkC;IAG5B,iFAAqB;IAAA,gEAAI;IACzB,gIACF;IAAA,4DAAM;IAER,0EAA0C;IAEyC,yTAAS,4BAAmB,IAAC;IAC1G,kEACF;IAAA,4DAAS;;;;IA4BP,2EAAoF;IAElE,2XAAS,mCAAqB,IAAC;IAD/C,4DACgD;;;;IADX,0DAA2B;IAA3B,kGAA2B;IAAhD,sEAAQ;;;IAI5B,2EAAmE;IAAA,0EAAe;IAAA,4DAAM;;;;IA1B9F,0EAAyD;IAC/B,iEAAM;IAAA,4DAAK;IACnC,0EAAkD;IAA1B,qTAAS,wBAAe,IAAC;IAC/C,wEAAgF;IAClF,4DAAM;IAKR,2EAA6B;IAGvB,uDACF;IAAA,4DAAK;IAIP,2EAAwB;IAChB,6TAAY,4BAAmB,IAAC;IAEpC,4EAAgD;IAC9C,4IAGM;IACR,4DAAM;IACN,4IAAwF;IACxF,+EAA6D;IAAA,oEAAQ;IAAA,4DAAS;;;IAf9E,0DACF;IADE,kKACF;IAKuC,0DAAqB;IAArB,sFAAqB;IAGC,0DAAe;IAAf,sFAAe;IAK3B,0DAAkB;IAAlB,sFAAkB;;;;IAQvE,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAE5D,0EAAkC;IAG5B,uGAA2C;IAAA,gEAAI;IAC/C,yIAA6E;IAAA,gEAAI;IACjF,gGACF;IAAA,4DAAM;IAER,2EAA0C;IAEyC,yTAAS,qBAAY,IAAC;IACnG,kEACF;IAAA,4DAAS;;;;IAOf,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAC1D,0EAA+C;IAAvB,qTAAS,qBAAY,IAAC;IAC5C,wEAAgF;IAClF,4DAAM;IAER,0EAAkC;IAI1B,+HAGF;IAAA,4DAAI;IAGR,2EAA0C;IAGpC,yTAAS,+BAAsB,IAAC;IAChC,6EACF;IAAA,4DAAS;;AD1eV,MAAM,6BAA6B;IAoExC,YAAoB,MAAc,EACxB,aAA4B,EAAU,KAAqB,EAC3D,aAA4B,EAC5B,aAA4B,EAC5B,gBAAkC,EAAU,YAAsB,EAC1E,MAAsB;QALJ,WAAM,GAAN,MAAM,CAAQ;QACxB,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;QAC3D,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAhE5E,oBAAe,GAAG,qEAAe,CAAC;QAElC,aAAQ,GAAQ,EAAE,CAAC;QACnB,iBAAY,GAAQ,EAAE,CAAC;QAEvB,kBAAa,GAAQ,EAAE,CAAC;QAExB,kBAAa,GAAe,EAAE,CAAC;QAE/B,sBAAiB,GAAQ,EAAE,CAAC;QAK5B,kBAAa,GAAQ,EAAE,CAAC;QAExB,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,uBAAkB,GAAY,KAAK,CAAC;QACpC,uBAAkB,GAAY,KAAK,CAAC;QAGpC,yBAAoB,GAAY,KAAK,CAAC;QACtC,qBAAgB,GAAW,CAAC,CAAC;QAC7B,qBAAgB,GAAW,CAAC,CAAC;QAC7B,sBAAiB,GAAY,KAAK,CAAC;QACnC,iBAAY,GAAQ,EAAE,CAAC;QACvB,UAAK,GAAQ,EAAE,CAAC;QAChB,aAAQ,GAAQ,EAAE,CAAC;QAEnB,eAAU,GAAQ,EAAE,CAAC;QACrB,cAAS,GAAQ,EAAE,CAAC;QACpB,gBAAW,GAAW,EAAE,CAAC;QACzB,yBAAoB,GAAY,KAAK,CAAC;QACtC,kBAAa,GAAY,KAAK,CAAC;QAC/B,mBAAc,GAAY,IAAI,CAAC;QAE/B,aAAQ,GAAQ,CAAC,CAAC;QAClB,cAAS,GAAQ,CAAC,CAAC;QAGnB,cAAS,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAErD,iBAAY,GAAY,KAAK,CAAC;QAC9B,kBAAa,GAAG,UAAU,CAAC;QAE3B,wBAAmB,GAAQ,EAAE,CAAC;QAK9B,yBAAoB,GAAQ,EAAE,CAAC;QAE/B,qBAAgB,GAAQ,uCAAuC,CAAC;QAChE,kBAAa,GAAe;YAC1B,6CAA6C;YAC7C,EAAE,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,uCAAuC,EAAE;SAC/E,CAAC;QACF,uCAAkC,GAAY,KAAK,CAAC;QACpD,2BAAsB,GAAY,KAAK,CAAC;QAQtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,QAAa;QACvB,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC5B,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,qDAAS,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAGD,QAAQ;QACN,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAE1C,uDAAuD;QACvD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACjD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE;gBAC5B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACxD;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAExC,6DAA6D;QAC7D,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YAC7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,EAAE;YAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC3B;QAED,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,UAAU;QACR,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;IAEhD,CAAC;IACD,2FAA2F;IAC3F,eAAe;QACb,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,EAAE;YACrH,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,EAAE;YACzF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;YACzC,IAAI,CAAC,GAAG,GAAG,gCAAgC,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,OAAO;SACR;aAAM;YACL,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;IACH,CAAC;IACD,oFAAoF;IACpF,qBAAqB;QACnB,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1F,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,GAAG,GAAQ,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YACzC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,IAAI,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YACxD,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAE5B,IAAI,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC;YAC3B,gFAAgF;YAChF,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,mEAAmE,CAAC;gBAC/E,OAAO;aACR;YAED,IAAI,GAAG,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YACvD,4DAA4D;YAE5D,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YAChE,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzB,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;YACzB,oGAAoG;YACpG,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,2BAA2B;gBAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,8BAA8B,CAAC;aAC3C;YACD,8FAA8F;iBACzF,IAAI,QAAQ,GAAG,CAAC,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;aACnD;QACH,CAAC,EACC,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,iBAAiB,EAAE;gBACxF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;gBACzC,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC;gBACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;gBAC5F,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,6CAA6C,CAAC;gBACzD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,kBAAkB;gBACxC,IAAI,CAAC,GAAG,GAAG,kDAAkD,CAAC;gBAC9D,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,oFAAoF;IACpF,wBAAwB;QACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,yCAAyC,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACxG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qFAAqF;IACrF,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtF,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YACnC,IAAI,OAAO,GAAG;gBACZ,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;gBAChD,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;gBACpD,oBAAoB,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC;gBAChE,yBAAyB,EAAE,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC;aAC3E,CAAC;YACF,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9D,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAEhE,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,2BAA2B,CAAC;gBACvC,OAAO;aACR;YACD,sEAAsE;YACtE,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC3D,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC9D,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;oBACtB,KAAK,EAAE,CAAC;iBACT;YACH,CAAC,CAAC,CAAC;YACH,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,IAAI,KAAK,IAAI,CAAC,EAAE;gBACxE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACnC;YACD,IAAI,GAAG,GAAQ,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YACzC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,IAAI,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YAExD,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,KAAK,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3D,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YAEtE,+FAA+F;YAC/F,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;gBAC/D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;gBACpC,OAAO;aACR;YAED,IAAI,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAEvB,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,mEAAmE,CAAC;gBAC/E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,uCAAuC;gBACvF,OAAO;aACR;YACD,IAAI,SAAS,IAAI,CAAC,EAAE;gBAClB,IAAI,MAAM,GAAW,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC;gBACnE,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;oBAC5E,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,GAAG,GAAG,mEAAmE,CAAC;oBAC/E,OAAO;iBACR;aACF;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,kEAAkE;YAClE,IAAI,GAAG,GAAW,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC;YAChE,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;aACjF;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YAC3E,mEAAmE;YACnE,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;gBAC1C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,KAAK,GAAQ,IAAI,IAAI,EAAE,CAAC;gBAC5B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAEtE,IAAI,KAAK,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3D,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAEtE,IAAI,GAAG,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvD,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAEhE,oGAAoG;gBACpG,sHAAsH;gBACtH,6CAA6C;gBAE7C,0CAA0C;gBAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE;oBACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAC/B;gBACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBACpF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBAG3E,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAEpF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtE,IAAI,IAAI,GAAQ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1D,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;wBACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;wBACjC,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACjB,2BAA2B;4BAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,6CAA6C;4BAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;gCACtE,4DAA4D,CAAC;4BAC/D,MAAM;yBACP;6BAAM;4BACL,IAAI,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;4BACpB,IAAI,CAAC,IAAI,CAAC,EAAE;gCACV,IAAI,YAAiB,CAAC;gCACtB,IAAI,QAAa,CAAC;gCAClB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;gCACnD,IAAI,OAAY,CAAC;gCACjB,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC7D;8GAC8E;gCAC9E,IAAI,YAAY,IAAI,YAAY,CAAC,cAAc,CAAC,EAAE;oCAChD,QAAQ,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;oCAClD,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;oCAC/E,OAAO,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oCACpE,IAAI,IAAI,GAAG,OAAO,GAAG,KAAK,CAAC;oCAC3B,IAAI,IAAI,IAAI,CAAC,EAAE;wCACb,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;wCACrB,6CAA6C;wCAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;4CACtE,4DAA4D,CAAC;qCAChE;yCAAM,IAAI,IAAI,GAAG,CAAC,EAAE;wCACnB,6EAA6E;wCAC7E,IAAI,CAAC,IAAI,CAAC,EAAE;4CACV,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4CACrB,IAAI,CAAC,GAAG,GAAG,8BAA8B,CAAC;yCAC3C;6CAAM;4CACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4CACrB,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;yCACvC;wCACD,MAAM;qCACP;iCACF;qCAAM;oCACL;uFACmD;oCACnD,IAAI,SAAS,GAAQ,IAAI,IAAI,EAAE,CAAC;oCAChC,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;oCAElF,IAAI,YAAY,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;oCAClE,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oCAElC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oCAE9B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE;wCACnC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;wCACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;4CACtE,4DAA4D,CAAC;wCAC/D,MAAM;qCACP;yCAAM;wCACL,6EAA6E;wCAC7E,IAAI,CAAC,IAAI,CAAC,EAAE;4CACV,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4CACrB,IAAI,CAAC,GAAG,GAAG,8BAA8B,CAAC;yCAC3C;6CAAM;4CACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4CACrB,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;yCACrC;wCACD,MAAM;qCACP;iCACF;gCACD,MAAM;6BACP;yBACF;wBACD,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBACpE;iBACF;aACF;QACH,CAAC,EACC,KAAK,CAAC,EAAE;YACN,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,IAAI,iCAAiC,EAAE;gBACvF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;gBACzC,IAAI,CAAC,GAAG,GAAG,gCAAgC,CAAC;gBAC5C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;gBACzC,IAAI,CAAC,GAAG,GAAG,kDAAkD,CAAC;gBAC9D,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qEAAqE;IACrE,uBAAuB,CAAC,OAAY;QAClC,IAAI,CAAC,iBAAiB,GAAG,8CAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAQ,CAAC;YACb,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC;YAClD,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YAEhC,IAAI,KAAK,GAAQ,IAAI,IAAI,EAAE,CAAC;YAC5B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YAEtE,IAAI,QAAQ,GAAG,OAAO,GAAG,KAAK,CAAC;YAE/B,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;YACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACpD,6EAA6E;YAC7E,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACxF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO;gBACzC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,GAAG,KAAK,MAAM,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,GAAG,OAAO,OAAO,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,GAAG,OAAO,OAAO,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+EAA+E;IAC/E,sBAAsB,CAAC,GAAQ;QAC7B,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YACpF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;SAC5E;QACD,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;YAC1E,IAAI,KAAK,GAAQ,IAAI,IAAI,EAAE,CAAC;YAE5B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACvB,yDAAyD;gBACzD,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,IAAI,OAAY,CAAC;oBACjB,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;wBACnB,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;wBACzE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;wBAC/E,iFAAiF;wBACjF,IAAI,CAAC,IAAI,CAAC,EAAE;4BACV,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;4BAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,6CAA6C;4BAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;gCACtE,4DAA4D,CAAC;4BAC/D,IAAI,CAAC,kCAAkC,GAAG,KAAK,CAAC;4BAChD,OAAO;yBACR;6BAAM;4BACL,2FAA2F;4BAC3F,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC;yBAChD;qBACF;oBACD,6FAA6F;iBAC9F;qBAAM,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;oBAC1E,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,GAAG,GAAG,8BAA8B,CAAC;oBAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAC/B;qBAAM;oBACL,0GAA0G;oBAC1G,IAAI,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBACvE,IAAI,cAAc,CAAC,YAAY,CAAC,EAAE;wBAChC,IAAI,UAAU,GAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC;wBAC/D,IAAI,KAAK,GAAQ,IAAI,IAAI,EAAE,CAAC;wBAC5B,sCAAsC;wBACtC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;wBACzE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;wBACxF,mFAAmF;wBACnF,4EAA4E;wBAC5E,IAAI,CAAC,GAAG,CAAC,EAAE;4BACT,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,6CAA6C;4BAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;gCACtE,4DAA4D,CAAC;4BAC/D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;4BAC9B,OAAO;yBACR;6BAAM;4BACL,qFAAqF;4BACrF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;4BACpC,OAAO;yBACR;qBACF;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mGAAmG;IACnG,2BAA2B;QACzB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC3G,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC;iBACrC;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,kHAAkH;IAClH,WAAW,CAAC,SAAc;QACxB,IAAI,CAAC,iBAAiB,GAAG,8CAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAQ,CAAC;YACb,IAAI,GAAQ,CAAC;YACb,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC;YAClD,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YAChC,iFAAiF;YACjF,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE;gBAC7B,GAAG,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;aAC3B;iBAAM;gBACL,iFAAiF;gBACjF,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;gBACjB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;aAChC;YAED,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzB,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;YACzB,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;YACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACpD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACxF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO;gBACzC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,GAAG,KAAK,MAAM,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,GAAG,OAAO,OAAO,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,GAAG,OAAO,OAAO,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+DAA+D;IAC/D,YAAY;QACV,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SACtC;QACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,6CAA6C;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;YACtE,4DAA4D,CAAC;IACjE,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YACpE,OAAY,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iFAAiF;IACjF,kBAAkB;QAChB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,oEAAoE;QACpE,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACzB,kFAAkF;YAClF,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;gBAC7C,IAAI,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAClD,4HAA4H;gBAC5H,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,iFAA2B,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,iFAA2B,IAAI,IAAI,CAAC,SAAS,IAAI,gFAA0B,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,EAAE;oBACxR,iHAAiH;oBACjH,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;wBAC5D,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC3B;yBAAM;wBACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;qBACjC;iBACF;qBAAM;oBACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;iBACjC;aACF;iBAAM;gBACL,0HAA0H;gBAC1H,wGAAwG;gBACxG,qCAAqC;gBACrC,WAAW;gBACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACxC,IAAI;aACL;SACF;IACH,CAAC;IACD,kGAAkG;IAClG,wBAAwB;QACtB,wFAAwF;QACxF,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,kFAAkF;YAClF,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE;gBACrC,qEAAqE;gBACrE,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;oBACrJ,4GAA4G;oBAC5G,6FAA6F;oBAC7F,yCAAyC;oBACzC,YAAY;oBACZ,WAAW;oBACX,4GAA4G;oBAC5G,IAAI,IAAI,CAAC,SAAS,IAAI,gFAA0B,IAAI,IAAI,CAAC,UAAU,IAAI,iFAA2B,EAAE;wBAClG,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvD,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;4BACtD,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;4BACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;4BACzC,OAAO;yBACR;qBACF;oBACD,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC;oBAC7E,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBACjC,2GAA2G;oBAC3G,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACjG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;wBAChC,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,EAAE;4BAC1C,0FAA0F;4BAC1F,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;4BAC1B,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;4BACzE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;4BACxF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;4BACvE,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;4BAC3E;uHAC2F;4BAC3F,6CAA6C;4BAE7C;4GACgF;4BAEhF,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;gCACvC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;6BACpF;iCAAM;gCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;6BAChF;4BACD,OAAO;yBACR;6BAAM;4BACL,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;yBAC/D;oBACH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;;wBACV,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;wBAChC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,iBAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;oBACnG,CAAC,CAAC,CAAC,CAAC;oBACJ,IAAI;iBACL;qBAAM;oBACL,IAAI,CAAC,4BAA4B,EAAE,CAAC;iBACrC;aACF;iBAAM;gBACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF;aAAM;YACL,kEAAkE;YAClE,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,EAAE;gBACxE,uEAAuE;gBACvE,IAAI,IAAI,CAAC,kCAAkC,EAAE;oBAC3C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACzC,OAAO;iBACR;qBAAM;oBACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;aACF;iBAAM;gBACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;SACF;IACH,CAAC;IACD;gGAC4F;IAC5F,uBAAuB,CAAC,WAAmB;QACzC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,CAAC;QACjE,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;YACtD,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACpF;IACH,CAAC;IACD,wEAAwE;IACxE,iBAAiB;QACf,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,oBAAoB;QAClB,oEAAoE;QACpE,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACzB,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;gBAC5E,4CAA4C;gBAC5C,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACzE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;oBAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;wBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAC1C,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;wBAC3E,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;4BAC3B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;yBAC/D;6BAAM;4BACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;yBAC3D;wBACD,OAAO;qBACR;gBACH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;;oBACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,iBAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;gBACnG,CAAC,CAAC,CAAC,CAAC;aACL;YACD,6DAA6D;YAC7D,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;gBAC1C,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACtE,IAAI,IAAI,GAAQ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1D,IAAI,GAAG,GAAQ,IAAI,IAAI,EAAE,CAAC;wBAC1B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACzB,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,iFAA2B,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,gFAA0B,EAAE;4BACpI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;gCAClD,mDAAmD;gCACnD,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;gCAChC,OAAO;6BACR;yBACF;wBAED,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE;4BAE/B,IAAI,GAAG,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;4BAC3C,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;4BACzB,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;4BACzB,oIAAoI;4BACpI,iCAAiC;4BACjC,IAAI,QAAQ,IAAI,CAAC,EAAE;gCACjB,4GAA4G;gCAC5G,uGAAuG;gCACvG,yCAAyC;gCACzC,YAAY;gCACZ,WAAW;gCACX,sFAAsF;gCACtF,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gCAC/B,OAAO;gCACP,GAAG;6BACJ;iCAAM;gCACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gCACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gCACpC,OAAO;6BACR;yBACF;qBACF;iBACF;aACF;iBAAM;gBACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;SACF;IACH,CAAC;IACD,oEAAoE;IACpE,gBAAgB,CAAC,IAAS,EAAE,KAAa;QACvC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;;YAC5E,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC1C,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACjE,qDAAqD;gBACrD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;gBACzE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;gBACxF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;gBAEvE,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,oEAAoE;gBACpE,IAAI,IAAI,CAAC,UAAU,CAAC,KAAI,SAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,0CAAE,EAAE,GAAE;oBACvC,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;wBACnB,KAAK,EAAE,CAAC;qBACT;iBACF;gBACD,MAAM;gBACN,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,EAAE;oBAC9B,IAAI,IAAI,CAAC,oBAAoB,EAAE;wBAC7B,IAAI,KAAK,IAAI,CAAC,EAAE;4BACd,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;gCAClB,IAAI,IAAI,CAAC,SAAS,IAAI,gFAA0B,IAAI,IAAI,CAAC,UAAU,IAAI,iFAA2B,EAAE;oCAClG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;iCACrC;qCAAM;oCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;iCAClE;6BACF;iCAAM;gCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;6BAC9D;yBACF;6BAAM;4BACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;yBACzB;wBACD,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,YAAY,EAAE,CAAC;wBACpB,OAAO;qBACR;iBACF;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,wFAAiC,CAAC,CAAC;oBACrE,IAAI,IAAI,CAAC,gBAAgB,IAAI,wFAAiC,EAAE;wBAC9D,IAAI,IAAI,CAAC,oBAAoB,EAAE;4BAC7B,IAAI,KAAK,IAAI,CAAC,EAAE;gCACd,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;oCAClB,IAAI,IAAI,CAAC,SAAS,IAAI,gFAA0B,IAAI,IAAI,CAAC,UAAU,IAAI,iFAA2B,EAAE;wCAClG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;qCACrC;yCAAM;wCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;qCAClE;iCACF;qCAAM;oCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;iCAC9D;6BACF;iCAAM;gCACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;6BACzB;4BACD,OAAO;yBACR;6BAAM;4BACL,IAAI,CAAC,YAAY,EAAE,CAAC;4BACpB,OAAO;yBACR;qBACF;yBAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;wBACrC,IAAI,KAAK,IAAI,CAAC,EAAE;4BACd,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;gCAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;6BACpE;iCAAM;gCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;6BAChE;yBACF;6BAAM;4BACL,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;yBAC7C;wBACD,OAAO;qBACR;yBAAM;wBACL,IAAI,KAAK,IAAI,CAAC,EAAE;4BACd,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;gCAClB,IAAI,IAAI,CAAC,SAAS,IAAI,gFAA0B,IAAI,IAAI,CAAC,UAAU,IAAI,iFAA2B,EAAE;oCAClG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;iCACrC;qCAAM;oCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;iCAClE;6BACF;iCAAM;gCACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;6BAC9D;yBACF;6BAAM;4BACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;yBACzB;wBACD,OAAO;qBACR;iBACF;aACF;QACH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;YACV,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,SAAS,EAAE;gBAC/E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,gCAAgC,CAAC;gBACjF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;gBAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;aAC3D;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;gBACxC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,6CAA6C,CAAC;gBACzD,OAAO;aACR;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED;oFACgF;IAChF,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QACzE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,oCAAoC,CAAC;QACrF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IACD,oFAAoF;IACpF,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;;oBAC1E,IAAI,IAAI,CAAC,UAAU,CAAC,KAAI,SAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,0CAAE,EAAE,GAAE;wBACvC,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;4BACnB,KAAK,EAAE,CAAC;4BACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;4BACxB,OAAO;yBACR;6BAAM;4BACL,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;yBAC5B;qBACF;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;;YACV,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,iBAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;QACnG,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACD,4EAA4E;IAC5E,cAAc,CAAC,KAAa;QAC1B,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;YACzE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YACxF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;YACvE,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3E,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC/D;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC3D;YACD,OAAO;SACR;IACH,CAAC;IACD,uDAAuD;IACvD,cAAc;QACZ,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnC;IACH,CAAC;IACD,wDAAwD;IACxD,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IACD,mFAAmF;IACnF,gBAAgB;QACd,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,IAAI,IAAI,CAAC,cAAc,EAAE;YACrD,8EAA8E;YAC9E,uHAAuH;YACvH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;YAC7C,IAAI;SACL;IACH,CAAC;IACD,qDAAqD;IACrD,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SACtC;IACH,CAAC;IACD,mDAAmD;IACnD,mBAAmB;QACjB,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACpC,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACzC,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrE,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;oBAC9B,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBACxE;qBAAM;oBACL,YAAY,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;iBACrD;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mDAAmD;IACnD,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IACD,cAAc,CAAC,OAAY;QACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,IAAI,EAAE,0BAA0B;YAChC,WAAW,EAAE,qBAAqB;SACnC,CAAC,CAAC;IACL,CAAC;IACD,kEAAkE;IAClE,qBAAqB;QACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,iEAAiE;IACjE,oBAAoB;QAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,WAAW;QACT,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzD,IAAI,QAAQ,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ;wBACjD,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACzC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;iBAC5C;YACH,CAAC,EACC,CAAC,KAAU,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,KAAK,CAAC,+CAA+C,CAAC,CAAC;SACxD;IACH,CAAC;IACD,UAAU,CAAC,KAAU,EAAE,KAAU;QAC/B,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE;YAC5C,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;SACjB;aAAM;YACL,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;SACjB;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC/C,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC3C,IAAI,SAAS,GAAQ,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBAClD,SAAS,CAAC,KAAK,EAAE,CAAC;aACnB;SACF;aAAM;YACL,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;IACH,CAAC;IAED,iGAAiG;IACjG,4BAA4B;;QAC1B,IAAI,MAAM,GAAG;YACX,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YACvC,MAAM,EAAE,UAAI,CAAC,mBAAmB,0CAAE,UAAU;SAC7C,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAClD,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;aAC/C,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;;YACtB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;aACzF;QACH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,iBAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;QACnG,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAGD,8EAA8E;IAC9E,iBAAiB;;QACf,IAAI,MAAM,GAAG;YACX,OAAO,EAAE,2BAA2B;YACpC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YACvC,yBAAyB,EAAE;gBACzB,UAAI,CAAC,mBAAmB,0CAAE,UAAU;aACrC;SACF,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5C,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAChD,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;;YACvB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;aACzF;QACH,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,iBAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,iBAAiB,0CAAE,gBAAgB,CAAC,CAAC;QACnG,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACD,YAAY,CAAC,IAAS,EAAE,WAAiB;QACvC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,OAAO;IACT,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;IACH,CAAC;IACD,UAAU;QACR,6BAA6B;;QAE7B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC7B,IAAI,MAAM,GAAG;YACX,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YACvC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC;YAClE,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,UAAI,CAAC,mBAAmB,0CAAE,UAAU;SACjD,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAC1C,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAChD,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;oBACvC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;iBACvE;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;iBACnE;gBACD,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;aAC9D;QACH,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;IACL,CAAC;IACD,aAAa;QACX,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IACD,SAAS;QACP,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IACD,mFAAmF;IACnF,kBAAkB;QAChB,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC;SAC7C,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,IAAI,CAClD,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAChD,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACjB,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE;oBACrC,+FAA+F;oBAC/F,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,wDAAwD,CAAC,CAAC;oBACxG,OAAO;iBACR;qBAAM;oBACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;iBACjC;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,WAAmB;QACnC,OAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;;0GAznCU,6BAA6B;2HAA7B,6BAA6B;;;;;;;;;;;;;;QClB1C,yEAAiB;QAIe,+EAAc;QAAA,4DAAO;QAAC,0EAA2B;QAAC,+EAAc;QAAA,4DAAO;QAEjG,yHAMM;QAEN,yHAIM;QACR,4DAAM;QAuBN,mIA+DU;QAGV,mIAuIU;QACV,oIA2FU;QAoBZ,4DAAM;QAKR,wNA8Cc;QAGd,yNAmBc;QAEd,yNAgCc;QAEd,yNAoBc;QAEd,yNA0Bc;;QAzfL,0DAA6G;QAA7G,6LAA6G;QAOpF,0DAA2B;QAA3B,2FAA2B;QA4B9B,0DAA2B;QAA3B,2FAA2B;QAkE3B,0DAA2B;QAA3B,2FAA2B;QAwIhB,0DAA0C;QAA1C,8GAA0C;;;;;;;;;;;;;;;;;;;;;AC5O7E,MAAM,wBAAwB;IAEnC,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAK,CAAC;IAE/C,QAAQ;QACN,8HAA8H;QAC9H,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACjD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE;gBAC5B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACxD;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC3B,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACtD;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC9B,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC5D;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC3B,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACtD;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE;gBAC5B,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC3B,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACtD;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE;gBACpC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;gBAC7B,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAC1D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gGAhCU,wBAAwB;sHAAxB,wBAAwB;QCRrC,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCwB;AACqC;AACc;AACjB;AACvB;AACA;AACH;AAC0B;AACrB;AACgC;AAC1B;;;AAE1E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kGAAwB;QACnC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,MAAM;gBAClB,SAAS,EAAE,MAAM;aAClB;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,mHAA6B;aACzC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,2EAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,qGAAyB;aACrC;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,kGAAwB;aACpC;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,6GAA2B;aACvC;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,wEAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,2EAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,6EAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,mFAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,MAAM;gBAClB,SAAS,EAAE,MAAM;aAClB;SACF;KACF;CACF,CAAC;AAMK,MAAM,sBAAsB;;4FAAtB,sBAAsB;oHAAtB,sBAAsB;wHAHxB,CAAC,mEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,0DAAY;oIAEX,sBAAsB,qFAFvB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEuB;AAEqB;AACqB;AACvB;AACwC;AACjB;AACG;AACrC;AACQ;AACI;AACD;AACE;AACgC;AACpC;AACH;AACO;AACX;AACS;AACT;AACc;AACG;;AA6BnE,MAAM,eAAe;;8EAAf,eAAe;6GAAf,eAAe;iHAZjB;YACP,0DAAY;YACZ,6EAAsB;YACtB,+DAAY;YACZ,6EAAiB;YACjB,iFAAoB;YACpB,oEAAc;YACd,6EAAkB;YAClB,oEAAc;YACd,kFAAqB;SACtB;oIAEU,eAAe,mBAzBxB,kGAAwB;QACxB,2EAAiB;QACjB,mHAA6B;QAC7B,kGAAwB;QACxB,qGAAyB;QACzB,wEAAgB;QAChB,2EAAiB;QACjB,8GAA2B;QAC3B,yEAAgB;QAChB,sEAAe;QACf,8EAAiB;QACjB,oFAAmB,aAGnB,0DAAY;QACZ,6EAAsB;QACtB,+DAAY;QACZ,6EAAiB;QACjB,iFAAoB;QACpB,oEAAc;QACd,6EAAkB;QAClB,oEAAc;QACd,kFAAqB;;;;;;;;;;;;;;;;;;;;;;ACtCnB,MAAO2I,iBAAP,CAAwB;AAG5BvH,cAAoBC,MAApB,EAA4CI,aAA5C,EAAwE;AAApD;AAAwB;AAD5C,wBAAuB,EAAvB;AAC6E;;AAE7E6D,UAAQ;AAEN;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMsD,gBAAgB,GAAG,KAAKC,0BAAL,EAAzB;AACA,UAAMC,eAAe,GAAG,KAAKC,eAAL,CAAqBH,gBAAgB,GAAGA,gBAAH,GAAsB,IAA3D,CAAxB;AACA,SAAKI,uBAAL;AACAtE,cAAU,CAAC,MAAK;AACd,YAAMuE,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,sBAAvB,CAAf;AACA,YAAMC,IAAI,GAAGF,QAAQ,CAACG,cAAT,CAAwB,eAAxB,CAAb;AAEA,UAAID,IAAJ,EACEA,IAAI,CAACE,SAAL,GAAiBR,eAAjB;;AAEF,UAAIG,MAAJ,EAAY;AACVA,cAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAmCxB,KAAD,IAAU;AAC1C,gBAAMa,gBAAgB,GAAIb,KAAK,CAACI,MAAN,CAAmC3F,KAA7D;AACAgH,iBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCb,gBAAjC;AACA,cAAIQ,IAAJ,EACEA,IAAI,CAACE,SAAL,GAAiB,KAAKP,eAAL,CAAqBH,gBAArB,CAAjB;AACH,SALD;AAMD;AACF,KAfS,EAeP,IAfO,CAAV;AAiBD;;AAEDc,aAAW;AACT,SAAKjI,aAAL,CAAmBkI,iBAAnB,GAAuC,IAAvC;AACA,QAAIC,KAAK,GAAG5E,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ,CAFS,CAGT;AACA;AACA;AACA;;AACA,SAAK5D,MAAL,CAAYgE,aAAZ,CAA0B,YAA1B,EAPS,CAQT;AACD;;AACD2D,yBAAuB;AACrB,QAAI,KAAK3H,MAAL,CAAYwI,GAAZ,CAAgBhH,QAAhB,CAAyB,UAAzB,CAAJ,EAA0C;AACxC,UAAIiH,IAAI,GAAGZ,QAAQ,CAACG,cAAT,CAAwB,iBAAxB,CAAX;;AACA,UAAI,CAACS,IAAL,EAAW;AACT,aAAKC,kBAAL,CAAwB,mFAAxB;AACD;AACF,KALD,MAKO;AACL,WAAKC,aAAL;AACD;AACF;;AACDD,oBAAkB,CAACF,GAAD,EAAY;AAC5B,UAAMI,IAAI,GAAmBf,QAAQ,CAACe,IAAtC;AACA,UAAMC,MAAM,GAAGhB,QAAQ,CAACiB,aAAT,CAAuB,QAAvB,CAAf;AACAD,UAAM,CAACZ,SAAP,GAAmB,EAAnB;AACAY,UAAM,CAACE,EAAP,GAAY,iBAAZ;AACAF,UAAM,CAACG,GAAP,GAAaR,GAAb;AACAK,UAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,UAAM,CAACK,KAAP,GAAe,IAAf;AACAN,QAAI,CAACO,WAAL,CAAiBN,MAAjB;AACD;;AACDF,eAAa;AACX,QAAIF,IAAI,GAAGZ,QAAQ,CAACG,cAAT,CAAwB,iBAAxB,CAAX;;AACA,QAAIS,IAAJ,EAAU;AACRA,UAAI,CAACW,MAAL;AACD;AACF;;AACDC,aAAW;AACT,SAAKV,aAAL;AACD,GA1E2B,CA2E5B;;;AACAnB,4BAA0B;AACxB,UAAM8B,MAAM,GAAGzB,QAAQ,CAACyB,MAAT,CAAgBC,KAAhB,CAAsB,IAAtB,EAA4BC,IAA5B,CAAiCC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAe,WAAf,CAAxC,CAAf;;AACA,QAAIJ,MAAJ,EAAY;AACV,YAAMK,KAAK,GAAGL,MAAM,CAACC,KAAP,CAAa,GAAb,CAAd;AACA,YAAMxB,IAAI,GAAG4B,KAAK,CAACA,KAAK,CAACtH,MAAN,GAAe,CAAhB,CAAlB,CAFU,CAGV;;AACA,aAAO0F,IAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDL,iBAAe,CAACkC,QAAD,EAAiB;AAC9B,UAAMC,aAAa,GAA8B;AAC/C,YAAM,WADyC;AAE/C,YAAM,UAFyC;AAG/C,YAAM,SAHyC;AAI/C,YAAM,QAJyC;AAK/C,YAAM,UALyC;AAM/C,YAAM,aANyC;AAO/C,YAAM,QAPyC;AAQ/C,YAAM,YARyC;AAS/C,YAAM,SATyC;AAU/C,YAAM,SAVyC;AAW/C,YAAM,WAXyC;AAY/C,YAAM,SAZyC;AAa/C,aAAO,SAbwC;AAc/C,YAAM,UAdyC;AAe/C,eAAS,sBAfsC;AAgB/C,eAAS,uBAhBsC;AAiB/C,YAAM,UAjByC;AAkB/C,YAAM,UAlByC;AAmB/C,YAAM,OAnByC;AAoB/C,YAAM,QApByC;AAqB/C,YAAM,OArByC;AAsB/C,YAAM,SAtByC;AAuB/C,YAAM,WAvByC;AAwB/C,YAAM,UAxByC;AAyB/C,YAAM,UAzByC;AA0B/C,YAAM,SA1ByC;AA2B/C,YAAM,QA3ByC;AA4B/C,YAAM,SA5ByC;AA6B/C,YAAM,UA7ByC;AA8B/C,YAAM,UA9ByC;AA+B/C,YAAM,QA/ByC;AAgC/C,YAAM,OAhCyC;AAiC/C,YAAM,UAjCyC;AAkC/C,YAAM,gBAlCyC;AAmC/C,YAAM,OAnCyC;AAoC/C,aAAO,UApCwC;AAqC/C,YAAM,QArCyC;AAsC/C,YAAM,OAtCyC;AAuC/C,aAAO,OAvCwC;AAwC/C,YAAM,WAxCyC;AAyC/C,YAAM,WAzCyC;AA0C/C,YAAM,MA1CyC;AA2C/C,YAAM,YA3CyC;AA4C/C,YAAM,OA5CyC;AA6C/C,YAAM,SA7CyC;AA8C/C,YAAM,UA9CyC;AA+C/C,YAAM,UA/CyC;AAgD/C,YAAM,SAhDyC;AAiD/C,YAAM,QAjDyC;AAkD/C,YAAM,OAlDyC;AAmD/C,YAAM,aAnDyC;AAoD/C,YAAM,QApDyC;AAqD/C,YAAM,oBArDyC;AAsD/C,YAAM,QAtDyC;AAuD/C,YAAM,KAvDyC;AAwD/C,YAAM,OAxDyC;AAyD/C,YAAM,SAzDyC;AA0D/C,YAAM,YA1DyC;AA2D/C,YAAM,eA3DyC;AA4D/C,YAAM,YA5DyC;AA6D/C,YAAM,UA7DyC;AA8D/C,YAAM,OA9DyC;AA+D/C,YAAM,WA/DyC;AAgE/C,YAAM,SAhEyC;AAiE/C,YAAM,OAjEyC;AAkE/C,YAAM,SAlEyC;AAmE/C,YAAM,WAnEyC;AAoE/C,YAAM,mBApEyC;AAqE/C,YAAM,QArEyC;AAsE/C,YAAM,WAtEyC;AAuE/C,YAAM,cAvEyC;AAwE/C,YAAM,QAxEyC;AAyE/C,YAAM,SAzEyC;AA0E/C,YAAM,QA1EyC;AA2E/C,YAAM,YA3EyC;AA4E/C,YAAM,SA5EyC;AA6E/C,YAAM,UA7EyC;AA8E/C,YAAM,SA9EyC;AA+E/C,YAAM,QA/EyC;AAgF/C,YAAM,cAhFyC;AAiF/C,YAAM,SAjFyC;AAkF/C,YAAM,SAlFyC;AAmF/C,YAAM,OAnFyC;AAoF/C,YAAM,QApFyC;AAqF/C,YAAM,SArFyC;AAsF/C,YAAM,QAtFyC;AAuF/C,YAAM,WAvFyC;AAwF/C,YAAM,QAxFyC;AAyF/C,YAAM,SAzFyC;AA0F/C,YAAM,WA1FyC;AA2F/C,YAAM,SA3FyC;AA4F/C,YAAM,SA5FyC;AA6F/C,YAAM,OA7FyC;AA8F/C,YAAM,OA9FyC;AA+F/C,YAAM,QA/FyC;AAgG/C,YAAM,MAhGyC;AAiG/C,YAAM,SAjGyC;AAkG/C,YAAM,WAlGyC;AAmG/C,YAAM,MAnGyC;AAoG/C,YAAM,QApGyC;AAqG/C,YAAM,OArGyC;AAsG/C,YAAM,YAtGyC;AAuG/C,YAAM,OAvGyC;AAwG/C,YAAM,OAxGyC;AAyG/C,YAAM,SAzGyC;AA0G/C,YAAM,QA1GyC;AA2G/C,YAAM;AA3GyC,KAAjD;AA6GA,WAAOA,aAAa,CAACD,QAAD,CAAb,IAA2B,SAAlC;AACD;;AAtM2B;;;mBAAjBtC,mBAAiB3I,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,wEAAAA;AAAA;;;QAAjB2I;AAAiBN;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACV9BzI,MAAAA,4DAAAA,cAAqC,CAArC,EAAqC,KAArC,EAAqC,CAArC,EAAqC,CAArC,EAAqC,KAArC,EAAqC,CAArC,EAAqC,CAArC,EAAqC,KAArC,EAAqC,CAArC,EAAqC,CAArC,EAAqC,IAArC,EAAqC,CAArC;AAIyBA,MAAAA,oDAAAA;AAAoBA,MAAAA,0DAAAA;AACrCA,MAAAA,4DAAAA;AAAiBA,MAAAA,uDAAAA;AAAgCA,MAAAA,0DAAAA;AACjDA,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;AAAmBA,MAAAA,uDAAAA;AACnBA,MAAAA,oDAAAA;AAA8BA,MAAAA,uDAAAA;AAChCA,MAAAA,0DAAAA;AAEFA,MAAAA,uDAAAA;AAIFA,MAAAA,0DAAAA;AAGFA,MAAAA,4DAAAA,eAAoC,EAApC,EAAoC,KAApC,EAAoC,CAApC,EAAoC,EAApC,EAAoC,KAApC,EAAoC,EAApC,EAAoC,EAApC,EAAoC,KAApC,EAAoC,EAApC,EAAoC,KAApC,EAAoC,EAApC,EAAoC,EAApC,EAAoC,KAApC,EAAoC,EAApC,EAAoC,EAApC,EAAoC,QAApC,EAAoC,EAApC;AAcuDA,MAAAA,wDAAAA;AAAA,eAAS0I,iBAAT;AAAsB,OAAtB;AAAwB1I,MAAAA,oDAAAA;AAAIA,MAAAA,0DAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BvC;AAGX;AACwB;;;;;;;;;;;ICC3C,sEACyG;IACvG,qEAAwF;IACxF,yEAA0B;IAAC,oEAAQ;IAAA,4DAAK;;;IAE1C,0EAAyF;IAErE,uDAAyB;IAAA,gEAAI;IAC7C,sFACF;IAAA,4DAAK;IAAA,gEAAI;IACT,2EAA2B;IAAC,uDAAe;IAAA,4DAAO;;;IAHhC,0DAAyB;IAAzB,uIAAyB;IAGf,0DAAe;IAAf,6FAAe;;;IAQ7C,yEACmE;IACjE,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,wIACF;;;;IASV,0EAAyD;IACO,+SAAS,qBAAa,IAAC;IAAC,iEAAM;IAAA,4DAAS;IACrG,6EAAqF;IAAxB,+SAAS,qBAAa,IAAC;IAAC,kEAAO;IAAA,4DAAS;;;;IAEvG,0EAA0E;IACX,+SAAS,uBAAe,IAAC;IAAC,0EAAe;IAAA,4DAAS;IAC/G,6EAAyF;IAA1B,+SAAS,uBAAe,IAAC;IAAC,iEAAM;IAAA,4DAAS;;;;IAE1G,0EACoE;IACnB,+SAAS,qBAAa,IAAC;IACpE,4EACF;IAAA,4DAAS;;;IAdb,0EACiC;IAC/B,2HAGM;IACN,2HAGM;IACN,2HAKM;IACR,4DAAM;;;IAdsB,0DAA6B;IAA7B,kIAA6B;IAIjB,0DAAkC;IAAlC,uIAAkC;IAKrE,0DAA+D;IAA/D,iNAA+D;;;IAlDxE,yEAAkE;IAGhB,iEAAM;IAAA,4DAAO;IAE3D,yEAA8C;IAMlC,sHAIM;IACN,sHAMM;IAON,oHAGK;IACP,4DAAM;IAMhB,sHAgBM;IACR,4DAAO;;;IA5CU,2DAAoG;IAApG,iSAAoG;IAI3D,0DAA2C;IAA3C,qHAA2C;IAcpF,0DAA8D;IAA9D,gNAA8D;IAU1E,0DAA4B;IAA5B,+FAA4B;;;;IAoBnC,0EAA+D;IAI3B,8EAAmB;IAAA,gEAAI;IAAC,+EAAmB;IAAA,4DAAI;IAC3E,wEAAmB;IAAA,2GAAgD;IAAA,iEAAI;IAAC,uEAAU;IAAA,4DAAI;IACtF,8EAAuE;IAAzB,kSAAS,sBAAc,IAAC;IAAC,gEAAI;IAAA,4DAAS;;;IAalF,wEAAiE;IAC/D,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,0IACF;;;IACA,wEAAiE;IAAA,iFAAsB;IAAA,gEAAI;IAAC,0FAC3E;IAAA,gEAAI;IAAC,uFACZ;IAAA,gEAAI;IAAC,uEAAW;IAAA,4DAAI;;;IAC9B,wEAAwD;IAAA,gGAAqC;IAAA,gEAAI;IAAC,sGAChE;IAAA,gEAAI;IACpC,sFAA0B;IAAA,gEAAI;IAC9B,6FAAiC;IAAA,gEAAI;IACvC,4DAAI;;;;IAfd,0EAAsH;IAK5G,gHAEI;IACJ,gHAE8B;IAC9B,gHAII;IACJ,6EAAuE;IAAzB,iSAAS,sBAAc,IAAC;IAAC,0EAAe;IAAA,4DAAS;;;IAXlE,0DAAkC;IAAlC,yIAAkC;IAGlC,0DAAkC;IAAlC,yIAAkC;IAG3C,0DAAkC;IAAlC,yIAAkC;;;IAwBpD,wEAAiE;IAC/D,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,0IACF;;;IACA,wEAAiE;IAAA,iFAAsB;IAAA,gEAAI;IAAC,0FAC3E;IAAA,gEAAI;IAAC,uFACZ;IAAA,gEAAI;IAAC,uEAAW;IAAA,4DAAI;;;IAC9B,wEAAwD;IAAA,8FAAmC;IAAA,gEAAI;IAAC,wGAC7D;IAAA,gEAAI;IACrC,yFAA6B;IAAA,4DAAI;;;;IAZ3C,0EAAiH;IAIzG,8HAEI;IACJ,8HAE8B;IAC9B,8HAEmC;IACnC,6EAAuE;IAAzB,gTAAS,sBAAc,IAAC;IAAC,+DAAI;IAAA,4DAAS;;;IATvD,0DAAkC;IAAlC,2IAAkC;IAGlC,0DAAkC;IAAlC,2IAAkC;IAG3C,0DAAkC;IAAlC,2IAAkC;;;;IAjBhE,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAK5D,0EAAkC;IAChC,4HAiBM;IA6BN,0EAA0C;IAEyC,ySAAS,gBAAQ,IAAC;IAC/F,iEACF;IAAA,4DAAS;;;IAlDyD,0DAAyC;IAAzC,4GAAyC;;ADxF5G,MAAM,iBAAiB;IAgC5B,YAAoB,aAA4B,EAAU,MAAc,EAC9D,gBAAkC,EAAmB,aAA4B,EACjF,YAAsB,EAAE,MAAsB;QAFpC,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC9D,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAmB,kBAAa,GAAb,aAAa,CAAe;QACjF,iBAAY,GAAZ,YAAY,CAAU;QA5BhC,uBAAkB,GAAY,KAAK,CAAC;QACpC,kBAAa,GAAW,EAAE,CAAC;QAC3B,uBAAkB,GAAW,EAAE,CAAC;QAEhC,YAAY;QACZ,yBAAoB,GAAY,KAAK,CAAC;QAEtC,mBAAc,GAAY,IAAI,CAAC;QAC/B,kBAAa,GAAQ,EAAE,CAAC;QACxB,sBAAiB,GAAQ,EAAE;QAC3B,aAAQ,GAAQ,EAAE,CAAC;QAGnB,yBAAoB,GAAY,KAAK,CAAC;QACtC,iBAAY,GAAQ,EAAE,CAAC;QACvB,kBAAa,GAAQ,EAAE,CAAC;QACxB,qBAAgB,GAAW,CAAC,CAAC;QAC7B,qBAAgB,GAAW,CAAC,CAAC;QAC7B,sBAAiB,GAAY,KAAK,CAAC;QACnC,eAAU,GAAQ,EAAE,CAAC;QAGrB,cAAS,GAAQ,EAAE,CAAC;QAEZ,SAAI,GAAiB,IAAI,8CAAY,EAAE,CAAC;QAM9C,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,mCAAmC;QACnC,4BAA4B;QAC5B,2BAA2B;QAC3B,sCAAsC;QACtC,QAAQ;IACV,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAE,CAAC,CAAC;QACtE,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAExC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE/C,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,WAAW,GAAG,EAAE,CAAC;QAErB,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YAC7C,WAAW,GAAG,KAAK,CAAC;SACrB;QACD,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,EAAE;YAChD,WAAW,GAAG,MAAM,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAEhD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC;QACrD,IAAI,IAAI,CAAC,UAAU,IAAI,8EAAwB,EAAE;YAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE;gBACvD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBACzC,OAAO;aACR;SACF;QAED,4EAA4E;QAC5E,8FAA8F;QAC9F,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,iFAA2B,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,gFAA0B,EAAE;YAC7H,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACzC,OAAO;SACR;QAED,IAAI,KAAK,IAAI,OAAO,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACzC,OAAO;SACR;QAED,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,KAAK,EAAE;YACxD,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;YACxC,OAAO;SACR;aAAM;YACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,EAAE;gBACzD,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC;gBACxC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;gBACrE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;gBACxC,OAAO;aACR;YACD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,iBAAiB,EAAE;gBACtE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,0DAA0D,GAAG,OAAO,CAAC;aACnG;iBAAM,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,SAAS,EAAE;gBACrE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,uDAAuD,CAAC;aACtF;iBAAM,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,wBAAwB,EAAE;gBACpF,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,qCAAqC,CAAC;aACpE;iBAAM,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,UAAU,EAAE;gBACtE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,kBAAkB,CAAC;aACjD;iBAAM,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,kBAAkB,EAAE;gBAC9E,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,gDAAgD,CAAC;aAC/E;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;aAC5E;SACF;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE;YACpC,sCAAsC;SACvC;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,sBAAsB,EAAE;YAClF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACzC,OAAO;SACR;QACD,qCAAqC;QACrC,4BAA4B;QAC5B,IAAI;QAIJ,IAAI,IAAI,CAAC,aAAa,IAAI,kBAAkB,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;YACrE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACnC,IAAI,EAAE,0BAA0B;gBAChC,WAAW,EAAE,qBAAqB;aACnC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,EAAE;YACrH,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,EAAE;YACzF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;YACzC,IAAI,CAAC,GAAG,GAAG,gCAAgC,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,OAAO;SACR;aAAM;YACL,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;IACH,CAAC;IAED,oFAAoF;IACpF,qBAAqB;QACnB,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1F,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,GAAG,GAAQ,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YACzC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,IAAI,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YACxD,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAE5B,IAAI,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC;YAC3B,gFAAgF;YAChF,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,mEAAmE,CAAC;gBAC/E,OAAO;aACR;YAED,IAAI,GAAG,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YACvD,4DAA4D;YAE5D,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YAChE,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzB,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;YACzB,oGAAoG;YACpG,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,2BAA2B;gBAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,uCAAuC,CAAC;aACpD;YACD,8FAA8F;iBACzF,IAAI,QAAQ,GAAG,CAAC,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;aACnD;QACH,CAAC,EACC,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,iBAAiB,EAAE;gBACxF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;gBACzC,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC;gBACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;gBAC5F,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,6CAA6C,CAAC;gBACzD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,kBAAkB;gBACxC,IAAI,CAAC,GAAG,GAAG,kDAAkD,CAAC;gBAC9D,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oFAAoF;IACpF,wBAAwB;QACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,yCAAyC,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACxG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kHAAkH;IAClH,WAAW,CAAC,SAAc;QACxB,IAAI,CAAC,iBAAiB,GAAG,8CAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAQ,CAAC;YACb,IAAI,GAAQ,CAAC;YACb,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC;YAClD,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YAChC,GAAG,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1B,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzB,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;YACzB,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;YACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACpD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACxF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO;gBACzC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+DAA+D;IAC/D,YAAY;QACV,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SACtC;QACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,uCAAuC,CAAC;IACrD,CAAC;IAED,qFAAqF;IACrF,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtF,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YACnC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YAE9D,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,2BAA2B,CAAC;gBACvC,OAAO;aACR;YACD,sEAAsE;YACtE,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC3D,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC9D,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;oBACtB,KAAK,EAAE,CAAC;iBACT;YACH,CAAC,CAAC,CAAC;YACH,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,IAAI,KAAK,IAAI,CAAC,EAAE;gBACxE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACnC;YACD,IAAI,GAAG,GAAQ,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YACzC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,IAAI,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YAExD,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAE5B,IAAI,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAEvB,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,GAAG,mEAAmE,CAAC;gBAC/E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,uCAAuC;gBACvF,OAAO;aACR;YACD,IAAI,SAAS,IAAI,CAAC,EAAE;gBAClB,IAAI,MAAM,GAAW,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC;gBACnE,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;oBAC5E,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,GAAG,GAAG,mEAAmE,CAAC;oBAC/E,OAAO;iBACR;aACF;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,kEAAkE;YAClE,IAAI,GAAG,GAAW,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC;YAChE,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;aACjF;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YAC3E,mEAAmE;YACnE,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;gBAC1C,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,KAAK,GAAQ,IAAI,IAAI,EAAE,CAAC;gBAC5B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAEtE,IAAI,KAAK,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3D,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAEtE,IAAI,GAAG,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvD,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAEhE,IAAI,oBAAoB,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACjG,oBAAoB,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBACnH,oBAAoB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE1C,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;oBACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAC/B;gBACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBACpF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBAG3E,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;gBAEpF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtE,IAAI,IAAI,GAAQ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1D,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;wBACvB,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;wBACjC,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACjB,2BAA2B;4BAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,IAAI,CAAC,GAAG,GAAG,uCAAuC,CAAC;4BACnD,MAAM;yBACP;6BAAM;4BACL,IAAI,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;4BACpB,IAAI,CAAC,IAAI,CAAC,EAAE;gCACV,IAAI,YAAiB,CAAC;gCACtB,IAAI,QAAa,CAAC;gCAClB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;gCACnD,IAAI,OAAY,CAAC;gCACjB,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC7D;8GAC8E;gCAC9E,IAAI,YAAY,IAAI,YAAY,CAAC,cAAc,CAAC,EAAE;oCAChD,QAAQ,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;oCAClD,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;oCAC/E,OAAO,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oCACpE,IAAI,IAAI,GAAG,OAAO,GAAG,KAAK,CAAC;oCAC3B,IAAI,IAAI,IAAI,CAAC,EAAE;wCACb,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;wCACrB,IAAI,CAAC,GAAG,GAAG,uCAAuC,CAAC;qCACpD;yCAAM,IAAI,IAAI,GAAG,CAAC,EAAE;wCACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;wCACrB,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;wCACtC,MAAM;qCACP;iCACF;qCAAM;oCACL;uFACmD;oCACnD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oCACrB,IAAI,CAAC,GAAG,GAAG,uCAAuC,CAAC;oCACnD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iCAC/B;gCACD,MAAM;6BACP;yBACF;wBACD,OAAO;qBACR;yBAAM;wBACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACxE;iBACF;aACF;QACH,CAAC,EACC,KAAK,CAAC,EAAE;YACN,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,IAAI,iCAAiC,EAAE;gBACvF,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;gBACzC,IAAI,CAAC,GAAG,GAAG,gCAAgC,CAAC;gBAC5C,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,mBAAmB;gBACzC,IAAI,CAAC,GAAG,GAAG,kDAAkD,CAAC;gBAC9D,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO;aACR;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YACpE,OAAY,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,GAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+EAA+E;IAC/E,sBAAsB,CAAC,GAAQ;QAC7B,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAa,EAAE,EAAE;YAC1E,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7C,UAAU,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YACrF,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE;gBAC3C,IAAI,KAAK,CAAC,QAAQ,EAAE,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,WAAW,EAAE,IAAI,UAAU,CAAC,WAAW,EAAE,EAAE;oBAChG,IAAI,KAAK,IAAI,CAAC,EAAE;wBACd,IAAI,CAAC,2BAA2B,EAAE,CAAC;qBACpC;oBACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,GAAG,CAAC,CAAC;oBAClC,uEAAuE;oBACvE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;wBACtB,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;4BACrD,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;4BAC1F,UAAU,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;4BACrF,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;gCAC9G,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;6BAC5E;yBACF;qBACF;yBAAM;wBACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;qBAC/B;iBACF;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,oBAAoB,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACjG,oBAAoB,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;QACnH,oBAAoB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1C,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAC/B;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;QACpF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC3E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtE,IAAI,IAAI,GAAQ,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE;gBAC/B,IAAI,GAAG,GAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3C,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;gBAChE,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACzB,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;gBACzB,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACjB,2BAA2B;oBAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,GAAG,GAAG,uCAAuC,CAAC;oBACnD,MAAM;iBACP;qBACI,IAAI,QAAQ,GAAG,CAAC,EAAE;oBACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBACpC,MAAM;iBACP;aACF;SACF;IACH,CAAC;IAED,mGAAmG;IACnG,2BAA2B;QACzB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC3G,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC;iBACrC;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,qEAAqE;IACrE,uBAAuB,CAAC,OAAY;QAClC,IAAI,CAAC,iBAAiB,GAAG,8CAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,GAAQ,CAAC;YACb,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC;YAClD,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,cAAc;YAEhC,IAAI,KAAK,GAAQ,IAAI,IAAI,EAAE,CAAC;YAC5B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC;YAEtE,IAAI,QAAQ,GAAG,OAAO,GAAG,KAAK,CAAC;YAE/B,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;YACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACpD,6EAA6E;YAC7E,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACxF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;YAClE,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO;gBACzC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;gBAC5E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;aAC9E;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACzC;SACF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SACzC;IACH,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;SAC/E;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;YAChD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SACzC;IACH,CAAC;IACD,aAAa;QACX,IAAI,MAAM,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;YACvC,UAAU,EAAE,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC;SACrD;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9E,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC;gBACjD,qBAAqB;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,sBAAsB;QACtB,qDAAqD;QACrD,6BAA6B;QAC7B,qDAAY,EAAE,CAAC;IACjB,CAAC;IACD,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;;kFAtjBU,iBAAiB;+GAAjB,iBAAiB;;;;;;QCjB9B,8GAyDM;QAGN,8GAUM;QAIN,8GAqBM;QAEN,yMA8Dc;;QA/Je,mGAAmC;QA4D9C,0DAA2C;QAA3C,2GAA2C;QAcc,0DAAyC;QAAzC,yGAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEjF;AACH;;;;;;;;;;ICUlB,0EAAgD;IAC9C,qEAAoG;IACtG,4DAAM;;;;IA8ClB,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAC1D,0EAA+C;IAAvB,oSAAS,mBAAY,IAAC;IAC5C,wEAAgF;IAClF,4DAAM;IAER,0EAAkC;IAIF,yEAAa;IAAA,iEAAI;IAAC,gFAAmB;IAAA,4DAAK;IAIxE,2EAA0C;IACC,wSAAS,qBAAc,IAAI,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;IACtF,8EAAqE;IAA/B,wSAAS,qBAAc,KAAK,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;;ADnEnF,MAAM,gBAAgB;IAQ3B,YAAoB,gBAAkC,EAAU,aAA4B,EAClF,MAAc,EAAU,YAAsB,EAAE,MAAsB;QAD5D,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAClF,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAPxD,eAAU,GAAW,EAAE,CAAC;QAExB,gBAAW,GAAY,IAAI,CAAC;QAC5B,iBAAY,GAAY,KAAK,CAAC;QAM5B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAE,CAAC;QAC5D,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,8CAAQ,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,CAAC;aAC9G,SAAS,CAAC,CAAC,CAAC,eAAe,EAAE,gBAAgB,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE;gBAC/B,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC;aAC3C;YACD,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IACD,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,aAAa,CAAC,OAAY;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,IAAI,EAAE,0BAA0B;SACjC,CAAC,CAAC;IACL,CAAC;IACD,aAAa,CAAC,IAAY;QACxB,IAAI,IAAI,IAAI,KAAK,EAAE;YACjB,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,6BAA6B;YAC7B,qDAAY,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC;SACvC;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;;gFA/CU,gBAAgB;8GAAhB,gBAAgB;;QCd7B,yEAAiB;QAM6C,mIAAS,iBAAa,IAAC;QAAC,4DAAI;QAAC,oEACjF;QAAA,4DAAK;QACL,yEAAkB;QAGc,wDAA0C;;QAAA,4DAAK;QACzE,0EAAuB;QAAA,wDAAwB;QAAA,4DAAK;QACpD,0EAAyD;QACvD,wDACF;;;QAAA,4DAAK;QAEP,+GAEM;QACR,4DAAM;QAOd,+EAA6C;QAGV,gFAAoB;QAAA,4DAAK;QACtD,0EAAuB;QAAA,wDAAuB;QAAA,4DAAK;QAErD,sEAAK;QAC0B,2EAAe;QAAA,4DAAK;QACjD,0EAAuB;QAAA,wDAAqB;QAAA,4DAAK;QAEnD,sEAAK;QACyB,qEAAS;QAAA,4DAAK;QAC1C,0EAAmB;QAAA,wDAAkE;QAAA,4DAAK;QAE5F,sEAAK;QAC0B,2EAAe;QAAA,4DAAK;QACjD,0EAAoB;QAAA,mEAAO;QAAA,4DAAK;QAElC,sEAAI;QAC0B,uEAAW;QAAA,4DAAK;QAC5C,0EAAmB;QAAA,wEAAY;QAAA,4DAAK;QAI1C,+EAA6C;QAGQ,iRAAS,sBAAsB,IAAC;QAC7E,oEACF;QAAA,4DAAI;QAQd,4MAoBc;;QAzE4B,2DAA0C;QAA1C,8LAA0C;QAC7C,0DAAwB;QAAxB,yHAAwB;QAE7C,0DACF;QADE,mVACF;QAE0B,0DAAkB;QAAlB,kFAAkB;QAc3B,0DAAuB;QAAvB,wHAAuB;QAIvB,0DAAqB;QAArB,sHAAqB;QAIzB,0DAAkE;QAAlE,uMAAkE;;;;;;;;;;;;;;;;;;;;;;;;;ACjC/D;;;;;;;;;;ICNhC,yEAAgD;IAEhC,ySAAS,yBAAkB,IAAC;IAAC,4DAAC;IAAA,4DAAS;IAEnD,uEAA+F;IACnG,4DAAM;;;IADqE,0DAAc;IAAd,mJAAc;;ADSlF,MAAM,2BAA2B;IAYtC,YAAoB,MAAc,EAAU,aAA4B,EAC9D,gBAAkC,EAAS,SAAuB,EAClE,aAA4B;QAFlB,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC9D,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,cAAS,GAAT,SAAS,CAAc;QAClE,kBAAa,GAAb,aAAa,CAAe;QAZtC,UAAK,GAAQ,EAAE,CAAC;QAChB,iBAAY,GAAQ,EAAE,CAAC;QACvB,eAAU,GAAQ,EAAE,CAAC;QACrB,WAAM,GAAQ,EAAE,CAAC;QACjB,mBAAc,GAAY,KAAK,CAAC;QAEhC,aAAQ,GAAQ,EAAE,CAAC;QACnB,cAAS,GAAQ,EAAE,CAAC;IAKsB,CAAC;IAE3C,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QACD,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SAC1B;QACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,oBAAoB;;QAClB,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC9D,IAAI,mBAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAG,CAAC,CAAC,0CAAE,MAAM,IAAG,CAAC,EAAE;YACjC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACpC,iDAAiD;YACjD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IACD,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvF,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAE;oBAC7B,GAAG,GAAG,GAAG,GAAG,WAAW,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;iBAC1G;gBACD,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACjD,GAAG,GAAG,GAAG,GAAG,eAAe,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,QAAQ,cAAc,IAAI,CAAC,SAAS,YAAY,QAAQ,EAAE;gBAChK,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;gBACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,GAAG,GAAC,QAAQ,GAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;gBACtG,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aAC5D;QACH,CAAC,EAAE,CAAC,CAAC,KAAU,EAAE,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,iGAAiG;YACjG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACD,WAAW;QACT,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzD,IAAI,QAAQ,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ;wBACjD,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACzC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;oBAC3C,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE;wBAC/C,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC5B;iBACF;YACH,CAAC,EACC,CAAC,KAAU,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;SACN;aAAM;YACL,KAAK,CAAC,+CAA+C,CAAC,CAAC;YACvD,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE;gBAC/C,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;SACF;IACH,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,EAAE;YACrH,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,EAAE;YAC/H,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;IACH,CAAC;IACD,oFAAoF;IACpF,qBAAqB;QACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACvC,oCAAoC;QACpC,iFAAiF;QACjF,oDAAoD;QACpD,0BAA0B;QAC1B,2CAA2C;QAC3C,MAAM;IACR,CAAC;IACD,qFAAqF;IACrF,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAC1E,8CAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAChD,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YACnC,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACvH,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3C,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;oBACjC,IAAI,CAAC,wBAAwB,EAAE,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;iBACxC;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAA4C;IAC5C,wBAAwB;QACtB,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,QAAQ,EAAE;YAClD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;YAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,OAAO;SACR;QACD,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,UAAU,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC;gBAC3C,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,CAAC;YACxE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;YAC5D,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC3E,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC5E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;oBACzD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;iBAC9D;gBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,kBAAkB,CAAC;gBACnE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;gBAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;gBAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;aAC7C;iBAAM;gBACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC5E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;oBAC1E,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE;wBAC7G,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,sBAAsB,CAAC;qBAC/E;yBAAM;wBACL,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;qBAC9D;oBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;iBAC1D;qBAAM;oBACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;wBAC3E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;wBAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,sBAAsB,CAAC;qBAC/E;yBAAM;wBACL,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;qBAC3E;iBACF;gBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;gBAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;gBAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;aAC7C;SACF;aAAM;YACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC5E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;gBAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;gBACzD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;aAC9D;iBAAM;gBACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC3E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;oBAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,sBAAsB,CAAC;iBAC/E;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;iBAC3E;aACF;YACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IAED,8CAA8C;IAC9C,oBAAoB;QACd,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QACjE,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACnD,CAAC;;sGA/MU,2BAA2B;yHAA3B,2BAA2B;QCbxC,uHAKM;;QALA,oFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEQd,yEAAkD;IAAA,uDAA4B;IAAA,4DAAK;;;IAAjC,0DAA4B;IAA5B,yGAA4B;;;;;IAuBtE,sEAAwD;IAG3C,+SAAS,uBAAe,IAAC,irBAGX,kDAAsC,IAH3B;IAAhC,4DAI0C;IAC1C,wEAAgB;IAAA,uDAA4C;IAAA,4DAAI;IAElE,0EAAoF;IAAnD,sYAAU,wCAA4B,SAAE,iBAAS,IAAC;IAAC,4DAAM;;;IANtF,0DAAmC;IAAnC,8FAAmC;IAIrB,0DAA4C;IAA5C,sHAA4C;;;;IAMlE,sEAAqF;IAEjF,0XAAmC;IADrC,4DACwC;;;IADa,0DAAqC;IAArC,iJAAqC;;;;IAI5F,sEAAwF;IAEpF,0XAAmC;IADrC,4DACuD;;;IADF,0DAAqC;IAArC,iJAAqC;;;;IAI5F,sEAAwF;IAEpF,0XAAmC;IADrC,4DACwC;;;IADe,0DAAqC;IAArC,iJAAqC;;;IAO1F,6EAA4E;IAC1E,uDACF;IAAA,4DAAS;;;IAF0C,iHAAwB;IACzE,0DACF;IADE,0HACF;;;;IALJ,sEAA2C;IACC,2XAAmC;IAE3E,wIAES;IACX,4DAAS;;;IALiC,0DAAmC;IAAnC,8FAAmC;IAE/C,0DAAqB;IAArB,yHAAqB;;;;;IAS/C,sEAAgE;IAG5D,iYAAmC;IAFrC,4DAGmE;IACnE,4EAAoE;IAClE,uDACF;IAAA,4DAAQ;;;;IANY,0DAAiC;IAAjC,iFAAiC;IAAC,2GAAkB;IAIxB,0DAAmB;IAAnB,4GAAmB;IACjE,0DACF;IADE,0HACF;;;IAIJ,0EAA4E;IAExE,qEAAsF;IACxF,4DAAM;;;IAjBZ,0EAAqF;IAG/E,mIAQM;IACR,4DAAM;IAEN,kIAIM;IACR,4DAAM;;;IAhBuB,0DAAuB;IAAvB,yHAAuB;IAWpB,0DAA4C;IAA5C,4IAA4C;;;IAqB9E,0EAEmD;IAE/C,kKAEF;IAAA,4DAAI;;;;IAUJ,sEAAgD;IAG5C,8VAAgC;IAFlC,4DAEmC;IACnC,4EAAoD;IAClD,uDAAmB;IAAA,4DAAQ;;;IAJwB,0DAAkB;IAAlB,2GAAkB;IAGvC,0DAAmB;IAAnB,4GAAmB;IACjD,0DAAmB;IAAnB,0HAAmB;;;IANzB,0EAAuF;IACrF,mIAMM;IACR,4DAAM;;;IAPqB,0DAAqB;IAArB,yHAAqB;;;;IAShD,sEAAuC;IAEnC,sZAAU,2CAA+B,IAAC;IAD5C,4DAC+C;;;;IAGjD,sEAAwC;IAEpC,2XAAmC;IADrC,4DACwC;;;IADa,0DAAqC;IAArC,iJAAqC;;;IAI9F,0EAAmF;IACjF,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,gHACF;;;IArHF,yEAA2D;IAIrD,uDACF;IAAA,4DAAK;IAEL,4HAYM;IAEN,4HAGM;IAEN,4HAGM;IAEN,4HAGM;IAEN,4HAOM;IAEN,4HAqBM;IAcN,8HAaM;IAEN,8HAQM;IAEN,8HAGM;IAEN,8HAGM;IACR,4DAAM;IACN,8HAEM;IACR,4DAAM;;;;IAlHA,0DACF;IADE,6HACF;IAEM,0DAAgD;IAAhD,gJAAgD;IAchD,0DAA6E;IAA7E,iNAA6E;IAK7E,0DAAgF;IAAhF,oNAAgF;IAKhF,0DAAgF;IAAhF,oNAAgF;IAKhF,0DAAmC;IAAnC,mIAAmC;IASnC,0DAAgC;IAAhC,gIAAgC;IAoCnC,0DAAuH;IAAvH,yUAAuH;IAcpH,0DAAmC;IAAnC,mIAAmC;IAUnC,0DAA+B;IAA/B,+HAA+B;IAK/B,0DAAgC;IAAhC,gIAAgC;IAKhB,0DAAkC;IAAlC,qGAAkC;;;;IAW5D,oEAEK;;;;IADH,2KAAgD;;;IAWtD,0EAAkD;IAC7C,uDAAkD;IAAA,4DAAI;;;IAAtD,0DAAkD;IAAlD,0IAAkD;;;;;IAhBzD,0EAAoD;IAG9C,0HAEK;IACP,4DAAK;IAGP,0EAA6E;IACzC,oSAAS,yBAAiB,IAAC;IAC3D,uDACF;IAAA,4DAAI;IAGN,4HAEM;IACR,4DAAM;;;IAfyB,0DAAwC;IAAxC,6KAAwC;IAQjE,0DACF;IADE,qGACF;IAGwB,0DAAsB;IAAtB,yFAAsB;;;;IAe1D,2EAAgD;IAEA,iEAAM;IAAA,4DAAO;IAE3D,0EAA8C;IAMlC,sEAAyF;IACzF,sEAAI;IAAA,oFAAwB;IAAA,4DAAK;IAO7C,2EAAsF;IAExB,kTAAS,qBAAa,IAAC;IAAC,gEAAI;IAAA,4DAAS;;;;IAOrG,2EAA+C;IAEC,iEAAM;IAAA,4DAAO;IAE3D,0EAA8C;IAMlC,sEAAyF;IACzF,sEAAI;IAAA,wDAAY;IAAA,4DAAK;IAOjC,2EAAsF;IAExB,kTAAS,qBAAa,IAAC;IAAC,kEAAM;IAAA,4DAAS;IACjG,8EAAkF;IAAxB,kTAAS,qBAAa,IAAC;IAAC,mEAAO;IAAA,4DAAS;;;IAVtF,2DAAY;IAAZ,gFAAY;;;;IAgB9B,2EAA+C;IAEC,iEAAM;IAAA,4DAAO;IAE3D,0EAA8C;IAM9B,2KAGJ;IAAA,4DAAK;IAOjB,2EAAsF;IAExC,6SAAS,2BAAmB,IAAC;IACrE,kEACF;IAAA,4DAAI;;;;IAOV,0EAAyD;IACR,iEAAM;IAAA,4DAAK;IAE5D,0EAAkC;IAG5B,iFAAqB;IAAA,gEAAI;IACzB,gIACF;IAAA,4DAAM;IAER,0EAA0C;IAEyC,kTAAS,2BAAmB,IAAC;IAC1G,kEACF;IAAA,4DAAS;;ADpQV,MAAM,wBAAwB;IAuDnC,YAAoB,YAAsB,EAAE,MAAsB,EAAU,MAAc,EAChF,aAA4B,EAAU,gBAAkC,EAAU,EAAe,EACjG,GAAsB,EAAU,aAA4B;QAFlD,iBAAY,GAAZ,YAAY,CAAU;QAAkC,WAAM,GAAN,MAAM,CAAQ;QAChF,kBAAa,GAAb,aAAa,CAAe;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,OAAE,GAAF,EAAE,CAAa;QACjG,QAAG,GAAH,GAAG,CAAmB;QAAU,kBAAa,GAAb,aAAa,CAAe;QA/CtE,kBAAa,GAAe,EAAE,CAAC;QAC/B,mBAAc,GAAW,CAAC,CAAC;QAC3B,kBAAa,GAAY,IAAI,CAAC;QAC9B,oBAAe,GAAW,CAAC,CAAC;QAC5B,aAAQ,GAAQ,EAAE,CAAC;QAEnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,cAAS,GAAQ,EAAE,CAAC;QACpB,yBAAoB,GAAQ,IAAI,CAAC;QACjC,mBAAc,GAAY,KAAK,CAAC;QAChC,uBAAkB,GAAQ,UAAU,CAAC;QACrC,kBAAa,GAAW,CAAC,CAAC;QAE1B,yFAAyF;QACzF,gGAAgG;QAEhG,QAAG,GAAQ,EAAE,CAAC;QACd,QAAG,GAAQ,EAAE,CAAC;QAEd,SAAI,GAAW,QAAQ,CAAC;QACxB,SAAS;QACT,SAAS;QAET,iBAAY,GAAQ,EAAE,CAAC;QAEvB,eAAU,GAAQ,EAAE,CAAC;QACrB,aAAQ,GAAQ,EAAE,CAAC;QAEnB,eAAU,GAAQ,IAAI,CAAC;QACvB,4BAAuB,GAAY,KAAK,CAAC;QAOzC,8BAAyB,GAAQ,IAAI,CAAC;QACtC,oBAAe,GAAQ,EAAE,CAAC;QAC1B,iBAAY,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAE/C,sBAAiB,GAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QAQvD,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACpD,IAAI,UAAU,IAAI,QAAQ,EAAE;YAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;SACvE;aAAM;YACL,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;SACpC;QACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IACD,sFAAsF;IACtF,aAAa;QACX,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;IACD,oBAAoB;;QAClB,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC1D,IAAI,mBAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAG,CAAC,CAAC,0CAAE,MAAM,IAAG,CAAC,EAAE;YACjC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACpC,iDAAiD;YACjD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,iBAAiB;QACf,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,UAAwC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE;QACzF,sBAAsB;QACtB,0DAA0D;QAE1D,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAC7D,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC;YACxD,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;YACxC,eAAe,EAAE,QAAQ;YACzB,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,EAAE;YACzE,IAAI,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACtB;YACD,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACtB;SACF;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAExE,8FAA8F;QAE9F,IAAI,CAAC,yBAAyB,GAAG;YAC/B,GAAG,EAAE,uCAAuC;YAC5C,UAAU,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,cAAc;SACzD,CAAC;QACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/C,QAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC;YAC1D,IAAI,EAAE,IAAI,CAAC,yBAAyB;YACpC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,uBAAuB;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,GAAQ,EAAE,IAAS;QACvC,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,IAAI,SAAS,EAAE;YAC3E,IAAI,CAAC,kBAAkB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC/C,QAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC;gBAC3C,IAAI,EAAE,IAAI,CAAC,yBAAyB;gBACpC,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,uBAAuB;aAC/B,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC;gBAClC,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,IAAI;aACV,CAAC;SACH;IACH,CAAC;IACD,wBAAwB,CAAC,KAAU;QACjC,4CAA4C;QAC5C,iCAAiC;QACjC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAE/C,gFAAgF;QAChF,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YACrD,sEAAsE;YACtE,WAAW;YACX,uEAAuE;YACvE,2DAA2D;YAC3D,KAAK,CAAC,IAAI,EAAE,CAAC;YAEb,yGAAyG;YACzG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,MAAW,EAAE,MAAW,EAAE,EAAE;gBAC3F,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,EAAE;oBACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,YAAY;oBACZ,IAAI,YAAY,GAA6B;wBAC3C,SAAS,EAAE,EAAE;wBACb,UAAU,EAAE,EAAE;wBACd,KAAK,EAAE,EAAE;qBACV,CAAC;oBACF,IAAI,4BAA4B,GAAG,YAAY,CAAC;oBAChD,IAAI,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrE,4BAA4B,GAAG,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,KAAU,EAAE,EAAE;4BAC7F,8CAA8C;4BAE9C,IAAI,KAAK,IAAI,CAAC,EAAE;gCACd,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;6BAC3B;iCAAM;gCACL,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC;6BAC/C;4BACD,OAAO,CAAC,CAAC;wBACX,CAAC,EAAE,YAAY,CAAC,CAAC;qBAClB;oBACD,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,KAAK,GAAG,4BAA4B,CAAC,SAAS,GAAG,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAC1L,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBACjD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAEjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;oBAChE,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE;wBAC/C,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;qBAC5F;oBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,KAAK,IAAI,EAAE,EAAE;gBACf,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;gBAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACrC;iBAAM,IAAI,KAAK,IAAI,OAAO,EAAE;gBAC3B,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;aACrE;SACF;IACH,CAAC;IACD,6EAA6E;IAC7E,uBAAuB,CAAC,GAAQ,EAAE,GAAQ;QACxC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9C,qCAAqC;QACrC,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC1C,QAAQ,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,CAAC,OAAY,EAAE,MAAW,EAAE,EAAE;YAEnE,IAAI,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;gBAC5C,KAAK,CAAC,MAAM,CAAC,CAAC;aACf;YACD,wEAAwE;YACxE,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;gBAC3C,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBAClE,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,OAAO,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;gBAC/E,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;gBAChE,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aACtC;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,EAC7F;YACE,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC;SACzC,CAAC;QACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,KAAU,EAAE,EAAE;;YAC5D,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,KAAI,sBAAI,CAAC,YAAY,0CAAE,QAAQ,EAAE,0CAAE,QAAQ,0CAAE,QAAQ,GAAE;gBAC9F,YAAY;gBACZ,IAAI,YAAY,GAA6B;oBAC3C,SAAS,EAAE,EAAE;oBACb,UAAU,EAAE,EAAE;oBACd,KAAK,EAAE,EAAE;iBACV,CAAC;gBACF,IAAI,4BAA4B,GAAG,YAAY,CAAC;gBAChD,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,kBAAkB,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjH,4BAA4B,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,KAAU,EAAE,EAAE;wBACnH,8CAA8C;wBAC9C,IAAI,KAAK,IAAI,CAAC,EAAE;4BACd,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;yBAC3B;6BAAM;4BACL,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC;yBAC/C;wBACD,OAAO,CAAC,CAAC;oBACX,CAAC,EAAE,YAAY,CAAC,CAAC;iBAClB;gBACD,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,4BAA4B,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAChN,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;gBACvI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACpE;QACH,CAAC,CAAC;IACJ,CAAC;IAED,8BAA8B;QAC5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5E,CAAC;IAED,iBAAiB,CAAC,QAAa;QAC7B,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,IAAI,IAAI,CAAC,oBAAoB,IAAI,SAAS,EAAE;YAC/E,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;SACtC;aAAM;YACL,IAAI,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,EAAE;gBAC5C,IAAI,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnE,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;oBACtB,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1E;gBACD,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;oBACtB,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC1E;aACF;SACF;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvF,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/C;QACH,CAAC,EAAE,CAAC,CAAC,KAAU,EAAE,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,iGAAiG;YACjG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACD,uBAAuB,CAAC,UAAe;QACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAC3D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC9E,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;oBACnB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE;oBACrD,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACH,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBACnD,IAAI,QAAQ,CAAC,IAAI,IAAI,UAAU,EAAE;wBAC/B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAW,EAAE,EAAE;4BACvC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;wBAC5B,CAAC,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC;gBACF,IAAI,CAAC,aAAa,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,cAAc,EAAE;oBAC5D,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;wBAC7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;wBAC/C,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC1B,CAAC,EAAE,IAAI,CAAC;iBACT;gBACD,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;gBAC9D,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;aAC1B;SACF;QACD,iBAAiB;QACjB,gCAAgC;QAChC,OAAO;IACT,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IACD,mBAAmB,CAAC,OAAY,EAAE,SAAc;QAC9C,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;QAEvD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;QAExD,IAAI,OAAO,IAAI,OAAO,CAAC,kBAAkB,EAAE;YACzC,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,KAAU,EAAE,EAAE;gBAC3D,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG;iBACnE;qBAAM;oBACL,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG;iBACrH;YACH,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;SACtH;QAED,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5D,CAAC;IACD,eAAe;QACb,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE;YAC/C,IAAI,eAAe,GAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,MAAW,EAAE,EAAE;gBACvD,IAAI,MAAM,CAAC,UAAU,EAAE;oBACrB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBACpC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC;YACvD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;gBAC1C,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBACzC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,oBAAoB,CAAC;aAC1D;SACF;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,eAAe,EAAE;YACpE,6DAA6D;YAC7D,IAAI,WAAW,GAAG,gBAAgB,CAAC;YACnC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE;gBAC9C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBACzC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,oBAAoB,CAAC;aAC1D;iBAAM,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,IAAI,EAAE,EAAE;gBACtH,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;gBAC1C,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBACzC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,gCAAgC,CAAC;aACtE;SACF;aAAM;YACL,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE;gBAC9C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;gBAC1C,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;gBACzC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,oBAAoB,CAAC;gBACzD,uEAAuE;aACxE;SACF;IACH,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;QAC1C,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,EAAE;YAC9C,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACvF,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,cAAc,EAAE;gBAC5D,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;oBAC7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC/C,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC1B,CAAC,EAAE,IAAI,CAAC;aACT;YACD,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,EAAE;gBACrD,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;aACpC;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,cAAc,EAAE;YACtD,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACpC;SACF;IACH,CAAC;IACD,kBAAkB;QAChB,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEtD,IAAI,MAAM,GAAQ;YAChB,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE;YACrC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI;YACzC,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;YACvC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;YAC9B,SAAS,EAAE,EAAE;SACd,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YAC9D,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;gBACvB,UAAU,EAAE,QAAQ,CAAC,EAAE;gBACvB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,aAAa,EAAE,QAAQ,CAAC,aAAa;gBACrC,YAAY,EAAE,QAAQ,CAAC,IAAI;gBAC3B,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,SAAS,EAAE,QAAQ,CAAC,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC;gBACtF,aAAa,EAAE,EAAE;aAClB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,OAAO,EAAE;YACzD,IAAI,oCAAoC,GAAG,KAAK,CAAC;YACjD,IAAI,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC;YAE1B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBACzD,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,IAAI,cAAc,EAAE;oBAC5D,oCAAoC,GAAG,IAAI,CAAC;oBAC5C,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACjD;gBACD,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,MAAM,EAAE;oBAClE,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;iBACjC;gBACD,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,QAAQ,EAAE;oBACpE,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAChD;aACF;YACD,IAAI,oCAAoC,EAAE;gBACxC,IAAI,YAAY,GAAG;oBACjB,OAAO,EAAE,OAAO;oBAChB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,IAAI,CAAC,UAAU;oBACzB,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,OAAO;iBACd;gBACD,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;gBACjC,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,OAAY,EAAE,EAAE;oBAClF,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;wBAClE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBACnC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;wBACV,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,EAAE;4BACzD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;yBAC/F;oBACH,CAAC,CAAC,CAAC,CAAC;gBACN,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;oBACV,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,EAAE;wBACzD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;qBAC/F;gBACH,CAAC,CAAC,CAAC,CAAC;aACL;iBAAM;gBACL,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;aAClC;SACF;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SAClC;IACH,CAAC;IACD,kEAAkE;IAClE,mBAAmB,CAAC,MAAW;QAC7B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACnE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE;oBACvI,4FAA4F;oBAC5F,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;wBACnJ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;4BACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;4BACjC,IAAI,CAAC,wBAAwB,EAAE,CAAC;yBACjC;6BAAM;4BACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;yBACjC;oBACH,CAAC,EAAE,CAAC,CAAC,KAAU,EAAE,EAAE;wBACjB,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,EAAE;4BACzD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;yBAC/F;wBACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;oBAClC,CAAC,CAAC,CAAC,CAAC;iBACL;qBAAM;oBACL,IAAI,CAAC,wBAAwB,EAAE,CAAC;iBACjC;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4CAA4C;IAC5C,wBAAwB;QACtB,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,QAAQ,EAAE;YAClD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;YAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,OAAO;SACR;QACD,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,UAAU,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC;gBAC3C,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,CAAC;YACxE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAC5C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;YAC5D,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC3E,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC5E,mIAAmI;oBACnI,yHAAyH;oBACzH,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;oBACzD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;iBAC9D;gBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,kBAAkB,CAAC;gBACnE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;gBAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;gBAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;gBAC5C,6GAA6G;gBAC7G,oCAAoC;aACrC;iBAAM;gBACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC5E,4HAA4H;oBAC5H,yHAAyH;oBACzH,iEAAiE;oBACjE,yIAAyI;oBACzI,IAAI;oBACJ,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;oBAC1E,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE;wBAC7G,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,sBAAsB,CAAC;qBAC/E;yBAAM;wBACL,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;qBAC9D;oBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;iBAC1D;qBAAM;oBACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;wBAC3E,oIAAoI;wBACpI,+DAA+D;wBAC/D,mEAAmE;wBACnE,yJAAyJ;wBACzJ,MAAM;wBACN,IAAI;wBACJ,2FAA2F;wBAC3F,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;wBAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,sBAAsB,CAAC;qBAC/E;yBAAM;wBACL,oIAAoI;wBACpI,+DAA+D;wBAC/D,mEAAmE;wBACnE,yJAAyJ;wBACzJ,MAAM;wBACN,IAAI;wBACJ,gHAAgH;wBAChH,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;qBAE3E;iBACF;gBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;gBAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;gBAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;aAC7C;SACF;aAAM;YACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC5E,4HAA4H;gBAC5H,wHAAwH;gBACxH,iEAAiE;gBACjE,wIAAwI;gBACxI,IAAI;gBACJ,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;gBAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;gBACzD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;aAC9D;iBAAM;gBACL,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC3E,oIAAoI;oBACpI,+DAA+D;oBAC/D,mEAAmE;oBACnE,wJAAwJ;oBACxJ,MAAM;oBACN,IAAI;oBACJ,2FAA2F;oBAC3F,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;oBAC1E,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,GAAG,sBAAsB,CAAC;iBAC/E;qBAAM;oBACL,oIAAoI;oBACpI,+DAA+D;oBAC/D,mEAAmE;oBACnE,wJAAwJ;oBACxJ,MAAM;oBACN,IAAI;oBACJ,gHAAgH;oBAChH,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,yBAAyB,CAAC;iBAC3E;aACF;YACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IACD,cAAc;QACZ,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE;QACnC,QAAQ,KAAK,EAAE;YACb,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAClB,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC;YACpB,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC;YACpB,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC;YACpB,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC;SACtB;IACH,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;YAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,YAAY,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACD,SAAS,CAAC,SAAc;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE;YAChC,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;YAC1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;YACpE,wCAAwC;YACxC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3F,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;gBAC7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC1D,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC1B,CAAC,EAAE,IAAI,CAAC;SACT;IACH,CAAC;IACD,WAAW;QACT,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzD,IAAI,QAAQ,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ;wBACjD,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBAC7C,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACpC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpC,2BAA2B;oBAC3B,uDAAuD;oBACvD,kDAAkD;oBAElD,0CAA0C;oBAC1C,gCAAgC;oBAChC,IAAI;iBACL;YACH,CAAC,EACC,CAAC,KAAU,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;YACL,0CAA0C;YAC1C,gCAAgC;YAChC,IAAI;SACL;aAAM;YACL,KAAK,CAAC,+CAA+C,CAAC,CAAC;YACvD,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE;gBACpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;SACF;IACH,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACpC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBACnC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY,CAAC,KAAU,EAAE,SAAc;QACrC,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC9B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAChG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,SAAS,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,MAAM,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;IACtE,CAAC;;gGAtuBU,wBAAwB;sHAAxB,wBAAwB;;;;;;;;;;;;QChBrC,yEAAiB;QAO6C,2IAAS,iBAAa,IAAC;QAAC,4DAAI;QAAC,mEAC/E;QAAA,kHAAmF;QAWrF,4DAAK;QAEL,uEAAM;QAGA,wHAsHM;QACR,4DAAM;QAIV,uHAkBM;QACR,4DAAM;QAUd,oNAyBc;QAEd,oNA0Bc;QACd,oNA6Bc;QAEd,oNAmBc;;QAhRG,0DAAsB;QAAtB,sFAAsB;QAgBiB,0DAAiB;QAAjB,sFAAiB;QA2HzD,0DAAoB;QAApB,oFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;AClJgC;;;;;;;;;;;ICaxD,gFAAyF;IACvF,+EACF;IAAA,4DAAY;;;IACZ,gFAA0F;IACxF,+EACF;IAAA,4DAAY;;ADPjB,MAAM,mBAAmB;IAG9B,YAAoB,MAAc,EAAS,aAA4B,EAAS,UAAsB,EAAS,aAA4B;QAAvH,WAAM,GAAN,MAAM,CAAQ;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,eAAU,GAAV,UAAU,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAe;QAD3I,eAAU,GAAG,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACoC,CAAC;IAEhJ,QAAQ;QACN,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE;YACxH,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;IACH,CAAC;IAEH,qFAAqF;IACrF,yBAAyB;QACvB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtF,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE;oBACtC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;oBAC1E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;iBACxC;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGQ,WAAW;QAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IAEM,aAAa;QAClB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,uDAAuD;IACvD,eAAe,CAAC,KAAU;QACxB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;YACjC,KAAK,EAAE,KAAK;YACZ,WAAW,EAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;SACjD,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACxB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,EAAE,qCAAqC,CAAC,CAAC;gBACvF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;;sFAjDU,mBAAmB;iHAAnB,mBAAmB;QCZhC,yEAAmC;QAK2B,sIAAS,iBAAa,IAAC;QAAC,4DAAI;QAC9E,0EACF;QAAA,4DAAK;QAEL,wEAAqC;QAAC,+EAAmB;QAAA,4DAAK;QAC9D,uEAAwC;QAAA,0JAA8F;QAAA,4DAAI;QAC1I,qFAAgE;QAC9D,uEAC0D;QAC1D,8HAEY;QACZ,8HAEY;QACd,4DAAiB;QAEjB,2EAA8D;QAClC,4IAAS,mBAAe,IAAC;QACjD,oEACF;QAAA,4DAAS;;QAZP,2DAA0B;QAA1B,uFAA0B;QACA,0DAA2D;QAA3D,+HAA2D;QAG3D,0DAA4D;QAA5D,gIAA4D;;;;;;;;;;;;;;;;;;;;ACdzC;;;AAKpD,MAAM,UAAU;IAErB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kBAAkB,CAAC,MAAW;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,yFAA+B,aAAa,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC;;oEANU,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;;ACDb,MAAM,gBAAgB;IAE3B,SAAS,CAAC,KAAU,EAAE,GAAG,IAAe;QACtC,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;SAC5H;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;gFAPU,gBAAgB;gIAAhB,gBAAgB;;;;;;;;;;;;;;;;;;ACAtB,MAAM,eAAe;IAExB,SAAS,CAAC,KAAU,EAAE,aAAqB,CAAC;QACxC,IAAI,KAAK,EAAE;YACP,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SACpC;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;;8EAPQ,eAAe;8HAAf,eAAe;;;;;;;;;;;ACL5B;AACA,CAAC,KAA4D,WAAW,mBAAO,CAAC,yBAAe,WAAW,mBAAO,CAAC,yBAAe;AACjI,CAAC,CACuK;AACxK,CAAC,kDAAkD;;AAEnD;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B,GAAG;AAClC;AACA,mCAAmC,GAAG;AACtC;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wDAAwD;AACxD,UAAU,iCAAiC;AAC3C,UAAU,6BAA6B;AACvC;AACA;AACA,sBAAsB,+CAA+C;AACrE,8BAA8B,4BAA4B;AAC1D;AACA,uEAAuE;AACvE,qEAAqE,+FAA+F,oBAAoB,aAAa,oCAAoC,4BAA4B;AACrQ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","sources":["./src/app/dashboard/acceptance-screen/acceptance-screen.component.ts","./src/app/dashboard/acceptance-screen/acceptance-screen.component.html","./src/app/dashboard/bank-ifsc/bank-ifsc.component.ts","./src/app/dashboard/bank-ifsc/bank-ifsc.component.html","./src/app/dashboard/bankifsc.service.ts","./src/app/dashboard/dashboard-landing-page/dashboard-landing-page.component.ts","./src/app/dashboard/dashboard-landing-page/dashboard-landing-page.component.html","./src/app/dashboard/dashboard-layout/dashboard-layout.component.ts","./src/app/dashboard/dashboard-layout/dashboard-layout.component.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/language/language.component.ts","./src/app/dashboard/language/language.component.html","./src/app/dashboard/messages/messages.component.ts","./src/app/dashboard/messages/messages.component.html","./src/app/dashboard/profile/profile.component.ts","./src/app/dashboard/profile/profile.component.html","./src/app/dashboard/survey-odk-questions/survey-odk-questions.component.ts","./src/app/dashboard/survey-odk-questions/survey-odk-questions.component.html","./src/app/dashboard/survey-questions/survey-questions.component.ts","./src/app/dashboard/survey-questions/survey-questions.component.html","./src/app/dashboard/upi-details/upi-details.component.ts","./src/app/dashboard/upi-details/upi-details.component.html","./src/app/dashboard/upi.service.ts","./src/app/pipes/blue-no-format.pipe.ts","./src/app/pipes/number-fixed.pipe.ts","./node_modules/ngx-google-places-autocomplete/__ivy_ngcc__/bundles/ngx-google-places-autocomplete.umd.js","./node_modules/@angular/material/fesm2015/autocomplete.mjs","./node_modules/@angular/material/fesm2015/progress-bar.mjs","./node_modules/@angular/material/fesm2015/radio.mjs"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n//import { OAuthService } from 'angular-oauth2-oidc';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { Auth } from 'aws-amplify';\r\n\r\n@Component({\r\n  selector: 'app-acceptance-screen',\r\n  templateUrl: './acceptance-screen.component.html',\r\n  styleUrls: ['./acceptance-screen.component.scss']\r\n})\r\nexport class AcceptanceScreenComponent implements OnInit {\r\n\r\n  organizationName: string = '';\r\n\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService, private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe((params: any) => {\r\n      if (params['params']['orgName']) {\r\n        this.organizationName = params['params']['orgName'];\r\n      }\r\n    });\r\n  }\r\n\r\n  //  ************ When the user is connected navigate to langauge page **************\r\n  onAgreeClick() {\r\n    let params = {\r\n      code: localStorage.getItem('connid'),\r\n      bluenumber: localStorage.getItem('personBluenumber')\r\n    }\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.setConnectionRequestDetailsByCode(params).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res.isError) {\r\n        this.router.navigateByUrl('home/language');\r\n        // this.onBackClick()\r\n      }\r\n    });\r\n  }\r\n  //  ************ When the user clicks on Reject Logout **************\r\n  onRejectClick() {\r\n    localStorage.clear();\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"id_token\");\r\n    Auth.signOut();\r\n    // this.oauthService.logOut();\r\n  }\r\n\r\n}\r\n\r\n\r\n// Auth.signOut().then(() => {\r\n//   this.router.navigateByUrl('auth/home')\r\n// }).catch(error => {\r\n//   alert(error);\r\n// });","<div class=\"container\">\r\n  <div class=\"row text-center acceptance-scren\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"content-bor pt-5\">\r\n        <p class=\"fw-light\">\r\n          Please connect to <br>\r\n          <strong class=\"fw-bold\"> {{ organizationName }} </strong>\r\n          to answer this survey\r\n        </p>\r\n        <div>\r\n          <button class=\"btn btn-p-agr \" (click)=\"onAgreeClick()\">Agree & Connect</button>\r\n          <button class=\"btn btn-l-reje\" (click)=\"onRejectClick()\">Reject</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Renderer2 } from '@angular/core';\r\nimport { BankIfscService } from '../bankifsc.service';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { SurveyService } from '../survey.service';\r\n\r\n\r\nexport interface State {\r\n  name: string;\r\n}\r\n\r\nexport interface IfscAddressGroup {\r\n  ifsc: string;\r\n  address: string[];\r\n}\r\n\r\nexport interface BankDetails {\r\n  bank?: string;\r\n  state?: string;\r\n  city1?: string;\r\n  city2?: string;\r\n  ifsc?: string;\r\n  branch?: string;\r\n  address?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-bank-ifsc',\r\n  templateUrl: './bank-ifsc.component.html',\r\n  styleUrls: ['./bank-ifsc.component.scss']\r\n})\r\n\r\nexport class BankIfscComponent {\r\n\r\n  ifsc: string = '';\r\n  address: string = '';\r\n  ifscAddressGroup: IfscAddressGroup[] = [];\r\n  selectedOption: string = '';\r\n  bankDetails: BankDetails = {\r\n    bank: '',\r\n    state: '',\r\n    city1: '',\r\n    city2: '',\r\n    ifsc: '',\r\n    branch: '',\r\n    address: ''\r\n  };\r\n\r\n  stateForm: FormGroup = this._formBuilder.group({\r\n    stateGroup: '',\r\n  });\r\n\r\n  ifscAddressGroupOptions: Observable<IfscAddressGroup[]> | undefined;\r\n\r\n  title = 'sample-app';\r\n  floatLabelControl = new FormControl('auto');\r\n\r\n  bankControl = new FormControl('', [Validators.required]);\r\n  stateControl = new FormControl('', [Validators.required]);\r\n  cityControl = new FormControl('', [Validators.required]);\r\n  branchControl = new FormControl('', [Validators.required]);\r\n  stateGroup = new FormControl('', [Validators.required]);\r\n  radioButtonValue: number = 0;\r\n  ifscControl = new FormControl('', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]);\r\n  accountNumberControl = new FormControl('', [Validators.required, Validators.minLength(8)]);\r\n  retypeAccountNumberControl = new FormControl('', [Validators.required]);\r\n\r\n\r\n  banks: string[] = []; // ['One', 'Two', 'Three'];\r\n  states: string[] = [];\r\n  cities: string[] = [];\r\n  branches: string[] = [];\r\n  ifscAndAddress: IfscAddressGroup[] = [];\r\n\r\n  filteredBanks: Observable<string[]> | undefined;\r\n  filteredStates: Observable<string[]> | undefined;\r\n  filteredCities: Observable<string[]> | undefined;\r\n  filteredBranches: Observable<string[]> | undefined;\r\n\r\n  private _filterBanks(value: string): string[] {\r\n    const filterValue = value?.toLowerCase();\r\n    return this.banks.filter(bank => bank.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filter2(value: string): string[] {\r\n    const filterValue = value?.toLowerCase();\r\n\r\n    return this.states.filter(state => state.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterCity(value: string): string[] {\r\n    const filterValue = value?.toLowerCase();\r\n\r\n    return this.cities.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterBranch(value: string): string[] {\r\n    const filterValue = value?.toLowerCase();\r\n\r\n    return this.branches.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterAddress = (opt: string[], value: string): string[] => {\r\n    const filterValue = value?.toLowerCase();\r\n\r\n    return opt.filter(item => item.toLowerCase().includes(filterValue));\r\n  };\r\n\r\n  private _filterGroup(value: string): IfscAddressGroup[] {\r\n    if (value) {\r\n      return this.ifscAddressGroup\r\n        .map(group => ({ ifsc: group.ifsc, address: this._filterAddress(group.address, value) }))\r\n        .filter(group => group.address.length > 0);\r\n    }\r\n    return this.ifscAddressGroup;\r\n  }\r\n\r\n  onBankdetailsSubmit() {\r\n    let ifsc = '';\r\n    this.accountNumberControl.markAllAsTouched();\r\n    this.retypeAccountNumberControl.markAllAsTouched();\r\n\r\n    if (this.selectedOption == 'ifsccode') {\r\n      ifsc = this.ifscControl.value;\r\n    } else if (this.selectedOption == 'noifsccode') {\r\n      ifsc = this.ifsc;\r\n      this.bankControl.markAllAsTouched();\r\n      this.stateControl.markAllAsTouched();\r\n      this.cityControl.markAllAsTouched();\r\n      this.branchControl.markAllAsTouched();\r\n      this.stateGroup.markAllAsTouched();\r\n    }\r\n    // **** Check Account No is Valid or not ***********\r\n    if (this.accountNumberControl.invalid || this.retypeAccountNumberControl.invalid) { return; }\r\n    if (this.accountNumberControl.value !== this.retypeAccountNumberControl.value) {\r\n      this.sharedService.showToastMesaages('error', 'Account number not matched');\r\n      return;\r\n    } else {\r\n      // *********** If Ifsc Code is present Save Bank Data *****************\r\n      if (this.selectedOption == 'ifsccode') {\r\n        this.saveBankDetails(ifsc);\r\n      } else if (this.selectedOption == 'noifsccode') {\r\n        // *********** Double check with Timeout for Bank Details Validity beacause of Autocomplete Fields *********************\r\n        if (this.checkBankDetailsValidity()) {\r\n          this.sharedService.startLoader();\r\n          setTimeout(() => {\r\n            this.sharedService.stopLoader();\r\n            if (this.checkBankDetailsValidity()) {\r\n              this.saveBankDetails(ifsc);\r\n            }\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // ********* Returns True / False based on Bank details **********************\r\n  checkBankDetailsValidity() {\r\n    return this.bankControl.valid && this.stateControl.valid && this.cityControl.valid\r\n      && this.branchControl.valid && this.stateGroup.valid;\r\n  }\r\n  // *********** API to save Bak Details ****************\r\n  saveBankDetails(ifsc: any) {\r\n    this.sharedService.startLoader();\r\n    this.bankifscService.saveUserDetails({\r\n      ifscCode: ifsc,\r\n      surveySetId: localStorage.getItem('surveySetId'),\r\n      bankAccountNumber: this.accountNumberControl.value\r\n    }).subscribe((res: any) => {\r\n      if (!res['isError']) {\r\n        this.sharedService.showToastMesaages('success', 'User bank details saved successfully');\r\n        this.router.navigateByUrl('home/info');\r\n      }\r\n      this.sharedService.stopLoader();\r\n      //redirect to specified page\r\n    });\r\n  }\r\n\r\n  constructor(private router: Router, private bankifscService: BankIfscService, private renderer: Renderer2,\r\n    private _formBuilder: FormBuilder, private sharedService: SharedService, private surveyService: SurveyService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('ssid') != null && localStorage.getItem('ssid') != 'null' && localStorage.getItem('ssid') != '') {\r\n      this.fetchSurveySetSSIDDetails();\r\n    }\r\n  }\r\n  // ********** Method to fetch the Survey Info based on SSID  ************************\r\n  fetchSurveySetSSIDDetails() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        if (res['result']['isBankDetailsExist']) {\r\n          this.sharedService.showToastMesaages('info', 'Bank details already exist');\r\n          this.router.navigateByUrl('home/info');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onVerify() {\r\n    this.sharedService.startLoader();\r\n    this.bankifscService.getBankDetails(this.ifscControl.value).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.bankDetails = res.result;\r\n      }\r\n    }, (error => {\r\n      this.sharedService.showToastMesaages('error', 'Enter valid IFSC Code');\r\n    }));\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.radioButtonValue == 2) {\r\n      // ******** Reset IFSC, Bank Details of i have IFSC Code Option ******************\r\n      this.ifscControl.reset();\r\n      this.bankDetails = {};\r\n\r\n      this.sharedService.startLoader();\r\n      this.selectedOption = 'noifsccode';\r\n      this.bankifscService.getBankNames().subscribe((data: any) => {\r\n        this.bankControl.setValue('');\r\n        this.clearValues(\"STATE\", \"CITY\", \"BRANCH\", \"IFSC\", \"ACCOUNT_NUMBER\");\r\n        this.banks = data.result.names;\r\n        //state filtered options     \r\n        this.sharedService.stopLoader();\r\n        this.filteredBanks = this.bankControl.valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => this._filterBanks(value)),\r\n        );\r\n      });\r\n    } else if (this.radioButtonValue == 1) {\r\n      this.selectedOption = 'ifsccode';\r\n      // ******** Reset I Dont have IFSC Code Option Data ******************\r\n      this.clearValues(\"BANK\", \"STATE\", \"CITY\", \"BRANCH\", \"IFSC\", \"ACCOUNT_NUMBER\");\r\n    }\r\n    this.accountNumberControl.reset();\r\n    this.retypeAccountNumberControl.reset();\r\n  }\r\n\r\n  // get states bases on bank\r\n  getStates() {\r\n    this.sharedService.startLoader();\r\n    this.bankifscService.getStateNames(this.bankControl.value).subscribe((data: any) => {\r\n      this.stateControl.setValue('');\r\n      this.states = data.result.state;\r\n      //state filtered options     \r\n      this.clearValues(\"CITY\", \"BRANCH\", \"IFSC\", \"ACCOUNT_NUMBER\");\r\n      this.sharedService.stopLoader();\r\n      this.filteredStates = this.stateControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filter2(value)),\r\n      );\r\n    });\r\n  }\r\n\r\n  // get cities bases on bank and state\r\n  getCities() {\r\n    this.sharedService.startLoader();\r\n    this.bankifscService.getCityNames(this.bankControl.value, this.stateControl.value).subscribe((data: any) => {\r\n      this.cityControl.setValue('');\r\n      this.cities = data.result.cities;\r\n\r\n      //state filtered options     \r\n      this.clearValues(\"BRANCH\", \"IFSC\", \"ACCOUNT_NUMBER\");\r\n      this.sharedService.stopLoader();\r\n      this.filteredCities = this.cityControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filterCity(value)),\r\n      );\r\n    });\r\n  }\r\n\r\n  //get branches based on bank, state and city\r\n  getBranches() {\r\n    this.sharedService.startLoader();\r\n    this.bankifscService.getBranchNames(this.bankControl.value, this.stateControl.value, this.cityControl.value).subscribe((data: any) => {\r\n      this.branchControl.setValue('');\r\n      this.branches = data.result.branches;\r\n\r\n      //state filtered options     \r\n      this.clearValues(\"IFSC\", \"ACCOUNT_NUMBER\");\r\n      this.sharedService.stopLoader();\r\n      this.filteredBranches = this.branchControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filterBranch(value)),\r\n      );\r\n    });\r\n  }\r\n\r\n  // get ifsc and address based on bank, state, city and branch\r\n  getIFSCAndAddressList() {\r\n\r\n    this.sharedService.startLoader();\r\n    this.bankifscService.getIfscAndAddress(\r\n      this.bankControl.value, this.stateControl.value, this.cityControl.value, this.branchControl.value\r\n    ).subscribe((data: any) => {\r\n      this.stateGroup.setValue('');\r\n      this.clearValues(\"IFSC\");\r\n      this.ifscAddressGroup = data.result;\r\n      this.sharedService.stopLoader();\r\n      this.ifscAddressGroup = data.result.map((item: any) => ({\r\n        ifsc: item.ifsc,\r\n        address: [item.address]\r\n      }));\r\n\r\n      this.ifscAddressGroupOptions = this.stateForm.get('stateGroup')!.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filterGroup(value)),\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  // get ifsc and address On ifsc select\r\n  getSelectedIFSCAddress() {\r\n    this.ifscAddressGroupOptions?.subscribe(res => {\r\n      let data = res.filter(i => i.address[0] == this.stateGroup.value);\r\n      if (data && data.length > 0) {\r\n        this.ifsc = data[0]['ifsc'];\r\n        this.address = this.stateGroup.value;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  onBackClick() {\r\n    this.router.navigateByUrl('/home');\r\n  }\r\n\r\n  clearValues(...args: any[]) {\r\n    args.forEach(arg => {\r\n      switch (arg) {\r\n        case \"BANK\":\r\n          this.bankControl.setValue('');\r\n          this.banks = [];\r\n          this.bankControl.reset();\r\n          break;\r\n        case \"STATE\":\r\n          this.stateControl.setValue('');\r\n          this.states = [];\r\n          this.stateControl.reset();\r\n          break;\r\n        case \"CITY\":\r\n          this.cityControl.setValue('');\r\n          this.cities = [];\r\n          this.cityControl.reset();\r\n          break;\r\n        case \"BRANCH\":\r\n          this.branchControl.setValue('');\r\n          this.branches = [];\r\n          this.branchControl.reset();\r\n          break;\r\n        case \"IFSC\":\r\n          this.stateGroup.setValue('');\r\n          this.ifsc = '';\r\n          this.address = '';\r\n          this.stateGroup.reset();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********** Triggers when text is entered in the Autocomplete field without selection *******************\r\n  onAutoCompleteInputChange(event: any, type: string, filterArray: any) {\r\n    setTimeout(() => {\r\n      let nameEntered = event.target.value;\r\n      let selectedName: any;\r\n      if (nameEntered != '') {\r\n        selectedName = filterArray.filter((data: any) => data.toLowerCase() == nameEntered.toLowerCase());\r\n        // ********* If enetered value is not present clear the field and dependent field Values ****************\r\n        if (selectedName.length == 0) {\r\n          switch (type) {\r\n            case 'bank':\r\n              this.bankControl.reset();\r\n              this.clearValues(\"STATE\", \"CITY\", \"BRANCH\", \"IFSC\");\r\n              break;\r\n            case 'state':\r\n              this.stateControl.reset();\r\n              this.clearValues(\"CITY\", \"BRANCH\", \"IFSC\");\r\n              break;\r\n            case 'city':\r\n              this.cityControl.reset();\r\n              this.clearValues(\"BRANCH\", \"IFSC\");\r\n              break;\r\n            case 'branch':\r\n              this.branchControl.reset();\r\n              this.clearValues(\"IFSC\");\r\n              break;\r\n            case 'ifsc':\r\n              this.stateGroup.reset();\r\n              this.ifsc = '';\r\n              this.address = '';\r\n              break;\r\n          }\r\n        } else {\r\n          // ************** If Entered Value is present in the filtered list the call the dependency APIs *******************\r\n          switch (type) {\r\n            case 'bank':\r\n              this.getStates();\r\n              break;\r\n            case 'state':\r\n              this.getCities();\r\n              break;\r\n            case 'city':\r\n              this.getBranches();\r\n              break;\r\n            case 'branch':\r\n              this.getIFSCAndAddressList();\r\n              break;\r\n            case 'ifsc':\r\n              this.getSelectedIFSCAddress();\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      //  else {\r\n      //   this.bankControl.reset();\r\n      // }\r\n    }, 1000);\r\n  }\r\n\r\n}","<div class=\"pma bank-ifsc-details\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h1 class=\"pma-heading text-gray-1 mb-5\">\r\n          <i class=\"fas fa-chevron-left mouse-pointer pe-3\" (click)=\"onBackClick()\"></i>\r\n          Pay to my Bank\r\n        </h1>\r\n        <div class=\"mb-3\">\r\n          <label id=\"example-radio-group-label\" class=\"radio-label mb-5\">\r\n            Do you know your bank's IFSC Code?\r\n          </label>\r\n\r\n          <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"radioButtonValue\"\r\n            aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\">\r\n            <mat-radio-button value=\"1\">I have my IFSC Code</mat-radio-button>\r\n            <mat-radio-button value=\"2\">I don't have my IFSC Code</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n\r\n        <div class=\"text-end pma-buttons\">\r\n          <button mat-raised-button (click)=\"onSubmit()\" [disabled]=\"radioButtonValue == 0\"\r\n            class=\"btn btn-mm-p\">Submit</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 ifsc-code-details\">\r\n        <div *ngIf=\"selectedOption === 'noifsccode'\">\r\n          <h6 class=\"bankdetilas-label\">Fill Bank Details:</h6>\r\n          <form class=\"example-form\">\r\n            <div>\r\n              <mat-label>Bank Name</mat-label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input type=\"text\" placeholder=\"Enter Bank Name\" aria-label=\"Choose Bank Name\" matInput\r\n                  [formControl]=\"bankControl\" [matAutocomplete]=\"autoBank\"\r\n                  (change)=\"onAutoCompleteInputChange($event, 'bank', banks)\">\r\n                <mat-autocomplete autoActiveFirstOption #autoBank=\"matAutocomplete\" (optionSelected)=\"getStates()\">\r\n                  <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank\">\r\n                    {{bank}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"bankControl.hasError('required') && bankControl.touched\">\r\n                  Bank Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div>\r\n              <mat-label>State Name</mat-label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input type=\"text\" placeholder=\"Enter State name\" aria-label=\"Choose State name\" matInput\r\n                  [formControl]=\"stateControl\" [matAutocomplete]=\"autoState\"\r\n                  (change)=\"onAutoCompleteInputChange($event, 'state', states)\">\r\n                <mat-autocomplete autoActiveFirstOption #autoState=\"matAutocomplete\" (optionSelected)=\"getCities()\">\r\n                  <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state\">\r\n                    {{state}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"stateControl.hasError('required') && stateControl.touched\">\r\n                  State Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div>\r\n              <mat-label>City Name</mat-label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input type=\"text\" placeholder=\"Enter City Name\" aria-label=\"Pick City Name\" matInput\r\n                  [formControl]=\"cityControl\" [matAutocomplete]=\"autoCity\"\r\n                  (change)=\"onAutoCompleteInputChange($event, 'city', cities)\">\r\n                <mat-autocomplete autoActiveFirstOption #autoCity=\"matAutocomplete\" (optionSelected)=\"getBranches()\">\r\n                  <mat-option *ngFor=\"let city of filteredCities | async\" [value]=\"city\">\r\n                    {{city}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"cityControl.hasError('required') && cityControl.touched\">\r\n                  City Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div>\r\n              <mat-label>Branch</mat-label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input type=\"text\" placeholder=\"Enter Branch Name\" aria-label=\"Pick Branch Name\" matInput required\r\n                  [formControl]=\"branchControl\" [matAutocomplete]=\"autoBranch\"\r\n                  (change)=\"onAutoCompleteInputChange($event, 'branch', branches)\">\r\n                <mat-autocomplete autoActiveFirstOption #autoBranch=\"matAutocomplete\"\r\n                  (optionSelected)=\"getIFSCAndAddressList()\">\r\n                  <mat-option *ngFor=\"let branch of filteredBranches | async\" [value]=\"branch\">\r\n                    {{branch}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"branchControl.hasError('required') && branchControl.touched\">\r\n                  Branch Name is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </form>\r\n          <form [formGroup]=\"stateForm\">\r\n            <div>\r\n              <mat-label>IFSC & Address </mat-label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input type=\"text\" matInput placeholder=\"Enter Address\" [formControl]=\"stateGroup\" required\r\n                  [matAutocomplete]=\"autoGroup\" (change)=\"onAutoCompleteInputChange($event, 'ifsc', ifscAndAddress)\">\r\n                <mat-autocomplete #autoGroup=\"matAutocomplete\" (optionSelected)=\"getSelectedIFSCAddress()\">\r\n                  <mat-optgroup *ngFor=\"let group of ifscAddressGroupOptions | async\" [label]=\"group.ifsc\">\r\n                    <mat-option *ngFor=\"let address of group.address\" [value]=\"address\">\r\n                      {{address}}\r\n                    </mat-option>\r\n                  </mat-optgroup>\r\n                </mat-autocomplete>\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"stateGroup.hasError('required') && stateGroup.touched\">\r\n                  Address is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </form>\r\n          <div class=\"example-full-width mb-2 m-mt-sm\">\r\n            <h6 class=\"review-data\">IFSC </h6>\r\n            <p class=\"branch-details\">{{ifsc}}</p>\r\n          </div>\r\n          <div class=\"example-full-width\">\r\n            <h6 class=\"review-data\">Branch Address</h6>\r\n            <p class=\"branch-details\">{{address}}</p>\r\n          </div>\r\n          <div>\r\n            <mat-label>Account Number</mat-label>\r\n            <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n              <input type=\"text\" placeholder=\"Enter Account Number\" aria-label=\"Enter Account Number\" matInput\r\n                [formControl]=\"accountNumberControl\" minlength=\"8\" maxlength=\"20\" autocomplete=\"off\">\r\n              <mat-error class=\"m-mt-sm\"\r\n                *ngIf=\"accountNumberControl.hasError('required') && accountNumberControl.touched\">\r\n                Account Number is required\r\n              </mat-error>\r\n              <mat-error class=\"m-mt-sm\"\r\n                *ngIf=\"accountNumberControl.hasError('minlength') && accountNumberControl.touched\">\r\n                Enter valid Account Number\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"example-full-width m-mt-sm\" appearance=\"outline\">\r\n              <input type=\"password\" placeholder=\"Retype Account Number\" aria-label=\"Retype Account Number\" matInput\r\n                [formControl]=\"retypeAccountNumberControl\" autocomplete=\"off\">\r\n              <mat-error class=\"m-mt-sm\"\r\n                *ngIf=\"retypeAccountNumberControl.hasError('required') && retypeAccountNumberControl.touched\">\r\n                Account Number is required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"pma-buttons mt-3\">\r\n            <button mat-raised-button (click)=\"onBankdetailsSubmit()\" class=\"btn btn-mm-p w-100\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- ********************** I HAve IFSC CODE ********************* -->\r\n      <div class=\"col-12 have-ifsc-code\">\r\n        <div *ngIf=\"selectedOption === 'ifsccode'\">\r\n          <form class=\"example-form\">\r\n            <div>\r\n              <mat-label>IFSC Code</mat-label>\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <input type=\"text\" placeholder=\"Enter IFSC Code\" aria-label=\"Enter your IFSC Code\" matInput\r\n                  [formControl]=\"ifscControl\" minlength=\"11\" maxlength=\"11\">\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"ifscControl.hasError('required') && ifscControl.touched\">\r\n                  IFSC Code is required\r\n                </mat-error>\r\n                <mat-error class=\"m-mt-sm\" *ngIf=\"ifscControl.hasError('minlength') && ifscControl.touched\">\r\n                  Enter valid IFSC Code\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"text-end pma-buttons\">\r\n              <button mat-raised-button (click)=\"onVerify()\" [disabled]=\"ifscControl.invalid\"\r\n                class=\"btn btn-mm-p\">Verify</button>\r\n            </div>\r\n\r\n            <ng-container *ngIf=\"bankDetails?.bank\">\r\n              <h6 class=\"bankdetilas-label mb-3\">Your bank is:</h6>\r\n\r\n              <ul class=\"list-unstyled p-0\">\r\n                <li class=\"review-data\">Bank Name</li>\r\n                <li class=\"branch-details\">{{bankDetails.bank}}</li>\r\n                <li class=\"review-data\">State Name</li>\r\n                <li class=\"branch-details\">{{bankDetails.state}}</li>\r\n                <li class=\"review-data\">City Name1</li>\r\n                <li class=\"branch-details\">{{bankDetails!.city1}}</li>\r\n                <li class=\"review-data\">City Name2</li>\r\n                <li class=\"branch-details\">{{bankDetails!.city2}}</li>\r\n                <li class=\"review-data\">Branch</li>\r\n                <li class=\"branch-details\">{{bankDetails.branch}}</li>\r\n                <li class=\"review-data\">IFSC</li>\r\n                <li class=\"branch-details\">{{bankDetails.ifsc}}</li>\r\n                <li class=\"review-data\">Address</li>\r\n                <li class=\"branch-details\">{{bankDetails.address}}</li>\r\n              </ul>\r\n              <div>\r\n                <mat-label>Account Number</mat-label>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input type=\"text\" placeholder=\"Enter Account Number\" aria-label=\"Enter Account Number\" matInput\r\n                    [formControl]=\"accountNumberControl\" minlength=\"8\" maxlength=\"20\" autocomplete=\"off\">\r\n                  <mat-error class=\"m-mt-sm\"\r\n                    *ngIf=\"accountNumberControl.hasError('required') && accountNumberControl.touched\">\r\n                    Account Number is required\r\n                  </mat-error>\r\n                  <mat-error class=\"m-mt-sm\"\r\n                    *ngIf=\"accountNumberControl.hasError('minlength') && accountNumberControl.touched\">\r\n                    Enter valid Account Number\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"example-full-width m-mt-sm\" appearance=\"outline\">\r\n                  <input type=\"password\" placeholder=\"Retype Account Number\" aria-label=\"Retype Account Number\" matInput\r\n                    [formControl]=\"retypeAccountNumberControl\" autocomplete=\"off\">\r\n                  <mat-error class=\"m-mt-sm\"\r\n                    *ngIf=\"retypeAccountNumberControl.hasError('required') && retypeAccountNumberControl.touched\">\r\n                    Account Number is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pma-buttons mt-3\">\r\n                <button mat-raised-button (click)=\"onBankdetailsSubmit()\" class=\"btn btn-mm-p w-100 padding-y\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BankIfscService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getBankNames(): Observable<any> {\r\n        return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/GetBankNames`);\r\n    }\r\n\r\n    getStateNames(bankName: string): Observable<any> {       \r\n        const params =  new HttpParams().set('bank', bankName);\r\n        return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/GetStateNamesByBank`, {params});        \r\n    }\r\n\r\n    getCityNames(bankName: string, stateName: string): Observable<any> {\r\n        const params =  new HttpParams().set('bank', bankName).set('state', stateName);\r\n        return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/GetCityNameByBankAndState`, {params});        \r\n    }\r\n\r\n    getBranchNames(bankName: string, stateName: string, cityName: string): Observable<any> {\r\n        const params =  new HttpParams().set('bank', bankName).set('state', stateName).set('city', cityName);\r\n        return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/GetBranchesByBankStateCity`, {params});        \r\n    }\r\n\r\n    getIfscAndAddress(bankName: string, stateName: string, cityName: string, branchName: string): Observable<any> {\r\n        const params =  new HttpParams().set('bank', bankName).set('state', stateName).set('city', cityName).set('branch', branchName);\r\n        return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/GetIfscAddressByBankStateCityBranch`, {params});        \r\n    }\r\n\r\n    getBankDetails(ifsc: string): Observable<any> {\r\n        const params =  new HttpParams().set('ifsc', ifsc);\r\n        return this.http.get(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/GetBankStateCityBranchByIfsc`, {params});        \r\n    } \r\n\r\n    saveUserDetails(params: any): Observable<any> {\r\n        return this.http.post(`${environment.BlueNumberGlobalAPI}/api/v1/Banks/SaveUserDetails`, params);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SharedService } from '../../shared/shared.service';\r\nimport { finalize, interval } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { SurveyService } from '../survey.service';\r\nimport { NgbModal, NgbModalConfig } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ClaimsService } from 'src/app/claims/claims.service';\r\nimport { ConfigConstants } from 'src/app/models/constants';\r\nimport { CurrencyService } from '../currency-service.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-landing-page',\r\n  templateUrl: './dashboard-landing-page.component.html',\r\n  styleUrls: ['./dashboard-landing-page.component.scss']\r\n})\r\nexport class DashboardLandingPageComponent implements OnInit {\r\n\r\n  @ViewChild('content', { static: false }) content!: ElementRef;\r\n  @ViewChild('locationPopup', { static: false }) locationPopup!: ElementRef;\r\n  @ViewChild('otpPopup', { static: false }) otpPopup!: ElementRef;\r\n  @ViewChild('qualifMsgPopup', { static: false }) qualifMsgPopup!: ElementRef;\r\n  @ViewChild('bankPopup', { static: false }) bankPopup!: ElementRef;\r\n\r\n  globalConstants = ConfigConstants;\r\n\r\n  popupMsg: any = '';\r\n  popupMsgConn: any = '';\r\n\r\n  firstSurveyId: any = '';\r\n  surveyStartDate: any;\r\n  surveyHistory: Array<any> = [];\r\n\r\n  mainSurveyDetails: any = {};\r\n  connectionCode: any;\r\n  connectionDetails: any;\r\n  timerSubscription: any;\r\n\r\n  surveyDetails: any = {};\r\n  timeCounter: any;\r\n  nextSurveyDetails: any = {};\r\n  disableStartSurvey: boolean = false;\r\n  surveyOnFutureDate: boolean = false;\r\n  surveyState: any;\r\n  msg: any;\r\n  isFirstSurveyAnswerd: boolean = false;\r\n  currentSurveyDay: number = 1;\r\n  maxResponseCount: number = 0;\r\n  isFutureDaySurvey: boolean = false;\r\n  lastSurveyId: any = '';\r\n  appId: any = '';\r\n  surveyId: any = '';\r\n\r\n  surveyType: any = '';\r\n  claimType: any = '';\r\n  isSidOrSSId: string = '';\r\n  isAllSurveysAnswered: boolean = false;\r\n  isSIDAnswered: boolean = false;\r\n  isSidSsidValid: boolean = true;\r\n\r\n  latitude: any = 0;\r\n  longitude: any = 0;\r\n\r\n\r\n  formInput = ['input1', 'input2', 'input3', 'input4'];\r\n  otpForm: FormGroup;\r\n  isOtpInValid: boolean = false;\r\n  numberPattern = /^[0-9]+$/;\r\n\r\n  loggedInUserDetails: any = {};\r\n\r\n  hours: any;\r\n  minutes: any;\r\n  seconds: any;\r\n  currentSurveyDetails: any = {};\r\n\r\n  languageSelected: any = 'https://youtube.com/embed/j2Kcpw3BcJQ';\r\n  languagesList: Array<any> = [\r\n    // { label: 'Select a Language', value: '' },\r\n    { label: 'English (default)', value: 'https://youtube.com/embed/j2Kcpw3BcJQ' },\r\n  ];\r\n  isFirstSurveyNotAnsweredWithInTime: boolean = false;\r\n  isShareQrCodeCompleted: boolean = false;\r\n\r\n  constructor(private router: Router,\r\n    private sharedService: SharedService, private route: ActivatedRoute,\r\n    private surveyService: SurveyService,\r\n    private claimsService: ClaimsService,\r\n    private dashboardService: DashboardService, private modalService: NgbModal,\r\n    config: NgbModalConfig) {\r\n    this.otpForm = this.toFormGroup(this.formInput);\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  toFormGroup(elements: any) {\r\n    const group: any = {};\r\n    elements.forEach((key: any) => {\r\n      group[key] = new FormControl('', Validators.required);\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    localStorage.removeItem('surveyMessages');\r\n\r\n    // ************ Update the boolean value **************\r\n    this.sharedService.successErrorMsg['isRequestSurvey'] = false;\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if (params['params']['ssid']) {\r\n        localStorage.setItem('ssid', params['params']['ssid']);\r\n      }\r\n    });\r\n\r\n    this.surveyType = localStorage.getItem('surveyType');\r\n    this.claimType = localStorage.getItem('claim');\r\n    let sid = localStorage.getItem('sid');\r\n    let ssid = localStorage.getItem('ssid');\r\n\r\n    // ******* Check whether sid is there or ssid ***************\r\n    if (sid != '' && sid != 'null' && sid != null) {\r\n      this.isSidOrSSId = 'sid';\r\n    }\r\n    if (ssid != '' && ssid != 'null' && ssid != null) {\r\n      this.isSidOrSSId = 'ssid';\r\n    }\r\n\r\n    this.appId = localStorage.getItem('app');\r\n\r\n    this.fetchProfileDetails();\r\n    this.fetchSurveyInfo();\r\n    this.getLocation();\r\n  }\r\n  onFAQClick() {\r\n    window.open('https://millionmakers.org/faqs');\r\n\r\n  }\r\n  // ********** Method to fetch the Survey Info based on SID or SSID ************************\r\n  fetchSurveyInfo() {\r\n    this.msg = \"\";\r\n    this.isFirstSurveyAnswerd = false;\r\n    this.sharedService.startLoader();\r\n    if (localStorage.getItem('sid') != '' && localStorage.getItem('sid') != null && localStorage.getItem('sid') != 'null') {\r\n      this.fetchSurveySIDDetails();\r\n    } else if (localStorage.getItem('ssid') == null || localStorage.getItem('ssid') == 'null') {\r\n      this.surveyState = 5; //When ssid is null\r\n      this.msg = \"Please scan the QR code again.\";\r\n      this.isSidSsidValid = false;\r\n      return;\r\n    } else {\r\n      this.fetchSurveySetSSIDDetails();\r\n    }\r\n  }\r\n  // ********** Method to fetch the Survey Info based on SID  ************************\r\n  fetchSurveySIDDetails() {\r\n    this.surveyService.getSurveyDetailsbyQRCode(localStorage.getItem('sid')).subscribe(result => {\r\n      this.surveyDetails = result['result'];\r\n      this.surveyId = result['result']['id'];\r\n      let now: any = new Date(); // todays date\r\n      now.setHours(0, 0, 0, 0);\r\n      let pend: any = new Date(this.surveyDetails['endDate']);\r\n      pend = new Date(pend.getTime() + pend.getTimezoneOffset() * 60000);\r\n      console.log(\"DATE: \", pend);\r\n\r\n      let pduration = pend - now;\r\n      // *********** If time diff is -ve. Survey Time is completed *******************\r\n      if (pduration < 0) {\r\n        this.surveyState = 2;\r\n        this.msg = \"Survey program ended. We will notify when next program available.\";\r\n        return;\r\n      }\r\n\r\n      let end: any = new Date(this.surveyDetails['endDate']);\r\n      // let end: any = new Date(this.surveyDetails['startDate']);\r\n\r\n      end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      let duration = end - now;\r\n      // *********** If time diff is 0. Survey is Available & it is current day survey *******************\r\n      if (duration == 0) {\r\n        //enable start survey buton\r\n        this.surveyState = 3;\r\n        this.msg = \"Please start today's survey!\";\r\n      }\r\n      // *********** If time diff is >0. Timer will be run till next survey time *******************\r\n      else if (duration > 0) {\r\n        this.surveyState = 4;\r\n        this.showCounter(this.surveyDetails['startDate']);\r\n      }\r\n    },\r\n      error => {\r\n        this.fetchSurveyAmountDetails();\r\n        if (error.error.responseException.exceptionMessage.substring(0, 15) == \"AlreadyAnswered\") {\r\n          this.surveyState = 5; //When ssid is null\r\n          this.msg = \"Survey already answered.\";\r\n          this.isAllSurveysAnswered = true;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        } else if (error.error.responseException.exceptionMessage.includes('ReachedMaxParticipants')) {\r\n          this.surveyState = 6;\r\n          this.msg = \"Survey reached maximum no. of participants.\";\r\n          this.isAllSurveysAnswered = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        } else {\r\n          this.surveyState = 5; //When sid is null\r\n          this.msg = \"Survey not found. Please scan the QR code again.\";\r\n          this.isAllSurveysAnswered = false;\r\n          this.isSidSsidValid = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        }\r\n      });\r\n  }\r\n  // ******** To fetch the Survey Details if SID is already answered *****************\r\n  fetchSurveyAmountDetails() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getSurveyDetailsResponseForAnsweredQRCode(localStorage.getItem('sid')).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.surveyDetails = res['result'];\r\n      }\r\n    });\r\n  }\r\n  // ********** Method to fetch the Survey Info based on SSID  ************************\r\n  fetchSurveySetSSIDDetails() {\r\n    this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      this.surveyDetails = res['result'];\r\n      let message = {\r\n        claimMessage: this.surveyDetails['claimMessage'],\r\n        paymentMessage: this.surveyDetails['paymentMessage'],\r\n        qualificationMessage: this.surveyDetails['qualificationMessage'],\r\n        surveyVerificationMessage: this.surveyDetails['surveyVerificationMessage'],\r\n      };\r\n      localStorage.setItem('surveySetId', this.surveyDetails['id']);\r\n      localStorage.setItem('surveyMessages', JSON.stringify(message));\r\n\r\n      if (this.surveyDetails == null || this.surveyDetails['surveyGroupItems'].length <= 0) {\r\n        this.surveyState = 1;\r\n        this.msg = \"Surveys are not available\";\r\n        return;\r\n      }\r\n      // ************** Check all surveys is answered or not ***************\r\n      let count = 0;\r\n      this.surveyDetails['surveyGroupItems'].forEach((item: any) => {\r\n        this.surveyDetails['currency'] = item['currency'];\r\n        this.surveyDetails['paymentOffered'] = item['paymentOffered'];\r\n        if (item['isAnswered']) {\r\n          count++;\r\n        }\r\n      });\r\n      if (count == this.surveyDetails['surveyGroupItems'].length && count != 0) {\r\n        this.isAllSurveysAnswered = true;\r\n        return;\r\n      } else {\r\n        this.isAllSurveysAnswered = false;\r\n      }\r\n      let now: any = new Date(); // todays date\r\n      now.setHours(0, 0, 0, 0);\r\n      let pend: any = new Date(this.surveyDetails['endDate']);\r\n\r\n      pend = new Date(pend.getTime() + pend.getTimezoneOffset() * 60000);\r\n\r\n      let start: any = new Date(this.surveyDetails['startDate']);\r\n      start = new Date(start.getTime() + start.getTimezoneOffset() * 60000);\r\n\r\n      // ******* Check if Start Date > Current Date (Future Day Survey) Show Timer ******************\r\n      if ((start - now) > 0 && this.surveyDetails['type'] != 'Hourly') {\r\n        this.isFutureDaySurvey = true;\r\n        this.surveyState = 4;\r\n        this.showHourlySurveyCounter(start);\r\n        return;\r\n      }\r\n\r\n      let pduration = pend - now;\r\n      console.log(pduration);\r\n\r\n      if (pduration < 0) {\r\n        this.surveyState = 2;\r\n        this.msg = \"Survey program ended. We will notify when next program available.\";\r\n        this.sharedService.successErrorMsg['message'] = \"Thanks for completing the survey set.\"\r\n        return;\r\n      }\r\n      if (pduration == 0) {\r\n        let length: number = this.surveyDetails['surveyGroupItems'].length;\r\n        if (this.surveyDetails['surveyGroupItems'][length - 1]['isAnswered'] == true) {\r\n          this.surveyState = 2;\r\n          this.msg = \"Survey program ended. We will notify when next program available.\";\r\n          return;\r\n        }\r\n      }\r\n      this.sortSuveys();\r\n\r\n      // ********** Store 1st, next, last Survey Details ***************\r\n      let len: number = this.surveyDetails['surveyGroupItems'].length;\r\n      if (len > 0) {\r\n        this.lastSurveyId = this.surveyDetails['surveyGroupItems'][len - 1]['surveyId'];\r\n      }\r\n      this.firstSurveyId = this.surveyDetails['surveyGroupItems'][0]['surveyId'];\r\n      // ********* Check for Hourly or Daily Survey *********************\r\n      if (this.surveyDetails['type'] != 'Hourly') {\r\n        this.dailySurveySSIDDetails(now);\r\n      } else {\r\n        let today: any = new Date();\r\n        today = new Date(today.getTime() + today.getTimezoneOffset() * 60000);\r\n\r\n        let start: any = new Date(this.surveyDetails['startDate']);\r\n        start = new Date(start.getTime() + start.getTimezoneOffset() * 60000);\r\n\r\n        let end: any = new Date(this.surveyDetails['endDate']);\r\n        end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n\r\n        // let firstSurveyStartDate: any = new Date(this.surveyDetails['surveyGroupItems'][0]['startDate']);\r\n        // firstSurveyStartDate = new Date(firstSurveyStartDate.getTime() + firstSurveyStartDate.getTimezoneOffset() * 60000);\r\n        // firstSurveyStartDate.setHours(0, 0, 0, 0);\r\n\r\n        // if ((firstSurveyStartDate - now) > 0) {\r\n        if ((start - today) > 0) {\r\n          this.isFutureDaySurvey = true;\r\n        }\r\n        this.isFirstSurveyAnswerd = this.surveyDetails['surveyGroupItems'][0]['isAnswered'];\r\n        this.firstSurveyId = this.surveyDetails['surveyGroupItems'][0]['surveyId'];\r\n\r\n\r\n        this.isFirstSurveyAnswerd = this.surveyDetails['surveyGroupItems'][0]['isAnswered'];\r\n\r\n        for (let i = 0; i < this.surveyDetails['surveyGroupItems'].length; i++) {\r\n          let item: any = this.surveyDetails['surveyGroupItems'][i];\r\n          this.currentSurveyDay = i + 1;\r\n          if (!item['isAnswered']) {\r\n            this.nextSurveyDetails = item;\r\n            let duration = start - today;\r\n            this.surveyId = item['surveyId'];\r\n            if (duration == 0) {\r\n              //enable start survey buton\r\n              this.surveyState = 3;\r\n              // this.msg = \"Please start today's survey!\";\r\n              this.msg = this.currentSurveyDay == 1 ? \"Please start today's survey!\" :\r\n                `Don't wait - get paid after you complete 5 days of surveys`;\r\n              break;\r\n            } else {\r\n              let a = end - today;\r\n              if (a >= 0) {\r\n                let previousItem: any;\r\n                let prevTime: any;\r\n                let mins = this.surveyDetails['minutesDifference'];\r\n                let newTime: any;\r\n                previousItem = this.surveyDetails['surveyGroupItems'][i - 1];\r\n                /* ********** In Hourly Survey, if previos Survey is answered then calculate the time gap\r\n                 for next Survey based on previous Survey Answered Time ******************* */\r\n                if (previousItem && previousItem['answeredTime']) {\r\n                  prevTime = new Date(previousItem['answeredTime']);\r\n                  prevTime = new Date(prevTime.getTime() + prevTime.getTimezoneOffset() * 60000);\r\n                  newTime = new Date(prevTime.getTime() + (Number(mins) * 60 * 1000));\r\n                  let diff = newTime - today;\r\n                  if (diff <= 0) {\r\n                    this.surveyState = 3;\r\n                    // this.msg = \"Please start today's survey!\";\r\n                    this.msg = this.currentSurveyDay == 1 ? \"Please start today's survey!\" :\r\n                      `Don't wait - get paid after you complete 5 days of surveys`;\r\n                  } else if (diff > 0) {\r\n                    // ********** FOR SSID 2nd Survey No need waiting time **********************\r\n                    if (i == 1) {\r\n                      this.surveyState = 3;\r\n                      this.msg = \"Please start today's survey!\";\r\n                    } else {\r\n                      this.surveyState = 4;\r\n                      this.showHourlySurveyCounter(newTime);\r\n                    }\r\n                    break;\r\n                  }\r\n                } else {\r\n                  /* ********* If not Survey is answered and there is time available,\r\n                  First Survey will be enabled ******************* */\r\n                  let todayDate: any = new Date();\r\n                  todayDate = new Date(todayDate.getTime() + todayDate.getTimezoneOffset() * 60000);\r\n\r\n                  let startingDate: any = new Date(this.surveyDetails['startDate']);\r\n                  startingDate.setHours(0, 0, 0, 0);\r\n\r\n                  this.nextSurveyDetails = item;\r\n\r\n                  if ((startingDate - todayDate) <= 0) {\r\n                    this.surveyState = 3;\r\n                    this.msg = this.currentSurveyDay == 1 ? \"Please start today's survey!\" :\r\n                      `Don't wait - get paid after you complete 5 days of surveys`;\r\n                    break;\r\n                  } else {\r\n                    // ********** FOR SSID 2nd Survey No need waiting time **********************\r\n                    if (i == 1) {\r\n                      this.surveyState = 3;\r\n                      this.msg = \"Please start today's survey!\";\r\n                    } else {\r\n                      this.surveyState = 4;\r\n                      this.showHourlySurveyCounter(start);\r\n                    }\r\n                    break;\r\n                  }\r\n                }\r\n                break;\r\n              }\r\n            }\r\n            return;\r\n          } else {\r\n            this.nextSurveyDetails = this.surveyDetails['surveyGroupItems'][i];\r\n          }\r\n        }\r\n      }\r\n    },\r\n      error => {\r\n        if (error.error.responseException.exceptionMessage == \"Survey is not found for QR:null\") {\r\n          this.surveyState = 5; //When ssid is null\r\n          this.msg = \"Please scan the QR code again.\";\r\n          this.isSidSsidValid = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        } else {\r\n          this.surveyState = 5; //When ssid is null\r\n          this.msg = \"Survey not found. Please scan the QR code again.\";\r\n          this.isSidSsidValid = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        }\r\n      });\r\n  }\r\n\r\n  // ********** This Timer will be run for Hourly Survey **************\r\n  showHourlySurveyCounter(newTime: any) {\r\n    this.timerSubscription = interval(1000).subscribe(val => {\r\n      let now: any;\r\n      let days = 0, hours = 0, minutes = 0, seconds = 0;\r\n      now = new Date(); // todays date\r\n\r\n      let today: any = new Date();\r\n      today = new Date(today.getTime() + today.getTimezoneOffset() * 60000);\r\n\r\n      let duration = newTime - today;\r\n\r\n      if (duration <= 0) {\r\n        this.clearCounter();\r\n      }\r\n      days = Math.floor(duration / (1000 * 60 * 60 * 24));\r\n      // hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + (days * 24);\r\n      minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\r\n      seconds = Math.floor((duration % (1000 * 60)) / 1000);\r\n      this.timeCounter = hours + 'hrs ' + minutes +\r\n        'min ' + seconds + 'secs';\r\n      this.hours = `${hours} hrs`;\r\n      this.minutes = `${minutes} mins`;\r\n      this.seconds = `${seconds} secs`;\r\n      this.sharedService.remainingTimeForSurvey.next(this.timeCounter);\r\n    });\r\n  }\r\n  // ********** If Survey Type is Daily this method is triggered ****************\r\n  dailySurveySSIDDetails(now: any) {\r\n    if (this.surveyDetails['surveyGroupItems'].length > 0) {\r\n      this.isFirstSurveyAnswerd = this.surveyDetails['surveyGroupItems'][0]['isAnswered'];\r\n      this.firstSurveyId = this.surveyDetails['surveyGroupItems'][0]['surveyId'];\r\n    }\r\n    this.surveyDetails['surveyGroupItems'].forEach((item: any, index: number) => {\r\n      let today: any = new Date();\r\n\r\n      if (!item['isAnswered']) {\r\n        // ********* For Qualification Survey *******************\r\n        if (index == 0) {\r\n          let endTime: any;\r\n          if (item['endDate']) {\r\n            endTime = new Date(item['endDate']);\r\n            let x = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n            let y = new Date(endTime.getFullYear(), endTime.getMonth(), endTime.getDate());\r\n            // *******  Today Date is less than End Time You can answer the survey **********\r\n            if (x <= y) {\r\n              this.nextSurveyDetails = item;\r\n              this.surveyState = 3;\r\n              // this.msg = \"Please start today's survey!\";\r\n              this.msg = this.currentSurveyDay == 1 ? \"Please start today's survey!\" :\r\n                `Don't wait - get paid after you complete 5 days of surveys`;\r\n              this.isFirstSurveyNotAnsweredWithInTime = false;\r\n              return;\r\n            } else {\r\n              // ****** To know whetehr 1st survey is answered within Qualf Survey End Time *************\r\n              this.isFirstSurveyNotAnsweredWithInTime = true;\r\n            }\r\n          }\r\n          // *********** For 1st Survey Answer it if Qualification Survey is answered *****************\r\n        } else if (index == 1 && this.claimType != this.globalConstants.eachSurvey) {\r\n          this.surveyState = 3;\r\n          this.msg = \"Please start today's survey!\";\r\n          this.nextSurveyDetails = item;\r\n        } else {\r\n          // *********** Rest all Surveys Answer it, only if previous survey is answered previous day **************\r\n          let previousSurvey = this.surveyDetails['surveyGroupItems'][index - 1];\r\n          if (previousSurvey['isAnswered']) {\r\n            let answerTime: any = new Date(previousSurvey['answeredTime']);\r\n            let today: any = new Date();\r\n            // today.setDate(today.getDate() + 1);\r\n            let x = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n            let y = new Date(answerTime.getFullYear(), answerTime.getMonth(), answerTime.getDate());\r\n            // **** Check if Current day is > previous Survey Answered date *******************\r\n            // ******** Survey Will be available only if it is > ***********************\r\n            if (x > y) {\r\n              this.surveyState = 3;\r\n              // this.msg = \"Please start today's survey!\";\r\n              this.msg = this.currentSurveyDay == 1 ? \"Please start today's survey!\" :\r\n                `Don't wait - get paid after you complete 5 days of surveys`;\r\n              this.nextSurveyDetails = item;\r\n              return;\r\n            } else {\r\n              // ********* If  Survey is opened on te same day then Start the timer ***************\r\n              this.surveyState = 4;\r\n              this.showCounter(item['startDate']);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // *********** Fetch the total No of Users who responded to the Survey only for SSID **************\r\n  getTotalSurveyResponseCount() {\r\n    if (this.firstSurveyId) {\r\n      this.surveyService.getSurveyResponseCount(localStorage.getItem('ssid'), this.firstSurveyId).subscribe(data => {\r\n        if (!data['isError']) {\r\n          this.maxResponseCount = data.result;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // ********** Timer will be displayed for Daily Survey to show when next survey will be available ****************\r\n  showCounter(suveydate: any) {\r\n    this.timerSubscription = interval(1000).subscribe(val => {\r\n      let now: any;\r\n      let end: any;\r\n      let days = 0, hours = 0, minutes = 0, seconds = 0;\r\n      now = new Date(); // todays date\r\n      // *********** For SID consider Survey Date as end Date *************************\r\n      if (this.isSidOrSSId == 'sid') {\r\n        end = new Date(suveydate);\r\n      } else {\r\n        // ************ For SSID consider tomorrow date as end date *********************\r\n        end = new Date();\r\n        end.setDate(end.getDate() + 1);\r\n      }\r\n\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      let duration = end - now;\r\n      if (duration <= 0) {\r\n        this.clearCounter();\r\n      }\r\n      days = Math.floor(duration / (1000 * 60 * 60 * 24));\r\n      hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + (days * 24);\r\n      minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\r\n      seconds = Math.floor((duration % (1000 * 60)) / 1000);\r\n      this.timeCounter = hours + 'hrs ' + minutes +\r\n        'min ' + seconds + 'secs';\r\n      this.hours = `${hours} hrs`;\r\n      this.minutes = `${minutes} mins`;\r\n      this.seconds = `${seconds} secs`;\r\n      this.sharedService.remainingTimeForSurvey.next(this.timeCounter);\r\n    });\r\n  }\r\n  // *********** Method to clear the Timer **********************\r\n  clearCounter() {\r\n    if (this.timerSubscription) {\r\n      this.timerSubscription.unsubscribe();\r\n    }\r\n    this.surveyState = 3;\r\n    // this.msg = \"Please start today's survey!\";\r\n    this.msg = this.currentSurveyDay == 1 ? \"Please start today's survey!\" :\r\n      `Don't wait - get paid after you complete 5 days of surveys`;\r\n  }\r\n\r\n  sortSuveys() {\r\n    return this.surveyDetails['surveyGroupItems'].sort((a: any, b: any) => {\r\n      return <any>new Date(a['startDate']) - <any>new Date(b['startDate']);\r\n    });\r\n  }\r\n  // ************** Triggerrs when Start Survey Button is clicked *****************\r\n  onStartSurveyClick() {\r\n    console.log('in start survey click', this.surveyState);\r\n    // ******** Executes only if Survey State is 3 *********************\r\n    if (this.surveyState == 3) {\r\n      // *********** Open Survey if Latitude and Longitude is available ****************\r\n      if (this.latitude != 0 && this.longitude != 0) {\r\n        let qrCode = localStorage.getItem('sharedqrcode');\r\n        // ******** Check if SHared Code Survey is already answered or not. Answer it only if no one has answered ******************\r\n        if ((this.surveyType == ConfigConstants.shareQrCode && qrCode != '' && qrCode != null && this.isSidOrSSId == 'ssid') || (this.surveyType == ConfigConstants.shareQrCode && this.claimType == ConfigConstants.eachSurvey && qrCode != '' && qrCode != null && this.isSidOrSSId == 'ssid')) {\r\n          // ************** Get the QR Code data is valid or not only for the 1st Survey **********************************\r\n          if (!this.surveyDetails['surveyGroupItems'][0]['isAnswered']) {\r\n            this.checkQRCodeDetails();\r\n          } else {\r\n            this.checkFirstSurveyAnswered();\r\n          }\r\n        } else {\r\n          this.checkFirstSurveyAnswered();\r\n        }\r\n      } else {\r\n        // ******** No Need to open the location popup for claim survey. For rest we need to show the popup **********************\r\n        // if (this.surveyType == ConfigConstants.shareQrCode && this.claimType == ConfigConstants.eachSurvey) {\r\n        //   this.checkFirstSurveyAnswered();\r\n        // } else {\r\n        this.openClaimModal(this.locationPopup);\r\n        // }\r\n      }\r\n    }\r\n  }\r\n  /*************** Verify 1st Survey Is answered or not and navigate based on status ************ */\r\n  checkFirstSurveyAnswered() {\r\n    // ******** If 1st Survey is ANswered, check for BlueNo is Qualified or Not ************\r\n    if (this.isFirstSurveyAnswerd) {\r\n      // ***** Navigate to SurveyQuestions Page when SMS is false **********************\r\n      if (this.nextSurveyDetails['smsCode']) {\r\n        // ********** Check whether it is 2nd survey or Not *****************\r\n        if (this.surveyDetails['surveyGroupItems'].length >= 2 && this.nextSurveyDetails['surveyId'] == this.surveyDetails['surveyGroupItems'][1]['surveyId']) {\r\n          // ******** Navigate to Bank details page if currency is INR and Bank details are not saved ****************\r\n          // if (this.surveyDetails['currency'] == 'INR' && !this.surveyDetails['isUpiDetailsExist']) {\r\n          //   this.openClaimModal(this.bankPopup);\r\n          //   return;\r\n          // } else {\r\n          // ***************** Check if the Previous Survey is claimed or not for Eachway Survey *********************\r\n          if (this.claimType == ConfigConstants.eachSurvey && this.surveyType == ConfigConstants.shareQrCode) {\r\n            let survey = this.surveyDetails['surveyGroupItems'][0];\r\n            if (survey['isAnswered'] && !survey['claimEachSurvey']) {\r\n              localStorage.setItem('currentSurveyDay', (1).toString());\r\n              this.router.navigateByUrl('claims/list');\r\n              return;\r\n            }\r\n          }\r\n          let rid = this.surveyDetails['surveyGroupItems'][0]['dataRequestResponseId'];\r\n          let qid = localStorage.getItem('qid');\r\n          this.currentSurveyDetails = this.surveyDetails['surveyGroupItems'][1];\r\n          this.sharedService.startLoader();\r\n          //this.surveyService.checkSurveyIsValidOrNot(rid, qid, this.nextSurveyDetails['qrCode']).subscribe(res => {\r\n          this.surveyService.checkSurveyIsValidOrNot(rid, qid, localStorage.getItem('ssid')).subscribe(res => {\r\n            console.log(res);\r\n            this.sharedService.stopLoader();\r\n            if (res['success'] && res['qualification']) {\r\n              // ********** Store the 1st, last and Next Survey Details if it is qualified *************\r\n              this.currentSurveyDay = 2;\r\n              this.sharedService.successErrorMsg['firstSurveyId'] = this.firstSurveyId;\r\n              this.sharedService.successErrorMsg['nextSurveyId'] = this.nextSurveyDetails['surveyId'];\r\n              this.sharedService.successErrorMsg['lastSurveyId'] = this.lastSurveyId;\r\n              localStorage.setItem('currentSurveyDay', this.currentSurveyDay.toString());\r\n              /* ********** Based on response if survey is valid check for sms code if count = 0 navigate\r\n               to Survey Questions page ** else Dont go to Survey Page show validation msg *************/\r\n              // this.showOTPPopup(this.nextSurveyDetails);\r\n\r\n              /* ******* IN ODK OTP Verification is not required. So redirecting it directly once \r\n              check_qualification.php API is success. So commented above code **********    */\r\n\r\n              if (this.currentSurveyDetails['odkUrl']) {\r\n                this.router.navigateByUrl(`home/survey/odk/${this.nextSurveyDetails['surveyId']}`);\r\n              } else {\r\n                this.router.navigateByUrl(`home/survey/${this.nextSurveyDetails['surveyId']}`);\r\n              }\r\n              return;\r\n            } else {\r\n              this.sharedService.showToastMesaages('error', res['message']);\r\n            }\r\n          }, (error => {\r\n            this.sharedService.stopLoader();\r\n            this.sharedService.showToastMesaages('error', error?.error?.responseException?.exceptionMessage);\r\n          }));\r\n          // }\r\n        } else {\r\n          this.verifyBlueNoIsQualifiedOrNot();\r\n        }\r\n      } else {\r\n        this.navigateToSurveyPage();\r\n      }\r\n    } else {\r\n      // ******* if 1st Survey is not answered Answer Survey ***********\r\n      if (this.surveyDetails['type'] != 'Hourly' && this.isSidOrSSId == 'ssid') {\r\n        // ******** Show u r not elig msg if surv is not answered *************\r\n        if (this.isFirstSurveyNotAnsweredWithInTime) {\r\n          this.openClaimModal(this.qualifMsgPopup);\r\n          return;\r\n        } else {\r\n          this.navigateToSurveyPage();\r\n        }\r\n      } else {\r\n        this.navigateToSurveyPage();\r\n      }\r\n    }\r\n  }\r\n  /* ************** For Claim Survey Check previous Survey is Answered and Claimed or not.\r\n  If Not Claimed then naviate user to claimns Screen. Else navigate to Next Survey *******  */\r\n  checkEachSurveyAnswered(surveyIndex: number) {\r\n    let survey = this.surveyDetails['surveyGroupItems'][surveyIndex];\r\n    if (survey['isAnswered'] && !survey['claimEachSurvey']) {\r\n      localStorage.setItem('currentSurveyDay', (surveyIndex + 1).toString());\r\n      this.router.navigateByUrl('claims/list');\r\n    } else {\r\n      this.router.navigateByUrl(`home/survey/odk/${this.nextSurveyDetails['surveyId']}`);\r\n    }\r\n  }\r\n  // ************ Triggers on Location POpup is clsoed *******************\r\n  onLocationOkClick() {\r\n    this.checkFirstSurveyAnswered();\r\n    this.closePopup();\r\n  }\r\n  navigateToSurveyPage() {\r\n    // ******** Executes only if Survey State is 3 *********************\r\n    if (this.surveyState == 3) {\r\n      if (localStorage.getItem('sid') != '' && localStorage.getItem('sid') != null) {\r\n        // ******** ONLY for SID *******************\r\n        this.sharedService.startLoader();\r\n        this.surveyService.getDataRequesDetailsById(this.surveyId).subscribe(res => {\r\n          this.sharedService.stopLoader();\r\n          if (!res['isError']) {\r\n            this.currentSurveyDetails = res['result'];\r\n            localStorage.setItem('currentSurveyDay', this.currentSurveyDay.toString());\r\n            if (res['result']['odkUrl']) {\r\n              this.router.navigateByUrl(`home/survey/odk/${this.surveyId}`);\r\n            } else {\r\n              this.router.navigateByUrl(`home/survey/${this.surveyId}`);\r\n            }\r\n            return;\r\n          }\r\n        }, (error => {\r\n          console.log(error);\r\n          this.sharedService.showToastMesaages('error', error?.error?.responseException?.exceptionMessage);\r\n        }));\r\n      }\r\n      // ************* ONLY for DAILY Survey SET ******************\r\n      if (this.surveyDetails['type'] != 'Hourly') {\r\n        if (this.surveyDetails['surveyGroupItems'] && this.surveyDetails['surveyGroupItems'].length > 0) {\r\n          for (let i = 0; i < this.surveyDetails['surveyGroupItems'].length; i++) {\r\n            let item: any = this.surveyDetails['surveyGroupItems'][i];\r\n            let now: any = new Date();\r\n            now.setHours(0, 0, 0, 0);\r\n            if (localStorage.getItem('surveyType') == ConfigConstants.shareQrCode && localStorage.getItem('claim') == ConfigConstants.eachSurvey) {\r\n              if (item['isAnswered'] && !item['claimEachSurvey']) {\r\n                // ********** Passing Actual Index ****************\r\n                this.checkEachSurveyAnswered(i);\r\n                return;\r\n              }\r\n            }\r\n\r\n            if (item['isAnswered'] == false) {\r\n\r\n              let end: any = new Date(item['startDate']);\r\n              end.setHours(0, 0, 0, 0);\r\n              let duration = end - now;\r\n              // *** Start the survey if duration is <=0 and ignore the duration if survey index is 1 as timer is removed for the 2nd survey******\r\n              // if (duration <= 0 || i == 1) {\r\n              if (duration <= 0) {\r\n                // ******** Navigate to Bank details page if currency is INR and Bank details are not saved ****************\r\n                // if (this.surveyDetails['currency'] == 'INR' && !this.surveyDetails['isUpiDetailsExist'] && i == 1) {\r\n                //   this.openClaimModal(this.bankPopup);\r\n                //   return;\r\n                // } else {\r\n                // ***** If Currency is not INR or Bank details are there start the survey ***********\r\n                this.startDailySurvey(item, i);\r\n                return;\r\n                //}\r\n              } else {\r\n                this.surveyState = 4;\r\n                this.showCounter(item['startDate']);\r\n                return;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.startHourlySurvey();\r\n      }\r\n    }\r\n  }\r\n  // *********** Method to start the Daily Survey ********************\r\n  startDailySurvey(item: any, index: number) {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getDataRequesDetailsById(item['surveyId']).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.currentSurveyDetails = res['result'];\r\n        localStorage.setItem('currentSurveyDay', (index + 1).toString());\r\n        //          if (this.isFirstSurveyAnswerd == false) {\r\n        this.sharedService.successErrorMsg['firstSurveyId'] = this.firstSurveyId;\r\n        this.sharedService.successErrorMsg['nextSurveyId'] = this.nextSurveyDetails['surveyId'];\r\n        this.sharedService.successErrorMsg['lastSurveyId'] = this.lastSurveyId;\r\n\r\n        let count = 0;\r\n        // this.surveyDetails['surveyGroupItems'].forEach((survey: any) => {\r\n        if (item['surveyId'] == res?.result?.id) {\r\n          if (item['smsCode']) {\r\n            count++;\r\n          }\r\n        }\r\n        // });\r\n        if (this.currentSurveyDay >= 4) {\r\n          if (this.isFirstSurveyAnswerd) {\r\n            if (count == 0) {\r\n              if (item['odkUrl']) {\r\n                if (this.claimType == ConfigConstants.eachSurvey && this.surveyType == ConfigConstants.shareQrCode) {\r\n                  this.checkEachSurveyAnswered(index);\r\n                } else {\r\n                  this.router.navigateByUrl(`home/survey/odk/${item['surveyId']}`);\r\n                }\r\n              } else {\r\n                this.router.navigateByUrl(`home/survey/${item['surveyId']}`);\r\n              }\r\n            } else {\r\n              this.showOTPPopup(item);\r\n            }\r\n            return;\r\n          } else {\r\n            this.showNoPayMsg();\r\n            return;\r\n          }\r\n        } else {\r\n          console.log(\"max Participants: \", environment.maxSurveyParticipants);\r\n          if (this.maxResponseCount >= environment.maxSurveyParticipants) {\r\n            if (this.isFirstSurveyAnswerd) {\r\n              if (count == 0) {\r\n                if (item['odkUrl']) {\r\n                  if (this.claimType == ConfigConstants.eachSurvey && this.surveyType == ConfigConstants.shareQrCode) {\r\n                    this.checkEachSurveyAnswered(index);\r\n                  } else {\r\n                    this.router.navigateByUrl(`home/survey/odk/${item['surveyId']}`);\r\n                  }\r\n                } else {\r\n                  this.router.navigateByUrl(`home/survey/${item['surveyId']}`);\r\n                }\r\n              } else {\r\n                this.showOTPPopup(item);\r\n              }\r\n              return;\r\n            } else {\r\n              this.showNoPayMsg();\r\n              return;\r\n            }\r\n          } else if (!this.isFirstSurveyAnswerd) {\r\n            if (count == 0) {\r\n              if (item['odkUrl']) {\r\n                this.router.navigateByUrl(`home/survey/odk/${this.firstSurveyId}`);\r\n              } else {\r\n                this.router.navigateByUrl(`home/survey/${this.firstSurveyId}`);\r\n              }\r\n            } else {\r\n              this.showOTPPopup(item, this.firstSurveyId);\r\n            }\r\n            return;\r\n          } else {\r\n            if (count == 0) {\r\n              if (item['odkUrl']) {\r\n                if (this.claimType == ConfigConstants.eachSurvey && this.surveyType == ConfigConstants.shareQrCode) {\r\n                  this.checkEachSurveyAnswered(index);\r\n                } else {\r\n                  this.router.navigateByUrl(`home/survey/odk/${item['surveyId']}`);\r\n                }\r\n              } else {\r\n                this.router.navigateByUrl(`home/survey/${item['surveyId']}`);\r\n              }\r\n            } else {\r\n              this.showOTPPopup(item);\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }, (error => {\r\n      if (error.error.responseException.exceptionMessage.substring(0, 7) == \"Expired\") {\r\n        this.sharedService.successErrorMsg['message'] = \"The survey is already expired.\";\r\n        this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n        this.sharedService.successErrorMsg['showProceed'] = false;\r\n      } else {\r\n        this.router.navigateByUrl(`/home/info`);\r\n        this.surveyState = 6;\r\n        this.msg = \"Survey reached maximum no. of participants.\";\r\n        return;\r\n      }\r\n    }));\r\n  }\r\n\r\n  /* ************ If user is not available for Pay,ment due to not answering the Survey\r\n   in time for Daily survey below msg will be displayed *********************** */\r\n  showNoPayMsg() {\r\n    this.sharedService.successErrorMsg['firstSurveyId'] = this.firstSurveyId;\r\n    this.sharedService.successErrorMsg['message'] = 'You are not qualified for payment.';\r\n    this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n    this.sharedService.successErrorMsg['showProceed'] = true;\r\n    this.router.navigateByUrl(`home/messages`);\r\n  }\r\n  // *********** Storing 1st, next, last Surveys in Hourly Survey ********************\r\n  startHourlySurvey() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getDataRequesDetailsById(this.surveyId).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.currentSurveyDetails = res['result'];\r\n        let count = 0;\r\n        this.surveyDetails['surveyGroupItems'].forEach((item: any, index: number) => {\r\n          if (item['surveyId'] == res?.result?.id) {\r\n            if (item['smsCode']) {\r\n              count++;\r\n              this.showOTPPopup(item);\r\n              return;\r\n            } else {\r\n              this.goToSurveyPage(count);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }, (error => {\r\n      this.sharedService.showToastMesaages('error', error?.error?.responseException?.exceptionMessage);\r\n    }));\r\n  }\r\n  // ************* Navigate to Survey Page from Hourly Survey Logic **********\r\n  goToSurveyPage(count: number) {\r\n    if (count == 0) {\r\n      this.sharedService.successErrorMsg['firstSurveyId'] = this.firstSurveyId;\r\n      this.sharedService.successErrorMsg['nextSurveyId'] = this.nextSurveyDetails['surveyId'];\r\n      this.sharedService.successErrorMsg['lastSurveyId'] = this.lastSurveyId;\r\n      localStorage.setItem('currentSurveyDay', this.currentSurveyDay.toString());\r\n      if (this.currentSurveyDetails['odkUrl']) {\r\n        this.router.navigateByUrl(`home/survey/odk/${this.surveyId}`);\r\n      } else {\r\n        this.router.navigateByUrl(`home/survey/${this.surveyId}`);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n  // ********* Claims Page Navigation *******************\r\n  showClaimsPage() {\r\n    if (this.isAllSurveysAnswered) {\r\n      this.router.navigateByUrl('claims/list');\r\n    } else {\r\n      this.openClaimModal(this.content);\r\n    }\r\n  }\r\n  // ********* Profile Page Navigation *******************\r\n  goToProfilePage() {\r\n    this.router.navigateByUrl('home/profile');\r\n  }\r\n  // ********* MY Surveys Page Navigation available only for SSID *******************\r\n  onMySurveysClick() {\r\n    if (this.isSidOrSSId == 'ssid' && this.isSidSsidValid) {\r\n      // ******* Navigate to that page only if 1st survey is answered **************\r\n      // if (this.surveyDetails['surveyGroupItems'].length != 1 && this.surveyDetails['surveyGroupItems'][0]['isAnswered']) {\r\n      this.router.navigateByUrl('my-surveys/list');\r\n      // }\r\n    }\r\n  }\r\n  // ********* Help Page Navigation *******************\r\n  onHelpClick() {\r\n    this.router.navigateByUrl('help');\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.timerSubscription) {\r\n      this.timerSubscription.unsubscribe();\r\n    }\r\n  }\r\n  // ********* Fetch Profile Info *******************\r\n  fetchProfileDetails() {\r\n    let blueNumber = localStorage.getItem('personBluenumber');\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.getProfileDetails(blueNumber).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError'] && res['result']) {\r\n        this.loggedInUserDetails = res['result'];\r\n        localStorage.setItem('personMobileNumber', res['result']['contact']);\r\n        if (res['result']['completed']) {\r\n          localStorage.setItem('isProfileCompleted', res['result']['completed']);\r\n        } else {\r\n          localStorage.setItem('isProfileCompleted', \"false\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // ******** Popup close ***************************\r\n  closePopup() {\r\n    this.modalService.dismissAll();\r\n  }\r\n  openClaimModal(content: any) {\r\n    this.modalService.open(content, {\r\n      size: 'sm modal-dialog-centered',\r\n      windowClass: 'modal-dialog-border'\r\n    });\r\n  }\r\n  // ************ Navigate to Bank Details Screen ******************\r\n  onAddBankDetailsClick() {\r\n    this.router.navigateByUrl('home/bank-details');\r\n    this.closePopup();\r\n  }\r\n\r\n  // ************ Navigate to UPI Details Screen ******************\r\n  onAddUpiDetailsClick() {\r\n    this.router.navigateByUrl('home/upi-details');\r\n    this.closePopup();\r\n  }\r\n\r\n  getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position: any) => {\r\n        if (position) {\r\n          console.log(\"Latitude: \" + position.coords.latitude +\r\n            \"Longitude: \" + position.coords.longitude);\r\n          this.latitude = position.coords.latitude;\r\n          this.longitude = position.coords.longitude;\r\n        }\r\n      },\r\n        (error: any) => {\r\n          console.log(error)\r\n        });\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n  keyUpEvent(event: any, index: any) {\r\n    let pos = index;\r\n    if (event.keyCode === 8 && event.which === 8) {\r\n      pos = index - 1;\r\n    } else {\r\n      pos = index + 1;\r\n    }\r\n    if (this.numberPattern.test(event.target.value)) {\r\n      if (pos > -1 && pos < this.formInput.length) {\r\n        let docElePos: any = document.getElementById(pos);\r\n        docElePos.focus();\r\n      }\r\n    } else {\r\n      event.target.value = '';\r\n      this.otpForm.reset();\r\n    }\r\n  }\r\n\r\n  // *********** To check whether the User is qualified to Answer the Survey or not ***************\r\n  verifyBlueNoIsQualifiedOrNot() {\r\n    let params = {\r\n      ContextId: localStorage.getItem('ssid'),\r\n      blueNo: this.loggedInUserDetails?.blueNumber\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.isBlueNoQualified(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader()))\r\n      .subscribe((res: any) => {\r\n        if (!res['isError']) {\r\n          this.navigateToSurveyPage();\r\n        } else {\r\n          this.sharedService.showToastMesaages('error', res?.responseException?.exceptionMessage);\r\n        }\r\n      }, (error => {\r\n        console.log(error);\r\n        this.sharedService.showToastMesaages('error', error?.error?.responseException?.exceptionMessage);\r\n      }));\r\n  }\r\n\r\n  selectedSurveyId: any;\r\n  // ********** Method to Generate an OTP for User to Answer *******************\r\n  generateOTPToUser() {\r\n    let params = {\r\n      context: \"MMASmsCodeRequestCreation\",\r\n      contextId: localStorage.getItem('ssid'),\r\n      phonenumbersorBluenumbers: [\r\n        this.loggedInUserDetails?.blueNumber\r\n      ]\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.generateOTP(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      if (!res['isError']) {\r\n        this.sharedService.showToastMesaages('success', 'OTP sent successfully');\r\n      } else {\r\n        this.closeOTPPopup();\r\n        this.sharedService.showToastMesaages('error', res?.responseException?.exceptionMessage);\r\n      }\r\n    }, (error => {\r\n      console.log(error);\r\n      this.closeOTPPopup();\r\n      this.sharedService.showToastMesaages('error', error?.error?.responseException?.exceptionMessage);\r\n    }));\r\n  }\r\n  showOTPPopup(item: any, firstSurvey?: any) {\r\n    this.generateOTPToUser();\r\n    if (firstSurvey) {\r\n      this.selectedSurveyId = item;\r\n    } else {\r\n      this.selectedSurveyId = item['surveyId'];\r\n    }\r\n    this.openClaimModal(this.otpPopup);\r\n    return;\r\n  }\r\n  onOTPConfirmClick() {\r\n    this.otpForm.markAllAsTouched();\r\n    if (this.otpForm.valid) {\r\n      let otp = this.otpForm.value;\r\n      this.isOtpInValid = false;\r\n      this.confirmOTP();\r\n    } else {\r\n      this.isOtpInValid = true;\r\n    }\r\n  }\r\n  confirmOTP() {\r\n    // this.onStartSurveyClick();\r\n\r\n    let otp = this.otpForm.value;\r\n    let params = {\r\n      contextId: localStorage.getItem('ssid'),\r\n      otp: otp['input1'] + otp['input2'] + otp['input3'] + otp['input4'],\r\n      otpVerified: true,\r\n      bluenumber: this.loggedInUserDetails?.blueNumber\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.verifyOTP(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      if (!res['isError']) {\r\n        if (this.currentSurveyDetails['odkUrl']) {\r\n          this.router.navigateByUrl(`home/survey/odk/${this.selectedSurveyId}`);\r\n        } else {\r\n          this.router.navigateByUrl(`home/survey/${this.selectedSurveyId}`);\r\n        }\r\n        this.closeOTPPopup();\r\n      } else {\r\n        this.sharedService.showToastMesaages('error', 'Invalid OTP');\r\n      }\r\n    }, (error: any) => {\r\n      this.sharedService.showToastMesaages('error', error.error.responseException.exceptionMessage);\r\n    });\r\n  }\r\n  closeOTPPopup() {\r\n    this.modalService.dismissAll();\r\n    this.otpForm.reset();\r\n  }\r\n  openVideo() {\r\n    window.open(this.languageSelected, '_blank');\r\n  }\r\n  onShareQRClick() {\r\n    this.router.navigateByUrl('claims/qrinfo');\r\n  }\r\n  // ********** API to get the QRcode code survey is completed or not. **************\r\n  checkQRCodeDetails() {\r\n    let params = {\r\n      QrCode: localStorage.getItem('sharedqrcode'),\r\n    };\r\n    this.sharedService.startLoader();\r\n    this.claimsService.getSharedCodeDetails(params).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe((res: any) => {\r\n      console.log(res);\r\n      if (res['result']) {\r\n        if (res['result']['surveyCompletion']) {\r\n          // ******** If Survey Completion is true then User should not answer the survey ***************\r\n          this.sharedService.showToastMesaages('error', 'This share code has already been used by another user.');\r\n          return;\r\n        } else {\r\n          this.checkFirstSurveyAnswered();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getCurrencySymbol(countryCode: string) {\r\n    return this.sharedService.getCurrencySymbol(countryCode);\r\n  }\r\n\r\n}","<div class=\"pma\">\r\n  <div class=\"container\">\r\n    <div class=\"d-flex justify-content-between align-items-center pt-3\">\r\n      <div class=\"welcomet-text\">\r\n        <span class=\"head-txt\"> MillionMakers™</span> <span class=\"text-primary\"> by Bluenumber®</span>\r\n      </div>\r\n      <div class=\"pay-icon pt-3\"\r\n        *ngIf=\"surveyType != globalConstants.verify && surveyType != globalConstants.feedback && isSidOrSSId != 'ssid'\">\r\n        <div class=\"d-flex flex-column\" (click)=\"goToProfilePage()\">\r\n          <img src=\"../../../assets/media/profile-icon.svg\" alt=\"\" class=\"img-fluid ms-4\" width=\"35px\">\r\n          <span class=\"\">My Profile</span>\r\n        </div>\r\n      </div>\r\n      <!-- *************************** Renders for SSID *********************** -->\r\n      <div class=\"pay-icon pt-3\" *ngIf=\"isSidOrSSId == 'ssid'\">\r\n        <div class=\"d-flex flex-column\">\r\n          <img src=\"../../../../../assets/media/MMlogo-svg.svg\" alt=\"\" class=\"img-fluid \" width=\"52px\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- *************************** Renders for SSID *********************** -->\r\n    <!-- *********** Display Video only for 1st Survey and for SSID ********************** -->\r\n    <!-- <section class=\"p-3 iframe-content\"\r\n      *ngIf=\"isSidOrSSId == 'ssid' && currentSurveyDay == 1 && (surveyState == 3 || surveyState == 4)\">\r\n      <h1>Watch the demo</h1>\r\n      <div>SELECT Language for the demo video</div>\r\n      <div>\r\n        <select class=\"form-control location-bor\" [(ngModel)]=\"languageSelected\" [ngModelOptions]=\"{standalone: true}\">\r\n          <option *ngFor=\"let lang of languagesList\" [label]=\"lang.label\" [value]=\"lang.value\">\r\n            {{lang.label}}\r\n          </option>\r\n        </select>\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-mm-p btn-block w-100 mb-2 m-t-10\"\r\n          (click)=\"openVideo()\">\r\n          Okay\r\n        </button>\r\n      </div>\r\n      <iframe width=\"100%\" height=\"345\" src=\"https://youtube.com/embed/j2Kcpw3BcJQ\">\r\n      </iframe> \r\n    </section> -->\r\n\r\n\r\n    <section class=\"p-3 mb-2\" *ngIf=\"isSidOrSSId == 'ssid'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 text-center pma-buttons\">\r\n          <div class=\"d-grid justify-content-center align-items-center flex-column\" *ngIf=\"isSidOrSSId == 'ssid'\">\r\n            <div class=\"mouse-pointer ml-auto d-flex align-items-center text-center myr-icon-survey\"\r\n              *ngIf=\"!isAllSurveysAnswered\"\r\n              [ngClass]=\"surveyState === 3 && isSidOrSSId === 'ssid' ? 'myr-icon-green' : 'myr-icon mouse-notallowed'\"\r\n              style=\"margin-left: 0 !important;\" (click)=\"onStartSurveyClick()\">\r\n              <div class=\" text-wrap w-100 text-truncate\">\r\n                <h5 class=\"start-survey-fs\" *ngIf=\"surveyState === 3\"> Start Survey </h5>\r\n                <h5 class=\"start-survey-fs\" *ngIf=\"surveyState === 4\">\r\n                  {{ hours }} <br>\r\n                  {{ minutes }} <br>\r\n                  {{ seconds }}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"surveyType != globalConstants.verify && surveyType != globalConstants.feedback\">\r\n            <!-- When Survey is not completed -->\r\n            <!-- ********* Display Messages based on Survey completion Statuses ********** -->\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\"\r\n              *ngIf=\"(surveyState == 1 || surveyState == 2 || surveyState == 5 || surveyState == 6) && !isAllSurveysAnswered\">\r\n              {{msg}}\r\n            </h1>\r\n            <!-- Display this msg only for SSID and if survey > 1 -->\r\n            <!-- <h1 class=\"new-survey-msg\" *ngIf=\"surveyState === 3 && isSidOrSSId === 'ssid' && currentSurveyDay > 1\">\r\n              New survey available!\r\n            </h1> -->\r\n            <!-- <p class=\"text-gray-1 mb-2\" *ngIf=\"surveyState === 3 && isSidOrSSId === 'ssid'\">\r\n              {{msg}}\r\n            </p> -->\r\n            <!-- <h1 class=\"pma-heading text-gray-1 mb-2 mt-3\" *ngIf=\"surveyState == 4 && !isFutureDaySurvey\">\r\n              Next survey<br>\r\n              <span class=\"time-counter\">\r\n                {{timeCounter}}\r\n              </span>\r\n            </h1> -->\r\n            <!-- <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState == 4 && isFutureDaySurvey\">\r\n              Survey available in:<br>\r\n              <span class=\"time-counter\">\r\n                {{timeCounter}}\r\n              </span>\r\n            </h1> -->\r\n            <div *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim && surveyState == 5\">\r\n              <a class=\"btn btn-mm-p btn-block w-100  orange-but mouse-notallowed btn-mm-p-disabled\"\r\n                (click)=\"onStartSurveyClick()\">\r\n                Request Submitted!\r\n              </a>\r\n            </div>\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\"\r\n              *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim && surveyType != globalConstants.request && appId != 'mmind'\">\r\n              Thank you for <br>\r\n              completing all surveys.\r\n            </h1>\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"isAllSurveysAnswered && surveyDetails?.claim\">\r\n              You have claimed <br>\r\n              <span class=\"text-primary\">{{getCurrencySymbol(surveyDetails?.currency)}} {{surveyDetails?.paymentOffered}}</span>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- *************************** Renders if it is not SSID *********************** -->\r\n    <section class=\"p-3 mb-2\" *ngIf=\"isSidOrSSId != 'ssid'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 text-center pma-buttons\">\r\n          <img src=\"../../../../../assets/media/MMlogo-svg.svg\" alt=\"\" class=\"img-fluid \" width=\"140px\">\r\n          <div *ngIf=\"surveyType != globalConstants.verify && surveyType != globalConstants.feedback\">\r\n            <!-- When Survey is not completed -->\r\n            <!-- ********** Displays only when SurveyType is Request and has SID ********* -->\r\n            <div *ngIf=\"isSidOrSSId == 'sid' && appId != 'mmind'\">\r\n              <p *ngIf=\"surveyState != 5\" class=\"message-workcondition\">Do you want to take surveys about\r\n                your working conditions?</p>\r\n              <p *ngIf=\"surveyState != 5\" class=\"confir-des\">Please confirm by answering 5 questions about who you work\r\n                for</p>\r\n              <p *ngIf=\"surveyState == 5\" class=\"confir-des fs-5\" style=\"line-height: 25px\">\r\n                If you qualify you will receive an SMS to do the surveys\r\n              </p>\r\n            </div>\r\n\r\n            <!-- ********* Display Messages based on Survey completion Statuses ********** -->\r\n            <!-- <h1 class=\"pma-heading text-gray-1 mb-2\"\r\n            *ngIf=\"surveyState == 1 || surveyState == 2 || surveyState == 3 || surveyState == 5 || surveyState == 6\">\r\n            {{msg}}</h1> -->\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\"\r\n              *ngIf=\"(surveyState == 1 || surveyState == 2 || surveyState == 5 || surveyState == 6) && !isAllSurveysAnswered\">\r\n              {{msg}}\r\n            </h1>\r\n            <!-- Display this msg only for SSID and if survey > 1 -->\r\n            <h1 class=\"new-survey-msg\" *ngIf=\"surveyState === 3 && isSidOrSSId === 'ssid' && currentSurveyDay > 1\">\r\n              New survey available!\r\n            </h1>\r\n            <p class=\"text-gray-1 mb-2\" *ngIf=\"surveyState === 3 && isSidOrSSId === 'ssid'\">\r\n              {{msg}}\r\n            </p>\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState == 4 && !isFutureDaySurvey\">\r\n              Today's survey is done!<br>\r\n              Next survey available in:<br>\r\n              <span class=\"time-counter\">\r\n                {{timeCounter}}\r\n              </span>\r\n            </h1>\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState == 4 && isFutureDaySurvey\">\r\n              Survey available in:<br>\r\n              <span class=\"time-counter\">\r\n                {{timeCounter}}\r\n              </span>\r\n            </h1>\r\n            <div *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim && surveyState == 5\">\r\n              <a class=\"btn btn-mm-p btn-block w-100  orange-but mouse-notallowed btn-mm-p-disabled\"\r\n                (click)=\"onStartSurveyClick()\">\r\n                Request Submitted!\r\n              </a>\r\n            </div>\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\"\r\n              *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim && surveyType != globalConstants.request && appId != 'mmind' && isSidOrSSId != 'sid'\">\r\n              Thank you for <br>\r\n              completing all surveys.\r\n            </h1>\r\n            <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"isAllSurveysAnswered && surveyDetails?.claim\">\r\n              You have claimed <br>\r\n              <span class=\"text-primary\">{{getCurrencySymbol(surveyDetails?.currency)}} {{surveyDetails?.paymentOffered}}</span>\r\n            </h1>\r\n            <a class=\"btn btn-mm-p btn-block w-100\" *ngIf=\"!isAllSurveysAnswered && appId != 'mmind'\"\r\n              [ngClass]=\"surveyState == 3 ? 'mouse-pointer' : 'mouse-notallowed btn-mm-p-disabled'\"\r\n              (click)=\"onStartSurveyClick()\">\r\n              Start {{ (surveyType == globalConstants.request && isSidOrSSId == 'sid') ? 'Request' : 'Survey'}}\r\n            </a>\r\n            <!-- *************** Displayed only for Farmer ********************** -->\r\n            <a class=\"btn btn-mm-p btn-block w-100  orange-but\" *ngIf=\"!isAllSurveysAnswered && appId == 'mmind'\"\r\n              [ngClass]=\"surveyState == 3 ? 'mouse-pointer' : 'mouse-notallowed btn-mm-p-disabled'\"\r\n              (click)=\"onStartSurveyClick()\">\r\n              Start Registration\r\n            </a>\r\n          </div>\r\n          <!-- *************** Displayed only for WORKER and Type Verify ********************** -->\r\n          <div *ngIf=\"surveyType == globalConstants.verify && appId != 'mmind'\">\r\n            <h6 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState == 3\">\r\n              <p>Please enable <br> location and answer 1 question to <br> verify yourself!</p>\r\n            </h6>\r\n            <h6 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState != 3\">\r\n              {{msg}}\r\n            </h6>\r\n            <a class=\"btn btn-mm-p btn-block w-100\" (click)=\"onStartSurveyClick()\"\r\n              [ngClass]=\"surveyState == 3 ? 'mouse-pointer' : 'mouse-notallowed btn-mm-p-disabled'\">\r\n              Verify\r\n            </a>\r\n          </div>\r\n          <!-- *************** Displayed for Both WORKER & FARMER only IF Type Feedback ********************** -->\r\n          <div *ngIf=\"surveyType == globalConstants.feedback\">\r\n            <!-- If Farmer and SSID show this msg -->\r\n            <ng-container *ngIf=\"appId == 'mmind' && isSidOrSSId == 'ssid'\">\r\n              <h6 class=\"pconfir-des\">\r\n                Please scan the QR code again.\r\n              </h6>\r\n            </ng-container>\r\n            <!-- ***** If farmer and SID or worker show below content ************ -->\r\n            <ng-container *ngIf=\"((appId == 'mmind' && isSidOrSSId == 'sid') || appId != 'mmind')\">\r\n              <h6 class=\"pconfir-des\" *ngIf=\"surveyState == 3\">\r\n                <p>Please enable <br> location and answer some questions about\r\n                  <br> your experience with this program\r\n                </p>\r\n              </h6>\r\n              <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState == 4\">\r\n                Survey available in:<br>\r\n                <span class=\"time-counter\">\r\n                  {{timeCounter}}\r\n                </span>\r\n              </h1>\r\n              <h6 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState != 3 && !isAllSurveysAnswered\">\r\n                {{msg}}\r\n              </h6>\r\n              <h6 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\">\r\n                Thank you for completing <br> the survey!\r\n              </h6>\r\n              <h6 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"isAllSurveysAnswered && surveyDetails?.claim\">\r\n                You have claimed <br>\r\n                <span class=\"text-primary\">\r\n                  {{getCurrencySymbol(surveyDetails?.currency)}} {{surveyDetails?.paymentOffered}}\r\n                </span>\r\n              </h6>\r\n              <a class=\"btn btn-mm-p btn-block w-100 mb-2\" (click)=\"onStartSurveyClick()\"\r\n                *ngIf=\"!isAllSurveysAnswered && surveyState == 3\"\r\n                [ngClass]=\"surveyState == 3 ? 'mouse-pointer' : 'mouse-notallowed btn-mm-p-disabled'\">\r\n                Start Survey\r\n              </a>\r\n              <h6 class=\"confir-des\" *ngIf=\"surveyState == 3\">\r\n                <p>If you complete this survey you will be rewarded <br> with\r\n                  <span class=\"text-primary\">\r\n                    {{surveyDetails?.currency}} {{surveyDetails?.paymentOffered}}.\r\n                  </span>\r\n                </p>\r\n              </h6>\r\n            </ng-container>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section class=\"p-3  nav-cards pt-0\" *ngIf=\"surveyType != globalConstants.verify\">\r\n      <div class=\"row\">\r\n        <!-- *********** Enable only for SSID for rest it will be in Disable Mode *********** -->\r\n        <!--  ******* Enable only if 1st survey is answered ************** -->\r\n        <!-- [ngClass]=\"isSidOrSSId == 'ssid' && isSidSsidValid ? \r\n        (surveyDetails?.surveyGroupItems?.length == 1 ? 'btn-opacity' : \r\n        ((surveyDetails?.surveyGroupItems && !surveyDetails?.surveyGroupItems[0]['isAnswered']) ? 'btn-opacity' :\r\n        null!)) : 'btn-opacity'\" -->\r\n        <div class=\"col-6\" [ngClass]=\"isSidOrSSId == 'ssid' && isSidSsidValid ? null! : 'btn-opacity'\"\r\n          *ngIf=\"surveyType != globalConstants.feedback\">\r\n          <div class=\"mm-card\" (click)=\"onMySurveysClick()\">\r\n            <img src=\"../../../../../assets/media/flag-logo-icon.svg\" alt=\"\" class=\"img-fluid\">\r\n            <h4 class=\"\">My Surveys</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\" *ngIf=\"isSidOrSSId == 'ssid' && surveyType != globalConstants.feedback\">\r\n          <div class=\"mm-card\" (click)=\"onFAQClick()\">\r\n            <img src=\"../../../../../assets/media/faq-icon.svg\" alt=\"\" class=\"img-fluid\">\r\n            <h4>FAQ</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6  q-mt-20\" *ngIf=\"isSidOrSSId == 'ssid' && surveyType != globalConstants.feedback\">\r\n          <div class=\"mm-card q-bg-color\" (click)=\"goToProfilePage()\">\r\n            <img src=\"../../../assets/media/profile-img.svg\" alt=\"\" class=\"img-fluid\">\r\n            <h4>My Profile</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\" [ngClass]=\"isSidOrSSId == 'ssid' ? 'q-mt-20' : null!\"\r\n          *ngIf=\"surveyType != globalConstants.feedback\">\r\n          <div class=\"mm-card\" (click)=\"onHelpClick()\">\r\n            <img src=\"../../../../../assets/media/help-icon.svg\" alt=\"\" class=\"img-fluid\">\r\n            <h4>Help</h4>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- ********* Display This Btn only when Survey Type is shareqrcode and all surveys Answered and Claimed ************ -->\r\n        <div class=\"q-mt-20\"\r\n          *ngIf=\"(surveyType == globalConstants.shareQrCode && isAllSurveysAnswered && surveyDetails?.claim) || (surveyType == globalConstants.shareQrCode && claimType == globalConstants.eachSurvey && surveyDetails?.surveyGroupItems && surveyDetails?.surveyGroupItems[0] && surveyDetails?.surveyGroupItems[0]['claimEachSurvey'])\">\r\n          <a class=\"btn btn-mm-p btn-block w-100 mouse-pointer\" (click)=\"onShareQRClick()\">\r\n            Sharable QR Code\r\n          </a>\r\n        </div>\r\n        <!-- ********** Displays only when SurveyType is Request and has SID ********* -->\r\n        <div class=\"mt-4\" *ngIf=\"isSidOrSSId == 'sid' && appId != 'mmind'\">\r\n          <p class=\"myr-des\">If you qualify and you answer all the required surveys, you will be paid <span\r\n              class=\"text-primary\"> {{getCurrencySymbol(surveyDetails?.currency)}} {{surveyDetails?.paymentOffered}}.</span></p>\r\n          <p class=\"identif-des\">Your identity and responses will not be revealed to your employer</p>\r\n        </div>\r\n\r\n        <!-- ********** Claim Icon Display only for SSID and in Worker Mode ****************** -->\r\n        <div class=\"d-grid justify-content-center mt-3 flex-column\"\r\n          *ngIf=\"appId != 'mmind' && isSidOrSSId != 'sid' && isSidOrSSId != '' && isSidSsidValid\">\r\n          <div class=\"mouse-pointer ml-auto text-center\"\r\n            [ngClass]=\"isAllSurveysAnswered  && !surveyDetails?.claim ? 'myr-icon-green' : 'myr-icon'\"\r\n            style=\"margin-left: 0 !important;\" (click)=\"showClaimsPage()\">\r\n            <div class=\"text-wrap text-truncate d-flex justify-content-center align-items-center\">\r\n              <h5 class=\"mr-2\">{{getCurrencySymbol(surveyDetails?.currency)}}</h5>\r\n              <h1>{{surveyDetails?.paymentOffered}}</h1>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-center mt-3 \" *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\">\r\n            <p class=\"payment-des-icon  mouse-pointer\" (click)=\"showClaimsPage()\">Click now <br> to claim payment\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- ********** Claim Icon Display only for SID and in Farmerode ****************** -->\r\n        <div class=\"d-grid justify-content-center mt-3 flex-column\"\r\n          *ngIf=\"appId == 'mmind' && isSidOrSSId == 'sid' && isSidSsidValid\">\r\n          <!-- <div class=\"text-center\">\r\n            <img *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\" (click)=\"showClaimsPage()\"\r\n              src=\"../../../../../assets/media/pay-icon-pink.svg\" alt=\"\" class=\"img-fluid mouse-pointer\">\r\n            <img *ngIf=\"!isAllSurveysAnswered || surveyDetails?.claim\" (click)=\"showClaimsPage()\"\r\n              src=\"../../../../../assets/media/pay-logo.svg\" alt=\"\" class=\"img-fluid mouse-pointer\" />\r\n            <p *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\" class=\"below-icon-text\">Click $ to claim <br> your\r\n              payment</p>\r\n          </div> -->\r\n          <div class=\"mouse-pointer ml-auto text-center\"\r\n            [ngClass]=\"isAllSurveysAnswered  && !surveyDetails?.claim ? 'myr-icon-green' : 'myr-icon'\"\r\n            style=\"margin-left: 0 !important;\" (click)=\"showClaimsPage()\">\r\n            <div class=\"text-wrap text-truncate d-flex align-items-center justify-content-center\">\r\n              <h5 class=\"mr-2\">{{getCurrencySymbol(surveyDetails?.currency)}}</h5>\r\n              <h1>{{surveyDetails?.paymentOffered}}</h1>\r\n            </div>\r\n          </div>\r\n          <div class=\"text-center mt-3 \" *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\">\r\n            <p class=\"payment-des-icon  mouse-pointer\" (click)=\"showClaimsPage()\">Click now <br> to claim payment\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!--    <section class=\"text-center pma-buttons p-4\">-->\r\n    <!--      <div class=\"row\">-->\r\n    <!--        <div class=\"col-12\" >-->\r\n    <!--          <a style=\"background: #AD0C62; color: white\" class=\"btn btn-mm-p-blue  btn-lg btn-block\" (click)=\"openClaimModal(content)\">-->\r\n    <!--            test-->\r\n    <!--          </a>-->\r\n    <!--        </div>-->\r\n    <!--      </div>-->\r\n    <!--    </section>-->\r\n\r\n    <!--    <h1 class=\"pma-heading text-gray-1 mb-2\" >-->\r\n    <!--      Today's survey is done!<br>-->\r\n    <!--      Next Survey available in:<br>-->\r\n    <!--      <div style=\"color: #AD0C62; font-weight: bold\" >-->\r\n    <!--        00 hrs, 00 min, 00 secs-->\r\n    <!--      </div>-->\r\n    <!--    </h1>-->\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Popup -->\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n    <div aria-label=\"Close\" (click)=\"closePopup()\">\r\n      <button type=\"button\" class=\"btn-close shadow-none\" aria-label=\"Close\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <section class=\"pb-0 pr-4 pl-4 pt-0 \">\r\n      <div class=\"row mb-5\">\r\n        <div>\r\n          <div class=\"mb-3\">\r\n            <!-- *ngIf=\"appId != 'mmind' && isSidOrSSId != 'sid' && isSidOrSSId != '' && isSidSsidValid\"> -->\r\n            <div class=\"d-flex justify-content-center\" *ngIf=\"isSidOrSSId != '' && isSidSsidValid\">\r\n              <div class=\"mouse-pointer myr-icon-my\">\r\n                <div class=\"d-flex align-items-center justify-content-center\">\r\n                  <h5 class=\"mr-2\">{{getCurrencySymbol(surveyDetails?.currency)}}</h5>\r\n                  <h1>{{surveyDetails?.paymentOffered}}</h1>\r\n                </div>\r\n              </div>\r\n              <div class=\"text-center mt-3\" *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\">\r\n                <p class=\"payment-des-icon mouse-pointer\" (click)=\"showClaimsPage()\">Click now <br> to claim payment\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--          <div class=\"d-flex align-items-center mb-3\">-->\r\n          <!--            <img src=\"../../../assets/media/myr-80-disable.svg\" alt=\"\" class=\"img-fluid\" width=\"112\" height=\"112\">-->\r\n          <!--          </div>-->\r\n          <div class=\"d-flex justify-content-center align-items-center\">\r\n            <h5 class=\"text-center\">You can only claim <br><span style=\"color: #0A4797\">{{getCurrencySymbol(surveyDetails?.currency)}}\r\n                {{surveyDetails?.paymentOffered}}</span> after completing the<br>\r\n              survey.\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <div class=\"pma-buttons bottom-position text-center\">\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-lg btn-block\" (click)=\"closePopup()\">\r\n          Okay\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #locationPopup let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <section class=\"pb-0 pr-4 pl-4 pt-0\">\r\n      <div class=\"row mb-5 q-mx-5\">\r\n        To enable location : <br>\r\n        Go to settings > type location > tap the location icon > turn it on\r\n      </div>\r\n    </section>\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <div class=\"pma-buttons bottom-position text-center\">\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-lg btn-block\" (click)=\"onLocationOkClick()\">\r\n          Okay\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #otpPopup let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h5 class=\"modal-title\">&nbsp;</h5>\r\n    <div aria-label=\"Close\" (click)=\"closeOTPPopup()\">\r\n      <button type=\"button\" class=\"btn-close shadow-none\" aria-label=\"Close\"></button>\r\n    </div>\r\n    <!-- <button type=\"button\" class=\"close\" >\r\n      <span>&times;</span>\r\n    </button> -->\r\n  </div>\r\n  <div class=\"modal-body pt-0\">\r\n    <div class=\"msg-t mb-2\">\r\n      <h6>\r\n        {{surveyDetails?.surveyVerificationMessage}}\r\n      </h6>\r\n      <!-- <h6>Please enter the 4 digit code sent <br>\r\n        to your mobile number</h6> -->\r\n    </div>\r\n    <div class=\"msg-t mb-3\">\r\n      <form (ngSubmit)=\"onOTPConfirmClick()\" [formGroup]=\"otpForm\">\r\n        <!-- <h6 class=\"pb-3\">Enter your OTP </h6> -->\r\n        <div class=\"d-flex justify-content-center mb-3\">\r\n          <div class=\"form-group px-3 mb-0 pb-0\" *ngFor=\"let input of formInput;  index as i\">\r\n            <input #formRow [id]=\"i\" type=\"text\" formControlName=\"{{input}}\" class=\"form-control text-center\"\r\n              maxlength=\"1\" (keyup)=\"keyUpEvent($event, i)\">\r\n          </div>\r\n        </div>\r\n        <div class=\"pb-3 ps-2 error-text text-danger\" *ngIf=\"isOtpInValid\">Enter valid OTP</div>\r\n        <button type=\"submit\" class=\"btn btn-mm-p otp-btn mt-3 mx-0\">Continue</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #qualifMsgPopup let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <section class=\"pb-0 pr-4 pl-4 pt-0\">\r\n      <div class=\"row mb-5 q-mx-5\">\r\n        You are not eligible to answer the survey. <br>\r\n        As you are unable to answer the qualification survey within the time period, <br>\r\n        You cannot answer any surveys now.\r\n      </div>\r\n    </section>\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <div class=\"pma-buttons bottom-position text-center\">\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-lg btn-block\" (click)=\"closePopup()\">\r\n          Okay\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #bankPopup let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n    <div aria-label=\"Close\" (click)=\"closePopup()\">\r\n      <button type=\"button\" class=\"btn-close shadow-none\" aria-label=\"Close\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <section class=\"pb-0 pr-4 pl-4 pt-0\">\r\n      <div class=\"row mb-5 q-mx-5\">\r\n        <p class=\"popup-succes-req\">\r\n          We need your UPI details to\r\n          pay you after you complete\r\n          the survey.\r\n        </p>\r\n      </div>\r\n    </section>\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <div class=\"pma-buttons bottom-position text-center\">\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-sm okay-btn-succ\"\r\n          (click)=\"onAddUpiDetailsClick()\">\r\n          Add UPI details\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-layout',\r\n  templateUrl: './dashboard-layout.component.html',\r\n  styleUrls: ['./dashboard-layout.component.scss']\r\n})\r\nexport class DashboardLayoutComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    // ******* This is added because when user enters the ssid, qid in home/info screen these details are not storing ************\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if (params['params']['ssid']) {\r\n        localStorage.setItem('ssid', params['params']['ssid']);\r\n      }\r\n      if (params['params']['app']) {\r\n        localStorage.setItem('app', params['params']['app']);\r\n      }\r\n      if (params['params']['connid']) {\r\n        localStorage.setItem('connid', params['params']['connid']);\r\n      }\r\n      if (params['params']['sid']) {\r\n        localStorage.setItem('sid', params['params']['sid']);\r\n      }\r\n      if (params['params']['type']) {\r\n        localStorage.setItem('surveyType', params['params']['type']);\r\n      }\r\n      if (params['params']['qid']) {\r\n        localStorage.setItem('qid', params['params']['qid']);\r\n      }\r\n      if (params['params']['sharedqrcode']) {\r\n        localStorage.setItem('sharedqrcode', params['params']['sharedqrcode']);\r\n      }\r\n      if (params['params']['claim']) {\r\n        localStorage.setItem('claim', params['params']['claim']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AcceptanceScreenComponent } from './acceptance-screen/acceptance-screen.component';\r\nimport { DashboardLandingPageComponent } from './dashboard-landing-page/dashboard-landing-page.component';\r\nimport { DashboardLayoutComponent } from './dashboard-layout/dashboard-layout.component';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SurveyQuestionsComponent } from './survey-questions/survey-questions.component';\r\nimport { BankIfscComponent } from './bank-ifsc/bank-ifsc.component';\r\nimport { SurveyOdkQuestionsComponent } from './survey-odk-questions/survey-odk-questions.component';\r\nimport { UpiDetailsComponent } from './upi-details/upi-details.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'info',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'info',\r\n        component: DashboardLandingPageComponent\r\n      },\r\n      {\r\n        path: 'language',\r\n        component: LanguageComponent\r\n      },\r\n      {\r\n        path: 'accept/:orgName',\r\n        component: AcceptanceScreenComponent\r\n      },\r\n      {\r\n        path: 'survey/:id',\r\n        component: SurveyQuestionsComponent\r\n      },\r\n      {\r\n        path: 'survey/odk/:id',\r\n        component: SurveyOdkQuestionsComponent\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n      {\r\n        path: 'messages',\r\n        component: MessagesComponent\r\n      },\r\n      {\r\n        path: 'bank-details',\r\n        component: BankIfscComponent\r\n      },\r\n      {\r\n        path: 'upi-details',\r\n        component: UpiDetailsComponent,\r\n      },      \r\n      {\r\n        path: '**',\r\n        redirectTo: 'list',\r\n        pathMatch: 'full'\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardLayoutComponent } from './dashboard-layout/dashboard-layout.component';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { DashboardLandingPageComponent } from './dashboard-landing-page/dashboard-landing-page.component';\r\nimport { SurveyQuestionsComponent } from './survey-questions/survey-questions.component';\r\nimport { AcceptanceScreenComponent } from './acceptance-screen/acceptance-screen.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport { SurveyOdkQuestionsComponent } from './survey-odk-questions/survey-odk-questions.component';\r\nimport { BlueNoFormatPipe } from '../pipes/blue-no-format.pipe';\r\nimport { NumberFixedPipe } from '../pipes/number-fixed.pipe';\r\nimport { BankIfscComponent } from './bank-ifsc/bank-ifsc.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { UpiDetailsComponent } from './upi-details/upi-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardLayoutComponent,\r\n    LanguageComponent,\r\n    DashboardLandingPageComponent,\r\n    SurveyQuestionsComponent,\r\n    AcceptanceScreenComponent,\r\n    ProfileComponent,\r\n    MessagesComponent,\r\n    SurveyOdkQuestionsComponent,\r\n    BlueNoFormatPipe,\r\n    NumberFixedPipe,\r\n    BankIfscComponent,    \r\n    UpiDetailsComponent   \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule,\r\n    GooglePlaceModule,\r\n    MatProgressBarModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule, \r\n    MatAutocompleteModule,    \r\n  ]  \r\n})\r\nexport class DashboardModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ConfigConstants } from 'src/app/models/constants';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-language',\r\n  templateUrl: './language.component.html',\r\n  styleUrls: ['./language.component.scss']\r\n})\r\nexport class LanguageComponent implements OnInit {\r\n\r\n  languageName: string = '';\r\n  constructor(private router: Router, private sharedService: SharedService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // commented to show language page for all the surveys\r\n    // // ********** Language page should not be visisble if Survey is claime survey **************\r\n    // if (localStorage.getItem('surveyType') == ConfigConstants.shareQrCode && localStorage.getItem('claim') == ConfigConstants.eachSurvey) {\r\n    //   this.router.navigateByUrl('help/rules');\r\n    //   return;\r\n    // }\r\n    \r\n    const selectedLanguage = this.getDefaultSelectedLanguage();\r\n    const defaultLanguage = this.getLanguageName(selectedLanguage ? selectedLanguage : 'en');\r\n    this.checkForLanguageDisplay();\r\n    setTimeout(() => {\r\n      const select = document.querySelector('select.goog-te-combo');\r\n      const lang = document.getElementById('language-name');\r\n\r\n      if (lang)\r\n        lang.innerHTML = defaultLanguage;\r\n\r\n      if (select) {\r\n        select.addEventListener('change', (event) => {\r\n          const selectedLanguage = (event.target as HTMLSelectElement).value;\r\n          console.log('Language changed:', selectedLanguage);\r\n          if (lang)\r\n            lang.innerHTML = this.getLanguageName(selectedLanguage);\r\n        });\r\n      }\r\n    }, 3000);\r\n\r\n  }\r\n\r\n  onNextClick() {\r\n    this.sharedService.isLanguageChanged = true;\r\n    let appId = localStorage.getItem('app');\r\n    // mmind -> FARMER\r\n    // if (appId == 'mmind') {\r\n    //   this.router.navigateByUrl('help/agreement');\r\n    // } else {\r\n    this.router.navigateByUrl('help/rules');\r\n    // }\r\n  }\r\n  checkForLanguageDisplay() {\r\n    if (this.router.url.includes('language')) {\r\n      var test = document.getElementById(\"language-script\");\r\n      if (!test) {\r\n        this.loadExternalScript('https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit');\r\n      }\r\n    } else {\r\n      this.removeElement();\r\n    }\r\n  }\r\n  loadExternalScript(url: string) {\r\n    const body = <HTMLDivElement>document.body;\r\n    const script = document.createElement('script');\r\n    script.innerHTML = '';\r\n    script.id = 'language-script';\r\n    script.src = url;\r\n    script.async = true;\r\n    script.defer = true;\r\n    body.appendChild(script);\r\n  }\r\n  removeElement() {\r\n    var test = document.getElementById(\"language-script\");\r\n    if (test) {\r\n      test.remove();\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    this.removeElement();\r\n  }\r\n  // function to get default selected language\r\n  getDefaultSelectedLanguage() {\r\n    const cookie = document.cookie.split('; ').find(row => row.startsWith('googtrans'));\r\n    if (cookie) {\r\n      const parts = cookie.split('/');\r\n      const lang = parts[parts.length - 1];\r\n      //const [_, lang] = cookie.split('/');\r\n      return lang;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getLanguageName(langCode: string): string {\r\n    const languageNames: { [key: string]: string } = {\r\n      'af': 'Afrikaans',\r\n      'sq': 'Albanian',\r\n      'am': 'Amharic',\r\n      'ar': 'Arabic',\r\n      'hy': 'Armenian',\r\n      'az': 'Azerbaijani',\r\n      'eu': 'Basque',\r\n      'be': 'Belarusian',\r\n      'bn': 'Bengali',\r\n      'bs': 'Bosnian',\r\n      'bg': 'Bulgarian',\r\n      'ca': 'Catalan',\r\n      'ceb': 'Cebuano',\r\n      'ny': 'Chichewa',\r\n      'zh-CN': 'Chinese (Simplified)',\r\n      'zh-TW': 'Chinese (Traditional)',\r\n      'co': 'Corsican',\r\n      'hr': 'Croatian',\r\n      'cs': 'Czech',\r\n      'da': 'Danish',\r\n      'nl': 'Dutch',\r\n      'en': 'English',\r\n      'eo': 'Esperanto',\r\n      'et': 'Estonian',\r\n      'tl': 'Filipino',\r\n      'fi': 'Finnish',\r\n      'fr': 'French',\r\n      'fy': 'Frisian',\r\n      'gl': 'Galician',\r\n      'ka': 'Georgian',\r\n      'de': 'German',\r\n      'el': 'Greek',\r\n      'gu': 'Gujarati',\r\n      'ht': 'Haitian Creole',\r\n      'ha': 'Hausa',\r\n      'haw': 'Hawaiian',\r\n      'iw': 'Hebrew',\r\n      'hi': 'Hindi',\r\n      'hmn': 'Hmong',\r\n      'hu': 'Hungarian',\r\n      'is': 'Icelandic',\r\n      'ig': 'Igbo',\r\n      'id': 'Indonesian',\r\n      'ga': 'Irish',\r\n      'it': 'Italian',\r\n      'ja': 'Japanese',\r\n      'jw': 'Javanese',\r\n      'kn': 'Kannada',\r\n      'kk': 'Kazakh',\r\n      'km': 'Khmer',\r\n      'rw': 'Kinyarwanda',\r\n      'ko': 'Korean',\r\n      'ku': 'Kurdish (Kurmanji)',\r\n      'ky': 'Kyrgyz',\r\n      'lo': 'Lao',\r\n      'la': 'Latin',\r\n      'lv': 'Latvian',\r\n      'lt': 'Lithuanian',\r\n      'lb': 'Luxembourgish',\r\n      'mk': 'Macedonian',\r\n      'mg': 'Malagasy',\r\n      'ms': 'Malay',\r\n      'ml': 'Malayalam',\r\n      'mt': 'Maltese',\r\n      'mi': 'Maori',\r\n      'mr': 'Marathi',\r\n      'mn': 'Mongolian',\r\n      'my': 'Myanmar (Burmese)',\r\n      'ne': 'Nepali',\r\n      'no': 'Norwegian',\r\n      'or': 'Odia (Oriya)',\r\n      'ps': 'Pashto',\r\n      'fa': 'Persian',\r\n      'pl': 'Polish',\r\n      'pt': 'Portuguese',\r\n      'pa': 'Punjabi',\r\n      'ro': 'Romanian',\r\n      'ru': 'Russian',\r\n      'sm': 'Samoan',\r\n      'gd': 'Scots Gaelic',\r\n      'sr': 'Serbian',\r\n      'st': 'Sesotho',\r\n      'sn': 'Shona',\r\n      'sd': 'Sindhi',\r\n      'si': 'Sinhala',\r\n      'sk': 'Slovak',\r\n      'sl': 'Slovenian',\r\n      'so': 'Somali',\r\n      'es': 'Spanish',\r\n      'su': 'Sundanese',\r\n      'sw': 'Swahili',\r\n      'sv': 'Swedish',\r\n      'tg': 'Tajik',\r\n      'ta': 'Tamil',\r\n      'te': 'Telugu',\r\n      'th': 'Thai',\r\n      'tr': 'Turkish',\r\n      'uk': 'Ukrainian',\r\n      'ur': 'Urdu',\r\n      'ug': 'Uyghur',\r\n      'uz': 'Uzbek',\r\n      'vi': 'Vietnamese',\r\n      'cy': 'Welsh',\r\n      'xh': 'Xhosa',\r\n      'yi': 'Yiddish',\r\n      'yo': 'Yoruba',\r\n      'zu': 'Zulu'\r\n    };\r\n    return languageNames[langCode] || 'Unknown';\r\n  }\r\n}\r\n\r\n","<div class=\"pdv-manager lang-enable\">\r\n  <div class=\"container language \">\r\n    <div class=\"row pb-0 px-4\">\r\n      <div class=\"col-md-12\">\r\n        <h6 class=\"mb-3\">The language is now:</h6>\r\n        <h1 class=\"mb-3\"><span id=\"language-name\"></span></h1>\r\n        <p class=\"muted-text mb-4\">\r\n          To CHANGE language <br>\r\n          please select another (below) <br> \r\n        </p>\r\n      </div>\r\n      <div id=\"google_translate_element\"></div>\r\n      <!-- <div class=\"col-md-12 text-center mt-5\">\r\n        <img src=\"../../../assets/media/GoogleTranslateLogo.svg\" alt=\"\" class=\"img-fluid\">\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container bottom-fixed\">\r\n    <!-- <div class=\"row px-4\">\r\n      <div class=\"col-12\">\r\n        <p class=\"f-16 text-muted\">\r\n          Default language is <strong>English</strong>\r\n        </p>\r\n      </div>\r\n    </div> -->\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div>\r\n          <div class=\"row px-4 \">\r\n            <div class=\"col-12 pma-buttons\">\r\n              <button class=\"btn btn-mm-p-lan btn-block\" (click)=\"onNextClick()\">Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { OAuthService } from 'angular-oauth2-oidc';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { interval, Subscription } from \"rxjs\";\r\nimport { SurveyService } from \"../survey.service\";\r\nimport { NgbModal, NgbModalConfig } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Auth } from 'aws-amplify';\r\nimport { ConfigConstants } from 'src/app/models/constants';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss']\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('content', { static: false }) content!: ElementRef;\r\n\r\n  messageObj: any;\r\n  msg: any;\r\n  isAnswerNextSurvey: boolean = false;\r\n  surveyMsgType: string = '';\r\n  nextSurveyTimeLeft: string = '';\r\n\r\n  // msg: any;\r\n  isFirstSurveyAnswerd: boolean = false;\r\n  surveyState: any;\r\n  isSidSsidValid: boolean = true;\r\n  surveyDetails: any = {};\r\n  nextSurveyDetails: any = {}\r\n  surveyId: any = '';\r\n  timerSubscription: any;\r\n  timeCounter: any;\r\n  isAllSurveysAnswered: boolean = false;\r\n  lastSurveyId: any = '';\r\n  firstSurveyId: any = '';\r\n  currentSurveyDay: number = 1;\r\n  maxResponseCount: number = 0;\r\n  isFutureDaySurvey: boolean = false;\r\n  surveyType: any = '';\r\n  surveyMsgs: any;\r\n\r\n  claimType: any = '';\r\n\r\n  private subs: Subscription = new Subscription();\r\n\r\n  constructor(private sharedService: SharedService, private router: Router,\r\n    private dashboardService: DashboardService, private readonly surveyService: SurveyService,\r\n    private modalService: NgbModal, config: NgbModalConfig\r\n  ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n    // this.subs.add(this.sharedService\r\n    //   .remainingTimeForSurvey\r\n    //   .subscribe((time) => {\r\n    //     this.nextSurveyTimeLeft = time;\r\n    //   }))\r\n  }\r\n\r\n  ngOnInit() {\r\n    let bNumber = localStorage.getItem('personBluenumber');\r\n    this.surveyMsgs = JSON.parse(localStorage.getItem('surveyMessages')!);\r\n    let appId = localStorage.getItem('app');\r\n\r\n    this.surveyType = localStorage.getItem('surveyType');\r\n    this.claimType = localStorage.getItem('claim');\r\n\r\n    let sid = localStorage.getItem('sid');\r\n    let ssid = localStorage.getItem('ssid');\r\n    let isSidOrSSId = '';\r\n\r\n    if (sid != '' && sid != 'null' && sid != null) {\r\n      isSidOrSSId = 'sid';\r\n    }\r\n    if (ssid != '' && ssid != 'null' && ssid != null) {\r\n      isSidOrSSId = 'ssid';\r\n    }\r\n    console.log(this.sharedService.successErrorMsg);\r\n\r\n    this.messageObj = this.sharedService.successErrorMsg;\r\n    if (this.surveyType == ConfigConstants.feedback) {\r\n      if (this.sharedService.successErrorMsg['message'] != '') {\r\n        this.router.navigateByUrl('claims/list');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // ********* Redirect to claims screen, if it is a claim survey ************\r\n    // ************ Redirect to claims page if survey Type is empty also for now *****************\r\n    if ((this.surveyType == ConfigConstants.shareQrCode || this.surveyType == '') && this.claimType == ConfigConstants.eachSurvey) {\r\n      this.router.navigateByUrl('claims/list');\r\n      return;\r\n    }\r\n\r\n    if (appId == 'mmind') {\r\n      this.surveyMsgType = 'farmerRegistration';\r\n      this.router.navigateByUrl('claims/list');\r\n      return;\r\n    }\r\n\r\n    if (this.surveyType == 'request' && isSidOrSSId == 'sid') {\r\n      this.surveyMsgType = 'workerRequestSID';\r\n      this.messageObj['isSSID'] = isSidOrSSId;\r\n      return;\r\n    } else {\r\n      if (this.sharedService.successErrorMsg['isRequestSurvey']) {\r\n        this.surveyMsgType = 'workerRequestSID';\r\n        this.messageObj['message'] = this.surveyMsgs['qualificationMessage'];\r\n        this.messageObj['isSSID'] = isSidOrSSId;\r\n        return;\r\n      }\r\n      this.surveyMsgType = 'surveySSID';\r\n      if (this.sharedService.successErrorMsg['message'] == \"AlreadyAnswered\") {\r\n        this.messageObj['message'] = \"To answer this survey you must connect to Million Makers\" + bNumber;\r\n      } else if (this.sharedService.successErrorMsg['message'] == \"Expired\") {\r\n        this.messageObj['message'] = \"The survey you are going to answer is already expired\";\r\n      } else if (this.sharedService.successErrorMsg['message'] == \"ReachedMaxParticipants\") {\r\n        this.messageObj['message'] = \"Reached max number of participants.\";\r\n      } else if (this.sharedService.successErrorMsg['message'] == \"NotFound\") {\r\n        this.messageObj['message'] = \"Survey not found\";\r\n      } else if (this.sharedService.successErrorMsg['message'] == \"AnswerNextSurvey\") {\r\n        this.isAnswerNextSurvey = true;\r\n        this.messageObj['message'] = \"Thank you for Registration. Please continue...\";\r\n      } else {\r\n        this.messageObj['message'] = this.sharedService.successErrorMsg['message'];\r\n      }\r\n    }\r\n    if (this.messageObj['message'] == '') {\r\n      // this.router.navigateByUrl('/home');\r\n    }\r\n    if (this.sharedService.successErrorMsg['messageHeading'] == 'Survey Set Completed') {\r\n      this.router.navigateByUrl('claims/list');\r\n      return;\r\n    }\r\n    // if (this.surveyType != 'verify') {\r\n    //   this.fetchSurveyInfo();\r\n    // }\r\n\r\n\r\n\r\n    if (this.surveyMsgType == 'workerRequestSID') {\r\n      console.log('workerRequestSID');\r\n      this.messageObj['message'] = this.surveyMsgs['qualificationMessage'];\r\n      this.modalService.open(this.content, {\r\n        size: 'sm modal-dialog-centered',\r\n        windowClass: 'modal-dialog-border'\r\n      });\r\n    }\r\n  }\r\n\r\n  onOKay() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe()\r\n  }\r\n\r\n  fetchSurveyInfo() {\r\n    this.msg = \"\";\r\n    this.isFirstSurveyAnswerd = false;\r\n    this.sharedService.startLoader();\r\n    if (localStorage.getItem('sid') != '' && localStorage.getItem('sid') != null && localStorage.getItem('sid') != 'null') {\r\n      this.fetchSurveySIDDetails();\r\n    } else if (localStorage.getItem('ssid') == null || localStorage.getItem('ssid') == 'null') {\r\n      this.surveyState = 5; //When ssid is null\r\n      this.msg = \"Please scan the QR code again.\";\r\n      this.isSidSsidValid = false;\r\n      return;\r\n    } else {\r\n      this.fetchSurveySetSSIDDetails();\r\n    }\r\n  }\r\n\r\n  // ********** Method to fetch the Survey Info based on SID  ************************\r\n  fetchSurveySIDDetails() {\r\n    this.surveyService.getSurveyDetailsbyQRCode(localStorage.getItem('sid')).subscribe(result => {\r\n      this.surveyDetails = result['result'];\r\n      this.surveyId = result['result']['id'];\r\n      let now: any = new Date(); // todays date\r\n      now.setHours(0, 0, 0, 0);\r\n      let pend: any = new Date(this.surveyDetails['endDate']);\r\n      pend = new Date(pend.getTime() + pend.getTimezoneOffset() * 60000);\r\n      console.log(\"DATE: \", pend);\r\n\r\n      let pduration = pend - now;\r\n      // *********** If time diff is -ve. Survey Time is completed *******************\r\n      if (pduration < 0) {\r\n        this.surveyState = 2;\r\n        this.msg = \"Survey program ended. We will notify when next program available.\";\r\n        return;\r\n      }\r\n\r\n      let end: any = new Date(this.surveyDetails['endDate']);\r\n      // let end: any = new Date(this.surveyDetails['startDate']);\r\n\r\n      end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      let duration = end - now;\r\n      // *********** If time diff is 0. Survey is Available & it is current day survey *******************\r\n      if (duration == 0) {\r\n        //enable start survey buton\r\n        this.surveyState = 3;\r\n        this.msg = \"Please complete your survey for today\";\r\n      }\r\n      // *********** If time diff is >0. Timer will be run till next survey time *******************\r\n      else if (duration > 0) {\r\n        this.surveyState = 4;\r\n        this.showCounter(this.surveyDetails['startDate']);\r\n      }\r\n    },\r\n      error => {\r\n        this.fetchSurveyAmountDetails();\r\n        if (error.error.responseException.exceptionMessage.substring(0, 15) == \"AlreadyAnswered\") {\r\n          this.surveyState = 5; //When ssid is null\r\n          this.msg = \"Survey already answered.\";\r\n          this.isAllSurveysAnswered = true;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        } else if (error.error.responseException.exceptionMessage.includes('ReachedMaxParticipants')) {\r\n          this.surveyState = 6;\r\n          this.msg = \"Survey reached maximum no. of participants.\";\r\n          this.isAllSurveysAnswered = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        } else {\r\n          this.surveyState = 5; //When sid is null\r\n          this.msg = \"Survey not found. Please scan the QR code again.\";\r\n          this.isAllSurveysAnswered = false;\r\n          this.isSidSsidValid = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        }\r\n      });\r\n  }\r\n\r\n  // ******** To fetch the Survey Details if SID is already answered *****************\r\n  fetchSurveyAmountDetails() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getSurveyDetailsResponseForAnsweredQRCode(localStorage.getItem('sid')).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.surveyDetails = res['result'];\r\n      }\r\n    });\r\n  }\r\n\r\n  // ********** Timer will be displayed for Daily Survey to show when next survey will be available ****************\r\n  showCounter(suveydate: any) {\r\n    this.timerSubscription = interval(1000).subscribe(val => {\r\n      let now: any;\r\n      let end: any;\r\n      let days = 0, hours = 0, minutes = 0, seconds = 0;\r\n      now = new Date(); // todays date\r\n      end = new Date(suveydate);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      let duration = end - now;\r\n      if (duration <= 0) {\r\n        this.clearCounter();\r\n      }\r\n      days = Math.floor(duration / (1000 * 60 * 60 * 24));\r\n      hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + (days * 24);\r\n      minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\r\n      seconds = Math.floor((duration % (1000 * 60)) / 1000);\r\n      this.timeCounter = hours + 'hrs ' + minutes +\r\n        'min ' + seconds + 'secs';\r\n    });\r\n  }\r\n\r\n  // *********** Method to clear the Timer **********************\r\n  clearCounter() {\r\n    if (this.timerSubscription) {\r\n      this.timerSubscription.unsubscribe();\r\n    }\r\n    this.surveyState = 3;\r\n    this.msg = \"Please complete your survey for today\";\r\n  }\r\n\r\n  // ********** Method to fetch the Survey Info based on SSID  ************************\r\n  fetchSurveySetSSIDDetails() {\r\n    this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      this.surveyDetails = res['result'];\r\n      localStorage.setItem('surveySetId', this.surveyDetails['id']);\r\n\r\n      if (this.surveyDetails == null || this.surveyDetails['surveyGroupItems'].length <= 0) {\r\n        this.surveyState = 1;\r\n        this.msg = \"Surveys are not available\";\r\n        return;\r\n      }\r\n      // ************** Check all surveys is answered or not ***************\r\n      let count = 0;\r\n      this.surveyDetails['surveyGroupItems'].forEach((item: any) => {\r\n        this.surveyDetails['currency'] = item['currency'];\r\n        this.surveyDetails['paymentOffered'] = item['paymentOffered'];\r\n        if (item['isAnswered']) {\r\n          count++;\r\n        }\r\n      });\r\n      if (count == this.surveyDetails['surveyGroupItems'].length && count != 0) {\r\n        this.isAllSurveysAnswered = true;\r\n        return;\r\n      } else {\r\n        this.isAllSurveysAnswered = false;\r\n      }\r\n      let now: any = new Date(); // todays date\r\n      now.setHours(0, 0, 0, 0);\r\n      let pend: any = new Date(this.surveyDetails['endDate']);\r\n\r\n      pend = new Date(pend.getTime() + pend.getTimezoneOffset() * 60000);\r\n      console.log(\"DATE: \", pend);\r\n\r\n      let pduration = pend - now;\r\n      console.log(pduration);\r\n\r\n      if (pduration < 0) {\r\n        this.surveyState = 2;\r\n        this.msg = \"Survey program ended. We will notify when next program available.\";\r\n        this.sharedService.successErrorMsg['message'] = \"Thanks for completing the survey set.\"\r\n        return;\r\n      }\r\n      if (pduration == 0) {\r\n        let length: number = this.surveyDetails['surveyGroupItems'].length;\r\n        if (this.surveyDetails['surveyGroupItems'][length - 1]['isAnswered'] == true) {\r\n          this.surveyState = 2;\r\n          this.msg = \"Survey program ended. We will notify when next program available.\";\r\n          return;\r\n        }\r\n      }\r\n      this.sortSuveys();\r\n\r\n      // ********** Store 1st, next, last Survey Details ***************\r\n      let len: number = this.surveyDetails['surveyGroupItems'].length;\r\n      if (len > 0) {\r\n        this.lastSurveyId = this.surveyDetails['surveyGroupItems'][len - 1]['surveyId'];\r\n      }\r\n      this.firstSurveyId = this.surveyDetails['surveyGroupItems'][0]['surveyId'];\r\n      // ********* Check for Hourly or Daily Survey *********************\r\n      if (this.surveyDetails['type'] != 'Hourly') {\r\n        this.dailySurveySSIDDetails(now);\r\n      } else {\r\n        let today: any = new Date();\r\n        today = new Date(today.getTime() + today.getTimezoneOffset() * 60000);\r\n\r\n        let start: any = new Date(this.surveyDetails['startDate']);\r\n        start = new Date(start.getTime() + start.getTimezoneOffset() * 60000);\r\n\r\n        let end: any = new Date(this.surveyDetails['endDate']);\r\n        end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n\r\n        let firstSurveyStartDate: any = new Date(this.surveyDetails['surveyGroupItems'][0]['startDate']);\r\n        firstSurveyStartDate = new Date(firstSurveyStartDate.getTime() + firstSurveyStartDate.getTimezoneOffset() * 60000);\r\n        firstSurveyStartDate.setHours(0, 0, 0, 0);\r\n\r\n        if ((firstSurveyStartDate - now) > 0) {\r\n          this.isFutureDaySurvey = true;\r\n        }\r\n        this.isFirstSurveyAnswerd = this.surveyDetails['surveyGroupItems'][0]['isAnswered'];\r\n        this.firstSurveyId = this.surveyDetails['surveyGroupItems'][0]['surveyId'];\r\n\r\n\r\n        this.isFirstSurveyAnswerd = this.surveyDetails['surveyGroupItems'][0]['isAnswered'];\r\n\r\n        for (let i = 0; i < this.surveyDetails['surveyGroupItems'].length; i++) {\r\n          let item: any = this.surveyDetails['surveyGroupItems'][i];\r\n          this.currentSurveyDay = i + 1;\r\n          if (!item['isAnswered']) {\r\n            let duration = start - today;\r\n            this.surveyId = item['surveyId'];\r\n            if (duration == 0) {\r\n              //enable start survey buton\r\n              this.surveyState = 3;\r\n              this.msg = \"Please complete your survey for today\";\r\n              break;\r\n            } else {\r\n              let a = end - today;\r\n              if (a >= 0) {\r\n                let previousItem: any;\r\n                let prevTime: any;\r\n                let mins = this.surveyDetails['minutesDifference'];\r\n                let newTime: any;\r\n                previousItem = this.surveyDetails['surveyGroupItems'][i - 1];\r\n                /* ********** In Hourly Survey, if previos Survey is answered then calculate the time gap\r\n                 for next Survey based on previous Survey Answered Time ******************* */\r\n                if (previousItem && previousItem['answeredTime']) {\r\n                  prevTime = new Date(previousItem['answeredTime']);\r\n                  prevTime = new Date(prevTime.getTime() + prevTime.getTimezoneOffset() * 60000);\r\n                  newTime = new Date(prevTime.getTime() + (Number(mins) * 60 * 1000));\r\n                  let diff = newTime - today;\r\n                  if (diff <= 0) {\r\n                    this.surveyState = 3;\r\n                    this.msg = \"Please complete your survey for today\";\r\n                  } else if (diff > 0) {\r\n                    this.surveyState = 4;\r\n                    this.showHourlySurveyCounter(newTime);\r\n                    break;\r\n                  }\r\n                } else {\r\n                  /* ********* If nor Survey is answered and there is time available,\r\n                  First Survey will be enabled ******************* */\r\n                  this.surveyState = 3;\r\n                  this.msg = \"Please complete your survey for today\";\r\n                  this.nextSurveyDetails = item;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n            return;\r\n          } else {\r\n            this.nextSurveyDetails = this.surveyDetails['surveyGroupItems'][i + 1];\r\n          }\r\n        }\r\n      }\r\n    },\r\n      error => {\r\n        if (error.error.responseException.exceptionMessage == \"Survey is not found for QR:null\") {\r\n          this.surveyState = 5; //When ssid is null\r\n          this.msg = \"Please scan the QR code again.\";\r\n          this.isSidSsidValid = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        } else {\r\n          this.surveyState = 5; //When ssid is null\r\n          this.msg = \"Survey not found. Please scan the QR code again.\";\r\n          this.isSidSsidValid = false;\r\n          this.router.navigateByUrl(`/home`);\r\n          return;\r\n        }\r\n      });\r\n  }\r\n\r\n  sortSuveys() {\r\n    return this.surveyDetails['surveyGroupItems'].sort((a: any, b: any) => {\r\n      return <any>new Date(a['startDate']) - <any>new Date(b['startDate']);\r\n    });\r\n  }\r\n\r\n  // ********** If Survey Type is Daily this method is triggered ****************\r\n  dailySurveySSIDDetails(now: any) {\r\n    this.surveyDetails['surveyGroupItems'].forEach((item: any, index: number) => {\r\n      let today = new Date();\r\n      let surveyDate = new Date(item['startDate']);\r\n      surveyDate = new Date(surveyDate.getTime() + surveyDate.getTimezoneOffset() * 60000);\r\n      if (today.getDate() == surveyDate.getDate()) {\r\n        if (today.getMonth() == surveyDate.getMonth() && today.getFullYear() == surveyDate.getFullYear()) {\r\n          if (index <= 2) {\r\n            this.getTotalSurveyResponseCount();\r\n          }\r\n          this.currentSurveyDay = index + 1;\r\n          //  If 1st survey is answered next one will be considered *************\r\n          if (item['isAnswered']) {\r\n            if (this.surveyDetails['surveyGroupItems'][index + 1]) {\r\n              let surveyDate = new Date(this.surveyDetails['surveyGroupItems'][index + 1]['startDate']);\r\n              surveyDate = new Date(surveyDate.getTime() + surveyDate.getTimezoneOffset() * 60000);\r\n              if (today.getDate() < surveyDate.getDate() && !this.surveyDetails['surveyGroupItems'][index + 1]['isAnswered']) {\r\n                this.nextSurveyDetails = this.surveyDetails['surveyGroupItems'][index + 1];\r\n              }\r\n            }\r\n          } else {\r\n            this.nextSurveyDetails = item;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    let firstSurveyStartDate: any = new Date(this.surveyDetails['surveyGroupItems'][0]['startDate']);\r\n    firstSurveyStartDate = new Date(firstSurveyStartDate.getTime() + firstSurveyStartDate.getTimezoneOffset() * 60000);\r\n    firstSurveyStartDate.setHours(0, 0, 0, 0);\r\n\r\n    if ((firstSurveyStartDate - now) > 0) {\r\n      this.isFutureDaySurvey = true;\r\n    }\r\n    this.isFirstSurveyAnswerd = this.surveyDetails['surveyGroupItems'][0]['isAnswered'];\r\n    this.firstSurveyId = this.surveyDetails['surveyGroupItems'][0]['surveyId'];\r\n    for (let i = 0; i < this.surveyDetails['surveyGroupItems'].length; i++) {\r\n      let item: any = this.surveyDetails['surveyGroupItems'][i];\r\n      if (item['isAnswered'] == false) {\r\n        let end: any = new Date(item['startDate']);\r\n        end = new Date(end.getTime() + end.getTimezoneOffset() * 60000);\r\n        end.setHours(0, 0, 0, 0);\r\n        let duration = end - now;\r\n        if (duration == 0) {\r\n          //enable start survey buton\r\n          this.surveyState = 3;\r\n          this.msg = \"Please complete your survey for today\";\r\n          break;\r\n        }\r\n        else if (duration > 0) {\r\n          this.surveyState = 4;\r\n          this.showCounter(item['startDate']);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // *********** Fetch the total No of Users who responded to the Survey only for SSID **************\r\n  getTotalSurveyResponseCount() {\r\n    if (this.firstSurveyId) {\r\n      this.surveyService.getSurveyResponseCount(localStorage.getItem('ssid'), this.firstSurveyId).subscribe(data => {\r\n        console.log(data)\r\n        if (!data['isError']) {\r\n          this.maxResponseCount = data.result;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // ********** This Timer will be run for Hourly Survey **************\r\n  showHourlySurveyCounter(newTime: any) {\r\n    this.timerSubscription = interval(1000).subscribe(val => {\r\n      let now: any;\r\n      let days = 0, hours = 0, minutes = 0, seconds = 0;\r\n      now = new Date(); // todays date\r\n\r\n      let today: any = new Date();\r\n      today = new Date(today.getTime() + today.getTimezoneOffset() * 60000);\r\n\r\n      let duration = newTime - today;\r\n\r\n      if (duration <= 0) {\r\n        this.clearCounter();\r\n      }\r\n      days = Math.floor(duration / (1000 * 60 * 60 * 24));\r\n      // hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      hours = Math.floor((duration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + (days * 24);\r\n      minutes = Math.floor((duration % (1000 * 60 * 60)) / (1000 * 60));\r\n      seconds = Math.floor((duration % (1000 * 60)) / 1000);\r\n      this.timeCounter = hours + 'hrs ' + minutes +\r\n        'min ' + seconds + 'secs';\r\n      this.sharedService.remainingTimeForSurvey.next(this.timeCounter);\r\n    });\r\n  }\r\n\r\n  onBackClick() {\r\n    if (this.isAnswerNextSurvey) {\r\n      if (this.messageObj['nextSurveyId'] && this.messageObj['nextSurveyId'] != '') {\r\n        this.router.navigateByUrl(`/home/survey/${this.messageObj['nextSurveyId']}`);\r\n      } else {\r\n        this.router.navigateByUrl('/home/info');\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl('/home/info');\r\n    }\r\n  }\r\n  onDoneClick() {\r\n    if (this.messageObj['firstSurveyId'] != '') {\r\n      this.router.navigateByUrl(`/home/survey/${this.messageObj['firstSurveyId']}`);\r\n    } else if (this.messageObj['nextSurveyId'] != '') {\r\n      this.router.navigateByUrl(`/home/survey/${this.messageObj['nextSurveyId']}`);\r\n    } else {\r\n      this.router.navigateByUrl('/home/info');\r\n    }\r\n  }\r\n  onAcceptClick() {\r\n    let params = {\r\n      code: this.messageObj['connectionCode'],\r\n      bluenumber: localStorage.getItem('personBluenumber')\r\n    }\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.setConnectionRequestDetailsByCode(params).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      console.log(res.result);\r\n      if (!res.isError) {\r\n        this.router.navigateByUrl('/home/user-agreement')\r\n        // this.onBackClick()\r\n      }\r\n    })\r\n  }\r\n\r\n  onRejectClick() {\r\n    //localStorage.clear()\r\n    // localStorage.removeItem(environment.authTokenKey);\r\n    //this.oauthService.logOut();\r\n    Auth.signOut();\r\n  }\r\n  goToHomePage() {\r\n    this.router.navigateByUrl('home/info');\r\n  }\r\n}\r\n","<div class=\"pop-up-message\" *ngIf=\"surveyMsgType == 'surveySSID'\">\r\n  <form autocomplete=\"off\" class=\"pma-modal pma\">\r\n    <div class=\"modal-header header-custom border-bottom-0\">\r\n      <span class=\"modal-title-save pl-3 pl-md-2\">&nbsp;</span>\r\n    </div>\r\n    <div class=\"modal-body modal-body-space pb-0\">\r\n      <div class=\"form-group mb-0\">\r\n        <div class=\"col-12  pl-0 pr-0 text-center\">\r\n          <div class=\"row form-group  mt-5 d-flex justify-content-center\">\r\n            <div class=\"text-center cont-height\">\r\n              <div class=\"text-center\">\r\n                <div\r\n                  *ngIf=\"!messageObj?.showAcceptReject && !messageObj?.showProceed && !messageObj?.isMsgFromInterceptor\">\r\n                  <img src=\"../../../assets/media/success-logo.svg\" class=\"img-fluid p-success   \" alt=\"\">\r\n                  <h2 class=\"big-font pb-4\"> Success!</h2>\r\n                </div>\r\n                <div class=\"succes-mess  text-center px-5\" *ngIf=\"surveyState == 4 && isFutureDaySurvey\">\r\n                  <!-- <h5 class=\"f-20 pb-2\"> {{ messageObj?.messageHeading }} </h5> -->\r\n                  <h5 class=\"f-20\"> {{ messageObj?.message }}<br>\r\n                    Next survey available in:\r\n                  </h5><br>\r\n                  <span class=\"time-counter\"> {{timeCounter}}</span>\r\n                </div>\r\n                <!-- <h1 class=\"pma-heading text-gray-1 mb-2\" *ngIf=\"surveyState == 4 && isFutureDaySurvey\">\r\n                  Survey available in:<br>\r\n                  <span class=\"time-counter\">\r\n                    {{this.timeCounter}}\r\n                  </span>\r\n                </h1> -->\r\n                <h1 class=\"pma-heading text-gray-1 mb-2\"\r\n                  *ngIf=\"messageObj?.showProceed && !messageObj?.showAcceptReject\">\r\n                  {{ messageObj?.message }}\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer footer-custom pb-5 pt-0 border-top-0 justify-content-center\"\r\n      *ngIf=\"surveyType != 'verify'\">\r\n      <div class=\"pma-buttons\" *ngIf=\"messageObj?.showProceed\">\r\n        <button type=\"button\" class=\"btn btn-l btn-md mb-3 btn-block\" (click)=\"onBackClick()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-mm-p btn-md  btn-block\" (click)=\"onDoneClick()\">Proceed</button>\r\n      </div>\r\n      <div class=\"pma-buttons text-center\" *ngIf=\"messageObj?.showAcceptReject\">\r\n        <button type=\"button\" class=\"btn btn-p-agr btn-md btn-block\" (click)=\"onAcceptClick()\">Agree & Connect</button>\r\n        <button type=\"button\" class=\"btn btn-l-reje btn-md  btn-block\" (click)=\"onRejectClick()\">Reject</button>\r\n      </div>\r\n      <div class=\"pma-buttons bottom-position text-center\"\r\n        *ngIf=\"!messageObj?.showAcceptReject && !messageObj?.showProceed\">\r\n        <button class=\"btn btn-mm-p  btn-lg btn-block\" (click)=\"onBackClick()\">\r\n          Go to Home page\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n\r\n<div class=\"pma\" *ngIf=\"surveyMsgType == 'farmerRegistration'\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <p class=\"popup-succes-req\">You have completed <br> your Registration! </p>\r\n        <p class=\"sms-des\">You can claim your payment by clicking $ on the <br> home page.</p>\r\n        <button class=\"btn btn-sm okay-btn-succ mb-3\" (click)=\"goToHomePage()\">Okay</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- this is for after complete the start request  -->\r\n<div class=\"pma align-items-center d-flex align-self-center h-100vh mx-3\" *ngIf=\"surveyMsgType == 'workerRequestSID'\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center\">\r\n        <div class=\"card px-4 py-5 card-shadow\">\r\n          <p class=\"popup-succes-req\" *ngIf=\"messageObj?.isSSID == 'ssid'\">\r\n            {{messageObj?.message }}\r\n          </p>\r\n          <p class=\"popup-succes-req\" *ngIf=\"messageObj?.isSSID != 'ssid'\">You have requested to <br> participate in\r\n            anonymous paid <br> surveys about your\r\n            working <br> conditions.</p>\r\n          <p class=\"sms-des\" *ngIf=\"messageObj?.isSSID != 'ssid'\">If you qualify, once you click start <br> Survey on\r\n            the home page, you will receive <br>\r\n            a 4-digit code via SMS to <br>\r\n            access the Million Makers survey <br>\r\n          </p>\r\n          <button class=\"btn btn-sm okay-btn-succ mb-3\" (click)=\"goToHomePage()\">Go to Home page</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n    <!--    <div aria-label=\"Close\" (click)=\"closePopup()\">-->\r\n    <!--      <button type=\"button\" class=\"btn-close shadow-none\" aria-label=\"Close\"></button>-->\r\n    <!--    </div>-->\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <div class=\"pma align-items-center d-flex align-self-center h-100vh\" *ngIf=\"surveyMsgType == 'workerRequestSID'\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <p class=\"popup-succes-req\" *ngIf=\"messageObj?.isSSID == 'ssid'\">\r\n              {{messageObj?.message }}\r\n            </p>\r\n            <p class=\"popup-succes-req\" *ngIf=\"messageObj?.isSSID != 'ssid'\">You have requested to <br> participate in\r\n              anonymous paid <br> surveys about your\r\n              working <br> conditions.</p>\r\n            <p class=\"sms-des\" *ngIf=\"messageObj?.isSSID != 'ssid'\">If you qualify you will receive an <br> SMS within\r\n              72 hours. It will contain a link <br>\r\n              so you can start the surveys.</p>\r\n            <button class=\"btn btn-sm okay-btn-succ mb-3\" (click)=\"goToHomePage()\">Okay</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--    <section class=\"pb-0 pr-4 pl-4 pt-0 \">-->\r\n    <!--      <div class=\"row mb-5\">-->\r\n    <!--        <div>-->\r\n    <!--          <div class=\"mb-3\">-->\r\n    <!--            <div class=\"d-flex justify-content-center\"-->\r\n    <!--                 *ngIf=\"appId != 'mmind' && isSidOrSSId != 'sid' && isSidOrSSId != '' && isSidSsidValid\">-->\r\n    <!--              <div class=\"mouse-pointer myr-icon-my\">-->\r\n    <!--                <div class=\"mt-3\">-->\r\n    <!--                  <h5 class=\"\">{{surveyDetails?.currency}}</h5>-->\r\n    <!--                  <h1>{{surveyDetails?.paymentOffered}}</h1>-->\r\n    <!--                </div>-->\r\n    <!--              </div>-->\r\n    <!--              <div class=\"text-center mt-3 \" *ngIf=\"isAllSurveysAnswered && !surveyDetails?.claim\">-->\r\n    <!--                <p class=\"payment-des-icon  mouse-pointer\" (click)=\"showClaimsPage()\">Click now <br> to claim payment-->\r\n    <!--                </p>-->\r\n    <!--              </div>-->\r\n    <!--            </div>-->\r\n    <!--          </div>-->\r\n    <!--          &lt;!&ndash;          <div class=\"d-flex align-items-center mb-3\">&ndash;&gt;-->\r\n    <!--          &lt;!&ndash;            <img src=\"../../../assets/media/myr-80-disable.svg\" alt=\"\" class=\"img-fluid\" width=\"112\" height=\"112\">&ndash;&gt;-->\r\n    <!--          &lt;!&ndash;          </div>&ndash;&gt;-->\r\n    <!--          <div class=\"d-flex justify-content-center align-items-center\">-->\r\n    <!--            <h5 class=\"text-center\">You can only claim <br><span style=\"color: #0A4797\">{{surveyDetails?.currency}} {{surveyDetails?.paymentOffered}}</span> upon <br>-->\r\n    <!--              completion of the last survey!</h5>-->\r\n    <!--          </div>-->\r\n    <!--        </div>-->\r\n    <!--      </div>-->\r\n    <!--    </section>-->\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <div class=\"pma-buttons bottom-position text-center\">\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-lg btn-block\" (click)=\"onOKay()\">\r\n          Okay\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '../../shared/shared.service';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\n// import { OAuthService } from 'angular-oauth2-oidc';\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { Auth } from 'aws-amplify';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  blueNumber: string = '';\r\n  profileInfo: any;\r\n  isTruncated: boolean = true;\r\n  isSSIEnabled: boolean = false;\r\n\r\n\r\n  constructor(private dashboardService: DashboardService, private sharedService: SharedService,\r\n    private router: Router, private modalService: NgbModal, config: NgbModalConfig\r\n  ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.blueNumber = localStorage.getItem('personBluenumber')!;\r\n    this.sharedService.startLoader();\r\n    forkJoin([this.dashboardService.getProfileDetails(this.blueNumber), this.dashboardService.checkSSICredentials()])\r\n      .subscribe(([profileResponse, checkSSIResponse]) => {\r\n        this.sharedService.stopLoader();\r\n        if (!profileResponse['isError']) {\r\n          this.profileInfo = profileResponse.result;\r\n        }\r\n        this.isSSIEnabled = checkSSIResponse['result'];\r\n      });\r\n  }\r\n  onBackClick() {\r\n    this.router.navigateByUrl('home/info');\r\n  }\r\n\r\n  onLogoutClick(content: any) {\r\n    this.modalService.open(content, {\r\n      size: 'sm modal-dialog-centered',\r\n    });\r\n  }\r\n  onUserConfirm(type: string) {\r\n    if (type == 'yes') {\r\n      localStorage.clear();\r\n      //this.oauthService.logOut();\r\n      Auth.signOut();\r\n      this.router.navigateByUrl('auth/home')\r\n    }\r\n    this.modalService.dismissAll();\r\n  }\r\n  closePopup() {\r\n    this.modalService.dismissAll();\r\n  }\r\n}\r\n","<div class=\"pma\">\r\n  <div class=\"container\">\r\n    <section class=\" pt-2\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 \">\r\n          <h1 class=\"pma-heading text-gray-1 mb-1\">\r\n            <i class=\"fas fa-chevron-left mouse-pointer pe-3\" (click)=\"onBackClick()\"></i> Profile\r\n          </h1>\r\n          <div class=\"pt-4\">\r\n            <div class=\"b-pro-strip d-flex justify-content-between\">\r\n              <div class=\"strip-cont text-truncate\">\r\n                <h2 class=\"b# text-white\">{{profileInfo?.blueNumber | blueNoFormat}}</h2>\r\n                <h5 class=\"text-white\">{{profileInfo?.contact}}</h5>\r\n                <h5 class=\"text-white text-wrap text-truncate mb-0 pb-0\">\r\n                  {{ profileInfo?.latitude | numberFixed: 4 }}, {{ profileInfo?.longitude | numberFixed: 4 }}\r\n                </h5>\r\n              </div>\r\n              <div class=\"pdv-logo-icon\" *ngIf=\"isSSIEnabled\">\r\n                <img src=\"../../../../../assets/media/Logo-Blue-original.png\" alt=\"\" class=\"img-fluid\" width=\"20px\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n\r\n    <section class=\"pt-4 mt-0 p-title mb-5 pb-5\">\r\n      <table style=\"width: 100%;\">\r\n        <tr >\r\n          <td  id=\"left-table-content\">Gender / Identify As</td>\r\n          <td  id=\"table-center\">{{profileInfo?.gender}}</td>\r\n        </tr>\r\n        <tr >\r\n          <td  id=\"left-table-content\">Name (optional)</td>\r\n          <td  id=\"table-center\">{{profileInfo?.name}}</td>\r\n        </tr>\r\n        <tr >\r\n          <td id=\"left-table-content\">Wallet ID</td>\r\n          <td id=\"table-end\">{{(profileInfo?.walletId === \"\") ? \"N/A\" : profileInfo?.walletId}}</td>\r\n        </tr>\r\n        <tr >\r\n          <td  id=\"left-table-content\">Trinsic Version</td>\r\n          <td  id=\"table-end\">V1.11.0</td>\r\n        </tr>\r\n        <tr>\r\n          <td id=\"left-table-content\">App Version</td>\r\n          <td id=\"table-end\">Denim V1.1.3</td>\r\n        </tr>\r\n      </table>\r\n    </section>\r\n    <section class=\"text-center pma-buttons p-4\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <a class=\"btn btn-mm-p-blue  btn-lg btn-block\" (click)=\"onLogoutClick(content)\">\r\n            Logout\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<!-- Logout Popup -->\r\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n    <div aria-label=\"Close\" (click)=\"closePopup()\">\r\n      <button type=\"button\" class=\"btn-close shadow-none\" aria-label=\"Close\"></button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <section class=\"pb-0 pr-4 pl-4 pt-0\">\r\n      <div class=\"row mb-5\">\r\n        <div class=\"col-12\">\r\n          <h2 class=\"text-center\">Are you sure <br> you want to logout?</h2>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <button class=\"btn btn-l-sm btn-sm mx-3\" (click)=\"onUserConfirm('no')\">Cancel</button>\r\n      <button class=\"btn btn-sm-blu btn-sm\" (click)=\"onUserConfirm('yes')\">Logout</button>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { SurveyService } from '../survey.service';\r\nimport { finalize } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-survey-odk-questions',\r\n  templateUrl: './survey-odk-questions.component.html',\r\n  styleUrls: ['./survey-odk-questions.component.scss']\r\n})\r\nexport class SurveyOdkQuestionsComponent implements OnInit {\r\n\r\n  appId: any = '';\r\n  surveyQRCode: any = '';\r\n  qrCodeData: any = {};\r\n  odkURL: any = '';\r\n  isSurveyLoaded: boolean = false;\r\n  surveyType: any;\r\n  latitude: any = '';\r\n  longitude: any = '';\r\n  surveyDetails: any;\r\n\r\n  constructor(private router: Router, private sharedService: SharedService,\r\n    private dashboardService: DashboardService, public sanitizer: DomSanitizer,\r\n    private surveyService: SurveyService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.appId = localStorage.getItem('app');\r\n    let sid = localStorage.getItem('sid');\r\n    let ssid = localStorage.getItem('ssid');\r\n\r\n    if (sid != '' && sid != null && sid) {\r\n      this.surveyType = 'sid';\r\n    }\r\n    if (ssid != '' && ssid != null && ssid) {\r\n      this.surveyType = 'ssid';\r\n    }\r\n    this.fetchSurveyIdDetails();\r\n    this.getLocation();\r\n  }\r\n\r\n  fetchSurveyIdDetails() {\r\n    let currentRoute = this.router.url.split('/home/survey/odk/');\r\n    if (currentRoute?.[1]?.length > 0) {\r\n      this.surveyQRCode = currentRoute[1];\r\n      // *********** Fetch Survey Info ****************\r\n      this.getQRDetails();\r\n    }\r\n  }\r\n  getQRDetails() {\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.getDataRequesDetailsById(this.surveyQRCode).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.isSurveyLoaded = true;\r\n        this.qrCodeData = res['result'];\r\n        let url = this.qrCodeData['odkUrl'];\r\n        if (this.surveyType == 'ssid') {\r\n          url = url + `&qrcode=${localStorage.getItem('ssid')}&surveysetid=${localStorage.getItem('surveySetId')}`;\r\n        }\r\n        const jwtToken = localStorage.getItem('idToken');\r\n        url = url + `&surveyname=${this.qrCodeData['name']}&surveyid=${this.qrCodeData['id']}&latitude=${this.latitude}&longitude=${this.longitude}&idtoken=${jwtToken}`\r\n        console.log(\"iframe odk url\", url);\r\n        this.odkURL = this.sanitizer.bypassSecurityTrustResourceUrl(url+'&lang='+this.getLanguageSelection());\r\n        console.log(\"iframe odk url after sanitizer\", this.odkURL);\r\n      }\r\n    }, ((error: any) => {\r\n      this.isSurveyLoaded = false;\r\n      // this.sharedService.showToastMesaages('error', error.error.responseException.exceptionMessage);\r\n      this.router.navigateByUrl('home/info');\r\n    }));\r\n  }\r\n  getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position: any) => {\r\n        if (position) {\r\n          console.log(\"Latitude: \" + position.coords.latitude +\r\n            \"Longitude: \" + position.coords.longitude);\r\n          this.latitude = position.coords.latitude;\r\n          this.longitude = position.coords.longitude;\r\n          if (this.latitude == \"\" || this.longitude == \"\") {\r\n            this.fetchProfileDetails();\r\n          }\r\n        }\r\n      },\r\n        (error: any) => {\r\n          console.log(error);\r\n          this.fetchProfileDetails();\r\n        });\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n      if (this.latitude == \"\" || this.longitude == \"\") {\r\n        this.fetchProfileDetails();\r\n      }\r\n    }\r\n  }\r\n  fetchProfileDetails() {\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.getProfileDetails(localStorage.getItem('personBluenumber')).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError'] && res['result']) {\r\n        this.latitude = res.result['latitude'];\r\n        this.longitude = res.result['longitude'];\r\n      }\r\n    });\r\n  }\r\n\r\n  onODKSurveyClose() {\r\n    if (localStorage.getItem('sid') != '' && localStorage.getItem('sid') != null && localStorage.getItem('sid') != 'null') {\r\n      this.fetchSurveySIDDetails();\r\n    } else if (localStorage.getItem('ssid') != '' && localStorage.getItem('ssid') != null && localStorage.getItem('ssid') != 'null') {\r\n      this.fetchSurveySetSSIDDetails();\r\n    }\r\n  }\r\n  // ********** Method to fetch the Survey Info based on SID  ************************\r\n  fetchSurveySIDDetails() {\r\n    this.router.navigateByUrl('home/info');\r\n    // this.sharedService.startLoader();\r\n    // this.surveyService.getSurveyDetailsbyQRCode(localStorage.getItem('sid')).pipe(\r\n    //   finalize(() => this.sharedService.stopLoader())\r\n    // ).subscribe(result => {\r\n    //   this.surveyDetails = result['result'];\r\n    // });\r\n  }\r\n  // ********** Method to fetch the Survey Info based on SSID  ************************\r\n  fetchSurveySetSSIDDetails() {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).pipe(\r\n      finalize(() => this.sharedService.stopLoader())\r\n    ).subscribe(res => {\r\n      this.sharedService.stopLoader();\r\n      this.surveyDetails = res['result'];\r\n      let filteredData = this.surveyDetails['surveyGroupItems'].filter((item: any) => this.surveyQRCode == item['surveyId']);\r\n      if (filteredData && filteredData.length > 0) {\r\n        if (filteredData[0]['isAnswered']) {\r\n          this.navigateToMessagesScreen();\r\n        } else {\r\n          this.router.navigateByUrl('home/info');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // ******** Method to Navigate to Msg screen\r\n  navigateToMessagesScreen() {\r\n    if (localStorage.getItem('surveyType') == 'verify') {\r\n      this.sharedService.successErrorMsg['message'] = \"You have been verified!\";\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('/home/messages');\r\n      this.sharedService.stopLoader();\r\n      return;\r\n    }\r\n    if (localStorage.getItem('surveyType') == 'feedback') {\r\n      this.sharedService.successErrorMsg['message'] =\r\n        `${this.qrCodeData['currency']} ${this.qrCodeData['paymentOffered']}`;\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('/home/messages');\r\n      this.sharedService.stopLoader();\r\n      return;\r\n    }\r\n    if (this.sharedService.successErrorMsg['nextSurveyId'] != '') {\r\n      if (this.sharedService.successErrorMsg['nextSurveyId'] != this.surveyQRCode) {\r\n        if (this.sharedService.successErrorMsg['firstSurveyId'] == this.surveyQRCode) {\r\n          this.sharedService.successErrorMsg['firstSurveyId'] = '';\r\n          this.sharedService.successErrorMsg['isRequestSurvey'] = true;\r\n        }\r\n        this.sharedService.successErrorMsg['message'] = \"AnswerNextSurvey\";\r\n        this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n        this.sharedService.successErrorMsg['showProceed'] = false;\r\n        this.router.navigateByUrl('/home/messages');\r\n      } else {\r\n        if (this.sharedService.successErrorMsg['firstSurveyId'] == this.surveyQRCode) {\r\n          this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n          if (this.sharedService.successErrorMsg['firstSurveyId'] == this.sharedService.successErrorMsg['lastSurveyId']) {\r\n            this.sharedService.successErrorMsg['messageHeading'] = 'Survey Set Completed';\r\n          } else {\r\n            this.sharedService.successErrorMsg['isRequestSurvey'] = true;\r\n          }\r\n          this.sharedService.successErrorMsg['firstSurveyId'] = '';\r\n        } else {\r\n          if (this.sharedService.successErrorMsg['lastSurveyId'] == this.surveyQRCode) {\r\n            this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n            this.sharedService.successErrorMsg['messageHeading'] = 'Survey Set Completed';\r\n          } else {\r\n            this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n          }\r\n        }\r\n        this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n        this.sharedService.successErrorMsg['showProceed'] = false;\r\n        this.router.navigateByUrl('/home/messages');\r\n      }\r\n    } else {\r\n      if (this.sharedService.successErrorMsg['firstSurveyId'] == this.surveyQRCode) {\r\n        this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n        this.sharedService.successErrorMsg['firstSurveyId'] = '';\r\n        this.sharedService.successErrorMsg['isRequestSurvey'] = true;\r\n      } else {\r\n        if (this.sharedService.successErrorMsg['lastSurveyId'] == this.surveyQRCode) {\r\n          this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n          this.sharedService.successErrorMsg['messageHeading'] = 'Survey Set Completed';\r\n        } else {\r\n          this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n        }\r\n      }\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('/home/messages');\r\n    }\r\n    this.sharedService.stopLoader();\r\n  }\r\n\r\n  //function to get language selection from user\r\n  getLanguageSelection() {\r\n        const match = document.cookie.match(/(^|;\\s*)googtrans=([^;]+)/);\r\n        return match ? match[2].split('/')[2] : null;\r\n  }\r\n}\r\n","<div *ngIf=\"isSurveyLoaded\" class=\"screen-size\">\r\n    <div class=\"btn-x\">\r\n        <button (click)=\"onODKSurveyClose()\">X</button>\r\n    </div>\r\n    <iframe width=\"100%\" height=\"100%\" frameBorder=\"0\" allow=\"geolocation\" [src]=\"odkURL\"></iframe>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { environment } from '../../../environments/environment';\r\nimport { SharedService } from 'src/app/shared/shared.service';\r\nimport { DashboardService } from '../dashboard.service';\r\nimport { SurveyService } from '../survey.service';\r\n\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: 'app-survey-questions',\r\n  templateUrl: './survey-questions.component.html',\r\n  styleUrls: ['./survey-questions.component.scss']\r\n})\r\nexport class SurveyQuestionsComponent implements OnInit {\r\n\r\n  @ViewChild('content10', { static: false }) content!: ElementRef;\r\n  @ViewChild('content', { static: false }) msgContent!: ElementRef;\r\n  @ViewChild('noAddressPopup', { static: false }) noAddressPopup!: ElementRef;\r\n  @ViewChild('locationPopup', { static: false }) locationPopup!: ElementRef;\r\n\r\n  questionObject: any;\r\n  profileObject: any;\r\n  blueNumber: any;\r\n  questionsList: Array<any> = [];\r\n  totalQuestions: number = 0;\r\n  isFirstSurvey: boolean = true;\r\n  currentQuestion: number = 0;\r\n  location: any = '';\r\n  windowResizeFn: any;\r\n  latitude: any = '';\r\n  longitude: any = '';\r\n  questionObjectForMap: any = null;\r\n  isSurveyLoaded: boolean = false;\r\n  continueButtonText: any = \"Continue\";\r\n  responseCount: number = 0;\r\n\r\n  // qrId: string = \"SWG86I\"; // 2nd SurveyId is 'S15YLG'. Use this Id to get other Survey.\r\n  // qrId: string = \"STKS2T\"; // S4KF53 2nd SurveyId is 'SWG86I'. Use this Id to get other Survey.\r\n\r\n  lat: any = \"\";\r\n  lng: any = \"\";\r\n\r\n  qrId: string = 'SSU5YB';\r\n  // SI4SUF\r\n  // SSU5YB\r\n\r\n  surveyQRCode: any = '';\r\n\r\n  qrCodeData: any = {};\r\n  popupMsg: any = '';\r\n\r\n  intervalId: any = null;\r\n  googleGlobalInitialized: boolean = false;\r\n  // map: google.maps.Map<HTMLElement> = null;\r\n  map!: google.maps.Map<HTMLElement>;\r\n\r\n  /*nearbySearch google */\r\n  googlePlacesService!: google.maps.places.PlacesService;\r\n  userLocationMarker!: google.maps.Marker;\r\n  userCurrentMarkerPinImage: any = null;\r\n  addressSelected: any = '';\r\n  autoComplete = google.maps.places.Autocomplete;\r\n\r\n  showValidationMsg: any = { message: '', display: false };\r\n  profileLat: any;\r\n  profileLng: any;\r\n  appId: any;\r\n\r\n  constructor(private modalService: NgbModal, config: NgbModalConfig, private router: Router,\r\n    private sharedService: SharedService, private dashboardService: DashboardService, private fb: FormBuilder,\r\n    private cdr: ChangeDetectorRef, private surveyService: SurveyService) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.appId = localStorage.getItem('app');\r\n    let surveyType = localStorage.getItem('surveyType');\r\n    if (surveyType != 'verify') {\r\n      this.continueButtonText = this.appId == 'mmind' ? 'Continue' : 'Next';\r\n    } else {\r\n      this.continueButtonText = 'Submit';\r\n    }\r\n    this.fetchSurveyIdDetails();\r\n  }\r\n  // *********** To display the progress of questions in Progress BAr *****************8\r\n  progressValue() {\r\n    let value = Number(((this.currentQuestion / this.totalQuestions) * 100).toFixed(0));\r\n    return !Number.isNaN(value) ? value : 0;\r\n  }\r\n  fetchSurveyIdDetails() {\r\n    let currentRoute = this.router.url.split('/home/survey/');\r\n    if (currentRoute?.[1]?.length > 0) {\r\n      this.surveyQRCode = currentRoute[1];\r\n      // *********** Fetch Survey Info ****************\r\n      this.getQRDetails();\r\n    }\r\n    this.getLocation();\r\n  }\r\n  getDocumentObject() {\r\n    return document;\r\n  }\r\n\r\n  initMap(latNLng: { lat: number, lng: number } = { lat: this.lat, lng: this.lng }, zoom = 16) {\r\n    //zoom 18 can see area\r\n    /*styles generted from https://mapstyle.withgoogle.com/ */\r\n\r\n    this.map = new google.maps.Map(document.getElementById('map'), {\r\n      zoom: zoom,\r\n      center: new google.maps.LatLng(latNLng.lat, latNLng.lng),\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n      gestureHandling: 'greedy',\r\n      streetViewControl: false\r\n    });\r\n\r\n    if (this.questionObjectForMap && this.questionObjectForMap['answerValue']) {\r\n      let answer = this.questionObjectForMap['answerValue'].split(\" | \");\r\n      if (answer.length == 3) {\r\n        this.map.setCenter({ lat: parseFloat(answer[1]), lng: parseFloat(answer[2]) });\r\n        this.map.setZoom(18);\r\n      }\r\n      if (answer.length == 2) {\r\n        this.map.setCenter({ lat: parseFloat(answer[0]), lng: parseFloat(answer[1]) });\r\n        this.map.setZoom(18);\r\n      }\r\n    }\r\n\r\n    let self = this;\r\n\r\n    this.instantiateGooglePlacesService();\r\n    this.initAutocomplete();\r\n    this.map.addListener('click', this.mapCLickListenerForPlace.bind(this));\r\n\r\n    //google.maps.event.addDomListener(this.map,'click',this.mapCLickListenerForPlace.bind(this));\r\n\r\n    this.userCurrentMarkerPinImage = {\r\n      url: \"assets/media/briefcasePartialFill.png\", // url\r\n      scaledSize: new google.maps.Size(32, 32), // scaled size\r\n    };\r\n    this.userLocationMarker = new google.maps.Marker({\r\n      position: new google.maps.LatLng(latNLng.lat, latNLng.lng),\r\n      icon: this.userCurrentMarkerPinImage,\r\n      map: this.map,\r\n      title: \"Current User Location\"\r\n    });\r\n  }\r\n\r\n  setUserOfficeLocation(lat: any, long: any) {\r\n    if (this.userLocationMarker == null || this.userLocationMarker == undefined) {\r\n      this.userLocationMarker = new google.maps.Marker({\r\n        position: new google.maps.LatLng(lat, long),\r\n        icon: this.userCurrentMarkerPinImage,\r\n        map: this.map,\r\n        title: \"Current User Location\"\r\n      });\r\n    } else {\r\n      this.userLocationMarker.setMap(this.map);\r\n      this.userLocationMarker.setPosition({\r\n        lat: lat,\r\n        lng: long\r\n      })\r\n    }\r\n  }\r\n  mapCLickListenerForPlace(event: any) {\r\n    //check place is within users range in 1 km.\r\n    //get details of place and review\r\n    console.log('You clicked on: ' + event.latLng);\r\n\r\n    // If the event has a placeId, be it inside circle or outside it is not reviewed\r\n    if (event.placeId) {\r\n      console.log('You clicked on place:' + event.placeId);\r\n      // Calling e.stop() on the event prevents the default info window from\r\n      // showing.\r\n      // If you call stop here when there is no placeId you will prevent some\r\n      // other map click event handlers from receiving the event.\r\n      event.stop();\r\n\r\n      //if(this.haversineFormulaForDistanceBetweenTwoPoints(this.userGeoLocation,event.latLng.toJSON()) <=1000)\r\n      this.googlePlacesService.getDetails({ placeId: event.placeId }, (result: any, status: any) => {\r\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n          console.log(result);\r\n          //@ts-ignore\r\n          let initialValue: GeocoderAddressComponent = {\r\n            long_name: \"\",\r\n            short_name: \"\",\r\n            types: []\r\n          };\r\n          let addressComponentInsingleLine = initialValue;\r\n          if (result.address_components && result.address_components.length > 0) {\r\n            addressComponentInsingleLine = result.address_components.reduce((p: any, c: any, index: any) => {\r\n              /*console.log(\"previous\", p, \"current:\", c);*/\r\n\r\n              if (index == 0) {\r\n                p.long_name = c.long_name;\r\n              } else {\r\n                p.long_name = p.long_name + ';' + c.long_name;\r\n              }\r\n              return p;\r\n            }, initialValue);\r\n          }\r\n          this.questionObjectForMap['answerValue'] = result.name + ' | ' + addressComponentInsingleLine.long_name + ' | ' + result.geometry.location.lat() + ' | ' + result.geometry.location.lng();\r\n          this.profileLat = result.geometry.location.lat();\r\n          this.profileLng = result.geometry.location.lng();\r\n\r\n          this.addressSelected = this.questionObjectForMap['answerValue'];\r\n          if (result.geometry && result.geometry.location) {\r\n            this.setUserOfficeLocation(result.geometry.location.lat(), result.geometry.location.lng());\r\n          }\r\n          this.cdr.detectChanges();\r\n        }\r\n      });\r\n    } else {\r\n      let appId = localStorage.getItem('app');\r\n      if (appId == '') {\r\n        this.addressSelected = '';\r\n        this.questionObjectForMap['answerValue'] = '';\r\n        this.openPopup(this.noAddressPopup);\r\n      } else if (appId == 'mmind') {\r\n        this.getReverseGeocodingData(event.latLng.lat(), event.latLng.lng())\r\n      }\r\n    }\r\n  }\r\n  // ********** To fetch the Address based on Lat Lng points ******************\r\n  getReverseGeocodingData(lat: any, lng: any) {\r\n    var latlng = new google.maps.LatLng(lat, lng);\r\n    // This is making the Geocode request\r\n    var geocoder = new google.maps.Geocoder();\r\n    geocoder.geocode({ 'latLng': latlng }, (results: any, status: any) => {\r\n\r\n      if (status !== google.maps.GeocoderStatus.OK) {\r\n        alert(status);\r\n      }\r\n      // This is checking to see if the Geoeode Status is OK before proceeding\r\n      if (status == google.maps.GeocoderStatus.OK) {\r\n        var address = (results[0].formatted_address.replaceAll(',', ';'));\r\n        this.questionObjectForMap['answerValue'] = address + ' | ' + lat + ' | ' + lng;\r\n        this.profileLat = lat;\r\n        this.profileLng = lng;\r\n        this.addressSelected = this.questionObjectForMap['answerValue'];\r\n        this.setUserOfficeLocation(lat, lng);\r\n      }\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  initAutocomplete() {\r\n    this.autoComplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'),\r\n      {\r\n        fields: ['place_id', 'geometry', 'name']\r\n      })\r\n    this.autoComplete.addListener(\"place_changed\", (event: any) => {\r\n      if (this.autoComplete.getPlace().geometry && this.autoComplete?.getPlace()?.geometry?.location) {\r\n        //@ts-ignore\r\n        let initialValue: GeocoderAddressComponent = {\r\n          long_name: \"\",\r\n          short_name: \"\",\r\n          types: []\r\n        };\r\n        let addressComponentInsingleLine = initialValue;\r\n        if (this.autoComplete.getPlace().address_components && this.autoComplete.getPlace().address_components.length > 0) {\r\n          addressComponentInsingleLine = this.autoComplete.getPlace().address_components.reduce((p: any, c: any, index: any) => {\r\n            /*console.log(\"previous\", p, \"current:\", c);*/\r\n            if (index == 0) {\r\n              p.long_name = c.long_name;\r\n            } else {\r\n              p.long_name = p.long_name + ';' + c.long_name;\r\n            }\r\n            return p;\r\n          }, initialValue);\r\n        }\r\n        this.questionObjectForMap['answerValue'] = addressComponentInsingleLine.long_name + ' | ' + this.autoComplete.getPlace().geometry.location.lat() + ' | ' + this.autoComplete.getPlace().geometry.location.lng();\r\n        this.setUserOfficeLocation(this.autoComplete.getPlace().geometry.location.lat(), this.autoComplete.getPlace().geometry.location.lng());\r\n        this.map.setCenter(this.autoComplete.getPlace().geometry.location);\r\n      }\r\n    })\r\n  }\r\n\r\n  instantiateGooglePlacesService() {\r\n    this.googlePlacesService = new google.maps.places.PlacesService(this.map);\r\n  }\r\n\r\n  selectMapQuestion(question: any) {\r\n    if (this.questionObjectForMap == null || this.questionObjectForMap == undefined) {\r\n      this.questionObjectForMap = question;\r\n    } else {\r\n      if (this.questionObjectForMap['answerValue']) {\r\n        let answer = this.questionObjectForMap['answerValue'].split(\" | \");\r\n        if (answer.length == 3) {\r\n          this.setUserOfficeLocation(parseFloat(answer[1]), parseFloat(answer[2]));\r\n        }\r\n        if (answer.length == 2) {\r\n          this.setUserOfficeLocation(parseFloat(answer[0]), parseFloat(answer[1]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getQRDetails() {\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.getDataRequesDetailsById(this.surveyQRCode).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        this.qrCodeData = res['result'];\r\n        this.getSurveyRequestDetails(this.qrCodeData);\r\n      }\r\n    }, ((error: any) => {\r\n      this.isSurveyLoaded = true;\r\n      // this.sharedService.showToastMesaages('error', error.error.responseException.exceptionMessage);\r\n      this.router.navigateByUrl('home/info');\r\n    }));\r\n  }\r\n  getSurveyRequestDetails(qrCodeData: any) {\r\n    this.isSurveyLoaded = true;\r\n    if (qrCodeData) {\r\n      this.questionObject = qrCodeData;\r\n      this.blueNumber = localStorage.getItem('personBluenumber');\r\n      this.dashboardService.getProfileDetails(this.blueNumber).subscribe((res: any) => {\r\n        if (!res['isError']) {\r\n          this.profileObject = res.result;\r\n        }\r\n      });\r\n      if (qrCodeData.sections[0] && qrCodeData.sections[0].questions.length > 0) {\r\n        qrCodeData.sections[0].questions.map((question: any) => {\r\n          question['answerValue'] = '';\r\n        });\r\n        [qrCodeData.sections[0].questions[0]].map(question => {\r\n          if (question.type == \"Checkbox\") {\r\n            question.options.forEach((option: any) => {\r\n              option.isSelected = false;\r\n            });\r\n          }\r\n        })\r\n        this.questionsList = [qrCodeData.sections[0].questions[0]];\r\n        if (this.questionsList[0]['attributeName'] == 'location_map') {\r\n          let interval = setTimeout(() => {\r\n            this.selectMapQuestion(this.questionsList[0]);\r\n            this.initMap({ lat: this.lat, lng: this.lng });\r\n            clearInterval(interval);\r\n          }, 1000)\r\n        }\r\n        this.totalQuestions = qrCodeData.sections[0].questions.length;\r\n        this.currentQuestion = 1;\r\n      }\r\n    }\r\n    // }, (error => {\r\n    //   this.isSurveyLoaded = true;\r\n    // }));\r\n  }\r\n\r\n  onRegionEnter() {\r\n    this.longitude = '';\r\n    this.longitude = '';\r\n  }\r\n  handleAddressChange(address: any, questions: any) {\r\n    this.questionObjectForMap = questions;\r\n    this.latitude = address['geometry']['location'].lat();\r\n    this.longitude = address['geometry']['location'].lng();\r\n\r\n    this.profileLat = address['geometry']['location'].lat();\r\n    this.profileLng = address['geometry']['location'].lng();\r\n\r\n    if (address && address.address_components) {\r\n      address.address_components.forEach((item: any, index: any) => {\r\n        if (index == 0) {\r\n          this.questionObjectForMap['answerValue'] = item['long_name'] + ' '\r\n        } else {\r\n          this.questionObjectForMap['answerValue'] = this.questionObjectForMap['answerValue'] + ', ' + item['long_name'] + ' '\r\n        }\r\n      });\r\n      questions['answerValue'] = this.questionObjectForMap['answerValue'] + ' | ' + this.latitude + ' | ' + this.longitude;\r\n    }\r\n\r\n    this.initMap({ lat: this.latitude, lng: this.longitude });\r\n  }\r\n  onContinueClick() {\r\n    if (this.questionsList[0]['type'] == \"Checkbox\") {\r\n      let optionsSelected: any = [];\r\n      this.questionsList[0]['options'].forEach((option: any) => {\r\n        if (option.isSelected) {\r\n          optionsSelected.push(option.value);\r\n        }\r\n      });\r\n      this.questionsList[0]['answerValue'] = optionsSelected;\r\n      if (this.questionsList[0]['answerValue'].length > 0) {\r\n        this.showValidationMsg['display'] = false;\r\n        this.showNextQuestion();\r\n      } else {\r\n        this.showValidationMsg['display'] = true;\r\n        this.showValidationMsg['message'] = 'Answer is required';\r\n      }\r\n    } else if (this.questionsList[0]['attributeName'] == 'aadhar_number') {\r\n      // ********* Aadhar No Validation ***************************\r\n      let numberRegEx = /^(0|[1-9]\\d*)$/;\r\n      if (this.questionsList[0]['answerValue'] == '') {\r\n        this.showValidationMsg['display'] = true;\r\n        this.showValidationMsg['message'] = 'Answer is required';\r\n      } else if (numberRegEx.test(this.questionsList[0]['answerValue']) && this.questionsList[0]['answerValue'].length == 12) {\r\n        this.showValidationMsg['display'] = false;\r\n        this.showNextQuestion();\r\n      } else {\r\n        this.showValidationMsg['display'] = true;\r\n        this.showValidationMsg['message'] = 'Enter valid Aadhar card number';\r\n      }\r\n    } else {\r\n      if (this.questionsList[0]['answerValue'] != '') {\r\n        this.showValidationMsg['display'] = false;\r\n        this.showNextQuestion();\r\n      } else {\r\n        this.showValidationMsg['display'] = true;\r\n        this.showValidationMsg['message'] = 'Answer is required';\r\n        // this.sharedService.showToastMesaages('error', 'Answer is required');\r\n      }\r\n    }\r\n  }\r\n  showNextQuestion() {\r\n    this.showValidationMsg['display'] = false;\r\n    if (this.currentQuestion < this.totalQuestions) {\r\n      this.questionsList = [this.questionObject.sections[0].questions[this.currentQuestion]];\r\n      if (this.questionsList[0]['attributeName'] == 'location_map') {\r\n        let interval = setTimeout(() => {\r\n          this.selectMapQuestion(this.questionsList[0]);\r\n          this.initMap({ lat: this.lat, lng: this.lng });\r\n          clearInterval(interval);\r\n        }, 1000)\r\n      }\r\n      if (this.currentQuestion == (this.totalQuestions - 1)) {\r\n        this.continueButtonText = \"Submit\";\r\n      }\r\n      this.currentQuestion++;\r\n    } else if (this.currentQuestion == this.totalQuestions) {\r\n      if (this.lat != 0 && this.lng != 0) {\r\n        this.saveSurveyResponse();\r\n      } else {\r\n        this.openPopup(this.locationPopup);\r\n      }\r\n    }\r\n  }\r\n  saveSurveyResponse() {\r\n    let surveySetQR = localStorage.getItem('ssid');\r\n    let surveySetId = localStorage.getItem('surveySetId');\r\n\r\n    let params: any = {\r\n      dataRequestId: this.questionObject.id,\r\n      dataRequestName: this.questionObject.name,\r\n      dataSetId: surveySetId,\r\n      dataSetQR: surveySetQR,\r\n      bluenumberName: this.profileObject.name,\r\n      location: [this.lat, this.lng],\r\n      responses: []\r\n    };\r\n    this.questionObject.sections[0].questions.map((question: any) => {\r\n      params['responses'].push({\r\n        questionId: question.id,\r\n        attributeId: question.attributeId,\r\n        attributeName: question.attributeName,\r\n        questionText: question.text,\r\n        type: question.type,\r\n        responses: question.type == 'Checkbox' ? question.answerValue : [question.answerValue],\r\n        verifications: []\r\n      });\r\n    });\r\n\r\n    if (localStorage.getItem('isProfileCompleted') == \"false\") {\r\n      let isRegistrationProfileWithLocationMap = false;\r\n      let name, gender, address;\r\n\r\n      for (let cnt = 0; cnt < params['responses'].length; cnt++) {\r\n        if (params['responses'][cnt].attributeName == 'location_map') {\r\n          isRegistrationProfileWithLocationMap = true;\r\n          address = params['responses'][cnt].responses[0];\r\n        }\r\n        if (params['responses'][cnt].attributeName.toLowerCase() == 'name') {\r\n          name = params['responses'][cnt].responses[0];\r\n          params['bluenumberName'] = name;\r\n        }\r\n        if (params['responses'][cnt].attributeName.toLowerCase() == 'gender') {\r\n          gender = params['responses'][cnt].responses[0];\r\n        }\r\n      }\r\n      if (isRegistrationProfileWithLocationMap) {\r\n        let profileParam = {\r\n          address: address,\r\n          blueNumber: this.blueNumber,\r\n          gender: gender,\r\n          latitude: this.profileLat,\r\n          longitude: this.profileLng,\r\n          name: name,\r\n          role: \"Other\"\r\n        }\r\n        this.sharedService.startLoader();\r\n        this.dashboardService.updateProfileDetails(profileParam).subscribe((presult: any) => {\r\n          this.dashboardService.updateProfileStatus().subscribe((data: any) => {\r\n            this.saveSurveyResponses(params);\r\n          }, (error => {\r\n            if (error && error.error && error.error.responseException) {\r\n              this.sharedService.showToastMesaages('error', error.error.responseException.exceptionMessage);\r\n            }\r\n          }));\r\n        }, (error => {\r\n          if (error && error.error && error.error.responseException) {\r\n            this.sharedService.showToastMesaages('error', error.error.responseException.exceptionMessage);\r\n          }\r\n        }));\r\n      } else {\r\n        this.saveSurveyResponses(params);\r\n      }\r\n    } else {\r\n      this.saveSurveyResponses(params);\r\n    }\r\n  }\r\n  // *********** Method to Save a Survey Response ******************\r\n  saveSurveyResponses(params: any) {\r\n    this.sharedService.startLoader();\r\n    this.surveyService.saveSurveyResponse(params).subscribe((res: any) => {\r\n      if (!res['isError']) {\r\n        if (localStorage.getItem('ssid') != 'null' && localStorage.getItem('ssid') != '' && this.sharedService.successErrorMsg['firstSurveyId']) {\r\n          // ******** If Survey type is SSID Fetch the Total Response count of survey ****************\r\n          this.surveyService.getSurveyResponseCount(localStorage.getItem('ssid'), this.sharedService.successErrorMsg['firstSurveyId']).subscribe((data: any) => {\r\n            if (!data['isError']) {\r\n              this.responseCount = data.result;\r\n              this.navigateToMessagesScreen();\r\n            } else {\r\n              this.navigateToMessagesScreen();\r\n            }\r\n          }, ((error: any) => {\r\n            if (error && error.error && error.error.responseException) {\r\n              this.sharedService.showToastMesaages('error', error.error.responseException.exceptionMessage);\r\n            }\r\n            this.navigateToMessagesScreen();\r\n          }));\r\n        } else {\r\n          this.navigateToMessagesScreen();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // ******** Method to Navigate to Msg screen\r\n  navigateToMessagesScreen() {\r\n    if (localStorage.getItem('surveyType') == 'verify') {\r\n      this.sharedService.successErrorMsg['message'] = \"You have been verified!\";\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('/home/messages');\r\n      this.sharedService.stopLoader();\r\n      return;\r\n    }\r\n    if (localStorage.getItem('surveyType') == 'feedback') {\r\n      this.sharedService.successErrorMsg['message'] =\r\n        `${this.qrCodeData['currency']} ${this.qrCodeData['paymentOffered']}`;\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('/home/messages');\r\n      this.sharedService.stopLoader();\r\n      return;\r\n    }\r\n    if (this.sharedService.successErrorMsg['nextSurveyId'] != '') {\r\n      if (this.sharedService.successErrorMsg['nextSurveyId'] != this.surveyQRCode) {\r\n        if (this.sharedService.successErrorMsg['firstSurveyId'] == this.surveyQRCode) {\r\n          // this.sharedService.successErrorMsg['messageHeading'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey,\r\n          //  you are the ${this.responseCount}${this.numberNotation()} respondent of ${environment.maxSurveyParticipants} total `;\r\n          this.sharedService.successErrorMsg['firstSurveyId'] = '';\r\n          this.sharedService.successErrorMsg['isRequestSurvey'] = true;\r\n        }\r\n        this.sharedService.successErrorMsg['message'] = \"AnswerNextSurvey\";\r\n        this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n        this.sharedService.successErrorMsg['showProceed'] = false;\r\n        this.router.navigateByUrl('/home/messages');\r\n        //            this.router.navigateByUrl(`home/survey/${this.sharedService.successErrorMsg['nextSurveyId']}`);\r\n        //            this.resetQuestions();\r\n      } else {\r\n        if (this.sharedService.successErrorMsg['firstSurveyId'] == this.surveyQRCode) {\r\n          // this.sharedService.successErrorMsg['message'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey,\r\n          //  you are the ${this.responseCount}${this.numberNotation()} respondent of ${environment.maxSurveyParticipants} total `;\r\n          // if (this.responseCount <= environment.maxSurveyParticipants) {\r\n          //   this.sharedService.successErrorMsg['message'] = this.sharedService.successErrorMsg['message'] + ' and you are eligible for payment.'\r\n          // }\r\n          this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n          if (this.sharedService.successErrorMsg['firstSurveyId'] == this.sharedService.successErrorMsg['lastSurveyId']) {\r\n            this.sharedService.successErrorMsg['messageHeading'] = 'Survey Set Completed';\r\n          } else {\r\n            this.sharedService.successErrorMsg['isRequestSurvey'] = true;\r\n          }\r\n          this.sharedService.successErrorMsg['firstSurveyId'] = '';\r\n        } else {\r\n          if (this.sharedService.successErrorMsg['lastSurveyId'] == this.surveyQRCode) {\r\n            // this.sharedService.successErrorMsg['messageHeading'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey`;\r\n            // if (Number(localStorage.getItem('currentSurveyDay')) <= 3) {\r\n            //   if (this.responseCount <= environment.maxSurveyParticipants) {\r\n            //     this.sharedService.successErrorMsg['messageHeading'] = this.sharedService.successErrorMsg['messageHeading'] + ' and you are eligible for payment.'\r\n            //   }\r\n            // }\r\n            // this.sharedService.successErrorMsg['message'] = \"Thanks for completing the survey set.\";\r\n            this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n            this.sharedService.successErrorMsg['messageHeading'] = 'Survey Set Completed';\r\n          } else {\r\n            // this.sharedService.successErrorMsg['messageHeading'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey`;\r\n            // if (Number(localStorage.getItem('currentSurveyDay')) <= 3) {\r\n            //   if (this.responseCount <= environment.maxSurveyParticipants) {\r\n            //     this.sharedService.successErrorMsg['messageHeading'] = this.sharedService.successErrorMsg['messageHeading'] + ' and you are eligible for payment.'\r\n            //   }\r\n            // }\r\n            // this.sharedService.successErrorMsg['message'] = \"Thank you for completing today's survey. See you tomorrow!\";\r\n            this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n\r\n          }\r\n        }\r\n        this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n        this.sharedService.successErrorMsg['showProceed'] = false;\r\n        this.router.navigateByUrl('/home/messages');\r\n      }\r\n    } else {\r\n      if (this.sharedService.successErrorMsg['firstSurveyId'] == this.surveyQRCode) {\r\n        // this.sharedService.successErrorMsg['message'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey,\r\n        //  you are the ${this.responseCount}${this.numberNotation()} respondent of ${environment.maxSurveyParticipants} total`;\r\n        // if (this.responseCount <= environment.maxSurveyParticipants) {\r\n        //   this.sharedService.successErrorMsg['message'] = this.sharedService.successErrorMsg['message'] + 'and you are eligible for payment.'\r\n        // }\r\n        this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n        this.sharedService.successErrorMsg['firstSurveyId'] = '';\r\n        this.sharedService.successErrorMsg['isRequestSurvey'] = true;\r\n      } else {\r\n        if (this.sharedService.successErrorMsg['lastSurveyId'] == this.surveyQRCode) {\r\n          // this.sharedService.successErrorMsg['messageHeading'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey`;\r\n          // if (Number(localStorage.getItem('currentSurveyDay')) <= 3) {\r\n          //   if (this.responseCount <= environment.maxSurveyParticipants) {\r\n          //     this.sharedService.successErrorMsg['messageHeading'] = this.sharedService.successErrorMsg['messageHeading'] + 'and you are eligible for payment.'\r\n          //   }\r\n          // }\r\n          // this.sharedService.successErrorMsg['message'] = \"Thanks for completing the survey set.\";\r\n          this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n          this.sharedService.successErrorMsg['messageHeading'] = 'Survey Set Completed';\r\n        } else {\r\n          // this.sharedService.successErrorMsg['messageHeading'] = `Today is Day ${localStorage.getItem('currentSurveyDay')} of this survey`;\r\n          // if (Number(localStorage.getItem('currentSurveyDay')) <= 3) {\r\n          //   if (this.responseCount <= environment.maxSurveyParticipants) {\r\n          //     this.sharedService.successErrorMsg['messageHeading'] = this.sharedService.successErrorMsg['messageHeading'] + 'and you are eligible for payment.'\r\n          //   }\r\n          // }\r\n          // this.sharedService.successErrorMsg['message'] = \"Thank you for completing today's survey. See you tomorrow!\";\r\n          this.sharedService.successErrorMsg['message'] = `Today's survey is done!`;\r\n        }\r\n      }\r\n      this.sharedService.successErrorMsg['showAcceptReject'] = false;\r\n      this.sharedService.successErrorMsg['showProceed'] = false;\r\n      this.router.navigateByUrl('/home/messages');\r\n    }\r\n    this.sharedService.stopLoader();\r\n  }\r\n  numberNotation() {\r\n    let count = this.responseCount % 10\r\n    switch (count) {\r\n      case 0: return '';\r\n      case 1: return 'st';\r\n      case 2: return 'nd';\r\n      case 3: return 'rd';\r\n      default: return 'th';\r\n    }\r\n  }\r\n  resetQuestions() {\r\n    this.questionsList = [];\r\n    this.totalQuestions = 0;\r\n    this.isFirstSurvey = true;\r\n    this.currentQuestion = 0;\r\n    let interval = setTimeout(() => {\r\n      this.fetchSurveyIdDetails();\r\n      clearTimeout(interval);\r\n    }, 1000)\r\n  }\r\n  openPopup(popupName: any) {\r\n    this.modalService.open(popupName, {\r\n      size: 'md',\r\n      windowClass: 'px-5'\r\n    });\r\n  }\r\n  onDoneClick() {\r\n    this.modalService.dismissAll();\r\n    this.router.navigateByUrl('home');\r\n  }\r\n  closeAddressPopup() {\r\n    this.modalService.dismissAll();\r\n  }\r\n  onBackClick() {\r\n    if (this.currentQuestion <= 1) {\r\n      this.router.navigateByUrl('/home')\r\n    } else {\r\n      this.showValidationMsg['display'] = false;\r\n      this.continueButtonText = this.appId == 'mmind' ? 'Submit' : 'Next';\r\n      // this.continueButtonText = \"Continue\";\r\n      this.currentQuestion--;\r\n      this.questionsList = [this.questionObject.sections[0].questions[this.currentQuestion - 1]];\r\n      let interval = setTimeout(() => {\r\n        this.selectMapQuestion(this.questionsList[0]);\r\n        this.initMap({ lat: this.latitude, lng: this.longitude });\r\n        clearInterval(interval);\r\n      }, 1000)\r\n    }\r\n  }\r\n  getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position: any) => {\r\n        if (position) {\r\n          console.log(\"Latitude: \" + position.coords.latitude +\r\n            \"Longitude: \" + position.coords.longitude);\r\n          this.lat = position.coords.latitude;\r\n          this.lng = position.coords.longitude;\r\n          console.log(\"User Lat: \", this.lat);\r\n          console.log(\"User Lng: \", this.lng);\r\n          // this.getOARFacilities();\r\n          // ***************** COmment later ********************\r\n          // this.initMap({ lat: this.lat, lng: this.lng });\r\n\r\n          // if (this.lat == \"\" || this.lng == \"\") {\r\n          //   this.fetchProfileDetails();\r\n          // }\r\n        }\r\n      },\r\n        (error: any) => {\r\n          console.log(error);\r\n          this.fetchProfileDetails();\r\n        });\r\n      // if (this.lat == \"\" || this.lng == \"\") {\r\n      //   this.fetchProfileDetails();\r\n      // }\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n      if (this.lat == \"\" || this.lng == \"\") {\r\n        this.fetchProfileDetails();\r\n      }\r\n    }\r\n  }\r\n  fetchProfileDetails() {\r\n    this.blueNumber = localStorage.getItem('personBluenumber');\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.getProfileDetails(localStorage.getItem('personBluenumber')).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError'] && res['result']) {\r\n        this.lat = res.result['latitude'];\r\n        this.lng = res.result['longitude'];\r\n        this.initMap({ lat: this.lat, lng: this.lng });\r\n      }\r\n    });\r\n  }\r\n  onFileUpload(event: any, questions: any) {\r\n    let formData = new FormData();\r\n    formData.append('file', event.target.files[0]);\r\n    this.sharedService.startLoader();\r\n    this.dashboardService.uploadFileToSurvey(this.questionObject.id, formData).subscribe((res: any) => {\r\n      this.sharedService.stopLoader();\r\n      if (!res['isError']) {\r\n        questions['answerValue'] = res['result'];\r\n      }\r\n    });\r\n  }\r\n  openGoWallet() {\r\n    window.open('https://millionmakers.org/contact-us/#touchngowallet');\r\n  }\r\n}\r\n","<div class=\"pma\">\r\n  <div class=\"container\">\r\n    <!-- Bluenumber section -->\r\n    <section class=\" pt-2 surevey-question-font\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <h1 class=\"pma-heading text-gray-1 mb-2 d-flex\">\r\n            <i class=\"fas fa-chevron-left mouse-pointer pr-3\" (click)=\"onBackClick()\"></i> &nbsp;\r\n            <h4 *ngIf=\"appId == 'mmind'\" class=\"q-label mt-1\">Question {{currentQuestion}}</h4>\r\n            <!--            <div class=\"ms-2 d-flex\" *ngIf=\"appId != 'mmind'\">-->\r\n            <!--            <mat-progress-bar mode=\"determinate\" [value]=\"progressValue()\"></mat-progress-bar>-->\r\n            <!--              <div class=\"d-flex\">-->\r\n            <!--                <div class=\"d-flex justify-content-center align-items-center\"-->\r\n            <!--                     *ngFor=\"let question of [].constructor(this.totalQuestions); let i = index\">-->\r\n            <!--                  <div class=\"circle\" [ngClass]=\"{'circle-fill': i < this.currentQuestion}\"></div>-->\r\n            <!--                </div>-->\r\n            <!--              </div>-->\r\n            <!--            </div>-->\r\n            <!--            <h4 *ngIf=\"appId != 'mmind'\" class=\"q-label mt-1\">Question {{currentQuestion}} of {{totalQuestions}}</h4>-->\r\n          </h1>\r\n          <!-- Dynamic below -->\r\n          <form>\r\n            <div>\r\n              <div class=\"mb-3\">\r\n                <div class=\"mb-3\" *ngFor=\"let questions of questionsList;\">\r\n                  <!-- <h4 class=\"q-label\">Question {{currentQuestion}}</h4> -->\r\n                  <div class=\"p-4 pe-0 me-0\">\r\n                    <h5 class=\"\">\r\n                      {{questions?.text}}\r\n                    </h5>\r\n                    <!-- ************ MAP Field ******************* -->\r\n                    <div *ngIf=\"questions?.attributeName == 'location_map'\">\r\n                      <div>\r\n                        <div class=\"mb-2\">\r\n                          <input (keyup)=\"onRegionEnter()\" class=\"form-control location-bor mb-2\"\r\n                            [(ngModel)]=\"questions.answerValue\" ngx-google-places-autocomplete\r\n                            placeholder=\"Enter factory name or pin on the map below\" #placesRef=\"ngx-places\"\r\n                            (onAddressChange)=\"handleAddressChange($event, questions)\" type=\"text\"\r\n                            [ngModelOptions]=\"{standalone: true}\" />\r\n                          <b class=\"my-2\">Location Selected: {{questions.answerValue}}</b>\r\n                        </div>\r\n                        <div id=\"map\" elementAddedToView (ngInit)=\"selectMapQuestion(questions); initMap()\"></div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- ****************** TEXT Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Text' && questions?.attributeName != 'location_map'\">\r\n                      <input type=\"text\" class=\"form-control location-bor\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [(ngModel)]=\"questions.answerValue\" />\r\n                    </div>\r\n                    <!-- ****************** AADHAr NUMBER Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Number' && questions?.attributeName == 'aadhar_number'\">\r\n                      <input type=\"text\" class=\"form-control location-bor\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [(ngModel)]=\"questions.answerValue\" maxlength=\"12\" />\r\n                    </div>\r\n                    <!-- ****************** NUMBER Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Number' && questions?.attributeName != 'aadhar_number'\">\r\n                      <input type=\"number\" class=\"form-control location-bor\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [(ngModel)]=\"questions.answerValue\" />\r\n                    </div>\r\n                    <!-- ****************** DROPDOWN Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Dropdown'\">\r\n                      <select class=\"form-control location-bor\" [(ngModel)]=\"questions.answerValue\"\r\n                        [ngModelOptions]=\"{standalone: true}\">\r\n                        <option *ngFor=\"let options of questions?.options\" [value]=\"options?.value\">\r\n                          {{options?.value}}\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                    <!-- ****************** RADIO Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Radio'\" class=\"custom-control custom-radio pos-text\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <div>\r\n                          <div *ngFor=\"let options of questions?.options; let i = index;\">\r\n                            <input type=\"radio\" [class]=\"'form-check-input mb-3'\" [id]=\"options?.id\"\r\n                              [ngModelOptions]=\"{standalone: true}\" [value]=\"options?.value\"\r\n                              [(ngModel)]=\"questions.answerValue\"\r\n                              [ngClass]=\"{'hp-radio': questions?.attributeName == 'hp_radio'}\">\r\n                            <label class=\"form-check-label text-capitalize\" [for]=\"options?.id\">\r\n                              {{options?.value}}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row text-center\" *ngIf=\"questions?.attributeName == 'hp_radio'\">\r\n                          <div class=\"col-md-12\">\r\n                            <img src=\"../../../assets/media/touch-n-go-ewallet-logo.svg\" alt=\"\" class=\"img-fluid\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!-- <div class=\"form-check\">\r\n                      <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\">\r\n                      <label class=\"form-check-label first-rad\" for=\"flexRadioDefault1\">\r\n                        Male\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                      <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked>\r\n                      <label class=\"form-check-label sec-rad\" for=\"flexRadioDefault2\">\r\n                        Female\r\n                      </label>\r\n                    </div> -->\r\n                    <!-- ****************** HP RADIO Field Displays Text on No option selection ****************** -->\r\n                    <div\r\n                      *ngIf=\"questions?.attributeName == 'hp_radio' && questions?.answerValue && questions?.answerValue?.toLowerCase() == 'no'\"\r\n                      class=\"text-center HP-RADIO-bottom-position p-4\">\r\n                      <p class=\"tng-text\">\r\n                        Please register a TNG wallet for this mobile number so you can get paid when you complete the\r\n                        survey.\r\n                      </p>\r\n                      <!--                      <p class=\"tng-text\">You must have a Tn'G ewallet to participate so you can get paid when you-->\r\n                      <!--                        complete-->\r\n                      <!--                        the surveys.-->\r\n                      <!--                        Please get your free Tn'G ewallet-->\r\n                      <!--                        <span (click)=\"openGoWallet()\" class=\"text-primary mouse-pointer\">here.</span>-->\r\n                      <!--                      </p>-->\r\n                    </div>\r\n                    <!-- ****************** CHECKBOX Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Checkbox'\" class=\"custom-control custom-checkbox mb-2\">\r\n                      <div *ngFor=\"let options of questions?.options\">\r\n                        <input type=\"checkbox\" class=\"form-check-input mb-3\" [id]=\"options?.id\"\r\n                          [ngModelOptions]=\"{standalone: true}\" [value]=\"options?.value\"\r\n                          [(ngModel)]=\"options.isSelected\">\r\n                        <label class=\"form-check-label\" [for]=\"options?.id\">\r\n                          {{options?.value}} </label>\r\n                      </div>\r\n                    </div>\r\n                    <!-- ****************** FILE Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'File'\">\r\n                      <input type=\"file\" class=\"form-control mb-3 location-bor\"\r\n                        (change)=\"onFileUpload($event, questions)\" />\r\n                    </div>\r\n                    <!-- ****************** OTHER TEXT Field ****************** -->\r\n                    <div *ngIf=\"questions?.type == 'Other'\">\r\n                      <input type=\"text\" class=\"form-control location-bor\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [(ngModel)]=\"questions.answerValue\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"px-4 pb-4\" *ngIf=\"showValidationMsg['display']\" style=\"color: #ff0000\">\r\n                    {{ showValidationMsg['message'] }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <div *ngIf=\"isSurveyLoaded\" class=\"bottom-position\">\r\n            <div class=\"\">\r\n              <ul class=\"d-flex justify-content-center p-0 m-0 mb-3\">\r\n                <li *ngFor=\"let question of [].constructor(this.totalQuestions); let i = index\"\r\n                  [ngClass]=\"{'active': i < this.currentQuestion}\">\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div class=\"text-center pma-buttons px-4 d-flex justify-content-around mb-2\">\r\n              <a class=\"btn btn-mm-p btn-block\" (click)=\"onContinueClick()\">\r\n                {{continueButtonText}}\r\n              </a>\r\n            </div>\r\n\r\n            <div class=\"text-center\" *ngIf=\"appId == 'mmind'\">\r\n              <p>Question {{currentQuestion}} of {{totalQuestions}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Modal pop-up -->\r\n\r\n<!--  Modal Pop-ups starts here-->\r\n<ng-template #content10>\r\n  <form autocomplete=\"off\" class=\" pma-modal pma\">\r\n    <div class=\"modal-header header-custom border-bottom-0\">\r\n      <span class=\"modal-title-save pl-3 pl-md-2\">&nbsp;</span>\r\n    </div>\r\n    <div class=\"modal-body modal-body-space pb-0\">\r\n      <div class=\"form-group mb-0\">\r\n        <div class=\"col-12 mb-4 pl-0 pr-0 text-center\">\r\n          <div class=\"row form-group pt-3 d-flex justify-content-center\">\r\n            <div class=\"text-center mb-5\">\r\n              <div class=\"text-center mb-5\">\r\n                <img src=\"../../../assets/media/tick.png\" class=\"img-fluid p-success  w-100 mb-3\" alt=\"\">\r\n                <h5>Thanks for Participating</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer footer-custom pb-5 pt-0 border-top-0 justify-content-center\">\r\n      <div class=\"pma-buttons\">\r\n        <button type=\"button\" class=\"btn btn-p btn-md  btn-block\" (click)=\"onDoneClick()\">Done</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #content>\r\n  <form autocomplete=\"off\" class=\"pma-modal pma\">\r\n    <div class=\"modal-header header-custom border-bottom-0\">\r\n      <span class=\"modal-title-save pl-3 pl-md-2\">&nbsp;</span>\r\n    </div>\r\n    <div class=\"modal-body modal-body-space pb-0\">\r\n      <div class=\"form-group mb-0\">\r\n        <div class=\"col-12 mb-4 pl-0 pr-0 text-center\">\r\n          <div class=\"row form-group pt-3 d-flex justify-content-center\">\r\n            <div class=\"text-center mb-5\">\r\n              <div class=\"text-center mb-5\">\r\n                <img src=\"../../../assets/media/tick.png\" class=\"img-fluid p-success  w-100 mb-3\" alt=\"\">\r\n                <h5>{{popupMsg}}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer footer-custom pb-5 pt-0 border-top-0 justify-content-center\">\r\n      <div class=\"pma-buttons\">\r\n        <button type=\"button\" class=\"btn btn-p btn-md  btn-block\" (click)=\"onDoneClick()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-p btn-md  btn-block\" (click)=\"onDoneClick()\">Proceed</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n<ng-template #noAddressPopup>\r\n  <form autocomplete=\"off\" class=\"pma-modal pma\">\r\n    <div class=\"modal-header header-custom border-bottom-0\">\r\n      <span class=\"modal-title-save pl-3 pl-md-2\">&nbsp;</span>\r\n    </div>\r\n    <div class=\"modal-body modal-body-space pb-0\">\r\n      <div class=\"form-group mb-0\">\r\n        <div class=\"col-12 mb-4 pl-0 pr-0 text-center\">\r\n          <div class=\"row form-group pt-3 d-flex justify-content-center\">\r\n            <div class=\"text-center mb-5\">\r\n              <div class=\"text-center mb-5\">\r\n                <h5>The selected pointer doesnt have a valid address. Please relocate again to fetch the\r\n                  valid address\r\n                  on the map.\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer footer-custom pb-5 pt-0 border-top-0 justify-content-center\">\r\n      <div class=\"pma-buttons\">\r\n        <a class=\"btn btn-mm-p  btn-lg btn-block\" (click)=\"closeAddressPopup()\">\r\n          Okay\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #locationPopup let-c=\"close\" let-d=\"dismiss\">\r\n  <div class=\"modal-header mr-2 mt-0 ml-4 border-bottom-0\">\r\n    <h3 class=\"modal-title\" id=\"modal-basic-title\">&nbsp;</h3>\r\n  </div>\r\n  <div class=\"modal-body pt-0 mt-0\">\r\n    <section class=\"pb-0 pr-4 pl-4 pt-0\">\r\n      <div class=\"row mb-5 q-mx-5\">\r\n        To enable location : <br>\r\n        Go to settings > type location > tap the location icon > turn it on\r\n      </div>\r\n    </section>\r\n    <div class=\"text-center pma-buttons pb-4\">\r\n      <div class=\"pma-buttons bottom-position text-center\">\r\n        <button style=\"background: #AD0C62; color: white\" class=\"btn btn-lg btn-block\" (click)=\"closeAddressPopup()\">\r\n          Okay\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SharedService } from 'src/app/shared/shared.service';\nimport { UpiService } from '../upi.service';\nimport { SurveyService } from '../survey.service';\n\n@Component({\n  selector: 'app-upi-details',\n  templateUrl: './upi-details.component.html',\n  styleUrls: ['./upi-details.component.scss']\n})\nexport class UpiDetailsComponent implements OnInit {\n\n  upiControl = new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(25)]);\n  constructor(private router: Router,private sharedService: SharedService,private upiService: UpiService,private surveyService: SurveyService) { }\n\n  ngOnInit(): void {\n    if (localStorage.getItem('ssid') != null && localStorage.getItem('ssid') != 'null' && localStorage.getItem('ssid') != '') {\n      this.fetchSurveySetSSIDDetails();\n    }\n  }\n\n// ********** Method to fetch the Survey Info based on SSID  ************************\nfetchSurveySetSSIDDetails() {\n  this.sharedService.startLoader();\n  this.surveyService.getSurveyGroupByQRCode(localStorage.getItem('ssid')).subscribe(res => {\n    this.sharedService.stopLoader();\n    if (!res['isError']) {\n      if (res['result']['isUpiDetailsExist']) {\n        this.sharedService.showToastMesaages('info', 'UPI details already exist');\n        this.router.navigateByUrl('home/info');\n      }\n    }\n  });\n}\n\n\n  public onBackClick() {\n  this.router.navigateByUrl(`/home/info`);\n  }\n\n  public onUpiIdSubmit() {   \n    let upi = '';\n    upi = this.upiControl.value;\n    this.saveBankDetails(upi);\n  }\n\n  // *********** API to upi Bank Details ****************\n  saveBankDetails(upiId: any) {    \n    this.sharedService.startLoader();\n    this.upiService.saveUserUpiDetails({\n      upiId: upiId,\n      surveySetId: localStorage.getItem('surveySetId'),     \n    }).subscribe((res: any) => {\n      if (!res['isError']) {\n        this.sharedService.showToastMesaages('success', 'User UPI details saved successfully');\n        this.router.navigateByUrl('home/info');\n      }\n      this.sharedService.stopLoader();   \n    });\n  }\n}\n\n\n\n","<div class=\"pma bank-ifsc-details\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <h1 class=\"pma-heading text-gray-1 mb-5\">\r\n            <i class=\"fas fa-chevron-left mouse-pointer pe-3\" (click)=\"onBackClick()\"></i>\r\n            Pay to my UPI\r\n          </h1>\r\n\r\n          <h6 class=\"upi-detalis-heading mb-4\"> Fill UPI Details : </h6>\r\n          <p class=\"upi-detalis-description mb-2\">Please enter your UPI ID which is linked to the mobile number, registered in this application.</p>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <input type=\"text\" placeholder=\"Enter your UPI ID\" aria-label=\"Enter your UPI ID\" matInput\r\n              [formControl]=\"upiControl\" minlength=\"5\" maxlength=\"20\">\r\n            <mat-error class=\"m-mt-sm\" *ngIf=\"upiControl.hasError('required') && upiControl.touched\">\r\n              UPI ID is required\r\n            </mat-error>\r\n            <mat-error class=\"m-mt-sm\" *ngIf=\"upiControl.hasError('minlength') && upiControl.touched\">\r\n              Enter valid UPI ID\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <div class=\"pma-buttons bottom-position mt-3 text-center p-4\">\r\n            <button mat-raised-button (click)=\"onUpiIdSubmit()\" class=\"btn btn-mm-p w-100 padding-y\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n  </div>\r\n  </div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpiService {\n\n  constructor(private http: HttpClient) { }\n\n  saveUserUpiDetails(params: any): Observable<any> {\n    return this.http.post(`${environment.BlueNumberGlobalAPI}/api/v1/Upi`, params);\n  }\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'blueNoFormat'\r\n})\r\nexport class BlueNoFormatPipe implements PipeTransform {\r\n\r\n  transform(value: any, ...args: unknown[]): unknown {\r\n    if (value) {\r\n      return value.substring(0, 5) + '-' + value.substring(5, 10) + '-' + value.substring(10, 15) + '-' + value.substring(15, 20)\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'numberFixed'\r\n})\r\nexport class NumberFixedPipe implements PipeTransform {\r\n\r\n    transform(value: any, fixedValue: number = 2) {\r\n        if (value) {\r\n            return value.toFixed(fixedValue);\r\n        }\r\n        return value;\r\n    }\r\n\r\n}\r\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['@angular/core','exports', '@angular/core'], factory) :\n\t(factory(global.ng.core,(global.ng = global.ng || {}, global.ng['ngx-google-places-autocomplete'] = global.ng['ngx-google-places-autocomplete'] || {}),global.ng.core));\n}(this, (function (ɵngcc0,exports,_angular_core) { 'use strict';\n\nvar Options = (function () {\n    /**\n     * @param {?=} opt\n     */\n    function Options(opt) {\n        if (!opt)\n            return;\n        Object.assign(this, opt);\n    }\n    return Options;\n}());\n\nvar GooglePlaceDirective = (function () {\n    /**\n     * @param {?} el\n     * @param {?} ngZone\n     */\n    function GooglePlaceDirective(el, ngZone) {\n        this.el = el;\n        this.ngZone = ngZone;\n        this.onAddressChange = new _angular_core.EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.ngAfterViewInit = function () {\n        if (!this.options)\n            this.options = new Options();\n        this.initialize();\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.isGoogleLibExists = function () {\n        return !(!google || !google.maps || !google.maps.places);\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.initialize = function () {\n        var _this = this;\n        if (!this.isGoogleLibExists())\n            throw new Error(\"Google maps library can not be found\");\n        this.autocomplete = new google.maps.places.Autocomplete(this.el.nativeElement, this.options);\n        if (!this.autocomplete)\n            throw new Error(\"Autocomplete is not initialized\");\n        if (!this.autocomplete.addListener != null) {\n            this.eventListener = this.autocomplete.addListener('place_changed', function () {\n                _this.handleChangeEvent();\n            });\n        }\n        this.el.nativeElement.addEventListener('keydown', function (event) {\n            if (!event.key) {\n                return;\n            }\n            var /** @type {?} */ key = event.key.toLowerCase();\n            if (key == 'enter' && event.target === _this.el.nativeElement) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        });\n        // according to https://gist.github.com/schoenobates/ef578a02ac8ab6726487\n        if (window && window.navigator && window.navigator.userAgent && navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) {\n            setTimeout(function () {\n                var /** @type {?} */ containers = document.getElementsByClassName('pac-container');\n                if (containers) {\n                    var /** @type {?} */ arr = Array.from(containers);\n                    if (arr) {\n                        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                            var container = arr_1[_i];\n                            if (!container)\n                                continue;\n                            container.addEventListener('touchend', function (e) {\n                                e.stopImmediatePropagation();\n                            });\n                        }\n                    }\n                }\n            }, 500);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.reset = function () {\n        this.autocomplete.setComponentRestrictions(this.options.componentRestrictions);\n        this.autocomplete.setTypes(this.options.types);\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.handleChangeEvent = function () {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.place = _this.autocomplete.getPlace();\n            if (_this.place) {\n                _this.onAddressChange.emit(_this.place);\n            }\n        });\n    };\n    /**\n     * @nocollapse\n     */\n    GooglePlaceDirective.ctorParameters = function () { return [\n        { type: _angular_core.ElementRef, },\n        { type: _angular_core.NgZone, },\n    ]; };\n    GooglePlaceDirective.propDecorators = {\n        'options': [{ type: _angular_core.Input, args: ['options',] },],\n        'onAddressChange': [{ type: _angular_core.Output },],\n    };\nGooglePlaceDirective.ɵfac = function GooglePlaceDirective_Factory(t) { return new (t || GooglePlaceDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nGooglePlaceDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: GooglePlaceDirective, selectors: [[\"\", \"ngx-google-places-autocomplete\", \"\"]], inputs: { options: \"options\" }, outputs: { onAddressChange: \"onAddressChange\" }, exportAs: [\"ngx-places\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GooglePlaceDirective, [{\n        type: _angular_core.Directive,\n        args: [{\n                selector: '[ngx-google-places-autocomplete]',\n                exportAs: 'ngx-places'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { onAddressChange: [{\n            type: _angular_core.Output\n        }], options: [{\n            type: _angular_core.Input,\n            args: ['options']\n        }] }); })();\n    return GooglePlaceDirective;\n}());\n\nvar GooglePlaceModule = (function () {\n    function GooglePlaceModule() {\n    }\n    /**\n     * @nocollapse\n     */\n    GooglePlaceModule.ctorParameters = function () { return []; };\nGooglePlaceModule.ɵfac = function GooglePlaceModule_Factory(t) { return new (t || GooglePlaceModule)(); };\nGooglePlaceModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: GooglePlaceModule });\nGooglePlaceModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GooglePlaceModule, [{\n        type: _angular_core.NgModule,\n        args: [{\n                declarations: [GooglePlaceDirective],\n                exports: [GooglePlaceDirective]\n            }]\n    }], function () { return []; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GooglePlaceModule, { declarations: [GooglePlaceDirective], exports: [GooglePlaceDirective] }); })();\n    return GooglePlaceModule;\n}());\n\nexports.GooglePlaceModule = GooglePlaceModule;\nexports.GooglePlaceDirective = GooglePlaceDirective;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, TemplateRef, Directive, Inject, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { hasModifierKey, ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, take, filter, map, tap, delay } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(class {\n});\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = (platform === null || platform === void 0 ? void 0 : platform.SAFARI) || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() {\n        return this._isOpen && this.showPanel;\n    }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() {\n        return this._autoActiveFirstOption;\n    }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            if (this.isOpen) {\n                this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n            }\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteBase, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatAutocompleteBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", panelWidth: \"panelWidth\", classList: [\"class\", \"classList\"] }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true, static: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }, { type: i1.Platform }];\n    }, propDecorators: { template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], displayWith: [{\n                type: Input\n            }], autoActiveFirstOption: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], optionSelected: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], optionActivated: [{\n                type: Output\n            }], classList: [{\n                type: Input,\n                args: ['class']\n            }] } });\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatAutocomplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                    }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }] } });\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true,\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of changes to the selection state of the autocomplete options. */\n        this.optionSelections = defer(() => {\n            const options = this.autocomplete ? this.autocomplete.options : null;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            // The `NgZone.onStable` always emits outside of the Angular zone,\n            // so all the subscriptions from `_subscribeToClosingActions()` are also outside of the Angular zone.\n            // We should manually run in Angular zone to update UI after panel closing.\n            this._zone.run(() => {\n                this.autocomplete.closed.emit();\n            });\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef\n            ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached))\n            : of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => (event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = _getEventTarget(event);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return (this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                // Normally focus moves inside `mousedown` so this condition will almost always be\n                // true. Its main purpose is to handle the case where the input is focused from an\n                // outside click which propagates up to the `body` listener within the same sequence\n                // and causes the panel to close immediately (see #3106).\n                this._document.activeElement !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                !!this._overlayRef &&\n                !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve().then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const hasModifier = hasModifierKey(event);\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifier) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (keyCode === TAB || (isArrowKey && !hasModifier && this.panelOpen)) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    _handleClick() {\n        if (this._canOpen() && !this.panelOpen) {\n            this.openPanel();\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return (merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            // The `NgZone.onStable` always emits outside of the Angular zone, thus we have to re-enter\n            // the Angular zone. This will lead to change detection being called outside of the Angular\n            // zone and the `autocomplete.opened` will also emit outside of the Angular.\n            this._zone.run(() => {\n                const wasOpen = this.panelOpen;\n                this._resetActiveItem();\n                this.autocomplete._setVisibility();\n                this._changeDetectorRef.detectChanges();\n                if (this.panelOpen) {\n                    this._overlayRef.updatePosition();\n                    // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                    // event, because we may not have emitted it when the panel was attached. This\n                    // can happen if the users opens the panel and there are no options, but the\n                    // options come in slightly later or as a result of the value changing.\n                    if (wasOpen !== this.panelOpen) {\n                        this.autocomplete.opened.emit();\n                    }\n                }\n            });\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event)));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith\n            ? this.autocomplete.displayWith(value)\n            : value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        const source = event && event.source;\n        if (source) {\n            this._clearPreviousSelectedOption(source);\n            this._setTriggerValue(source.value);\n            this._onChange(source.value);\n            this.autocomplete._emitSelectEvent(source);\n            this._element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n                id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a.getLabelId(),\n            });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._closeKeyEventStream.next();\n                    this._resetActiveItem();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass },\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, deps: [{ token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: MAT_AUTOCOMPLETE_SCROLL_STRATEGY }, { token: i2$1.Directionality, optional: true }, { token: MAT_FORM_FIELD, host: true, optional: true }, { token: DOCUMENT, optional: true }, { token: i3.ViewportRuler }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatAutocompleteTriggerBase, inputs: { autocomplete: [\"matAutocomplete\", \"autocomplete\"], position: [\"matAutocompletePosition\", \"position\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n                    }] }, { type: i2$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }, {\n                        type: Host\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { autocomplete: [{\n                type: Input,\n                args: ['matAutocomplete']\n            }], position: [{\n                type: Input,\n                args: ['matAutocompletePosition']\n            }], connectedTo: [{\n                type: Input,\n                args: ['matAutocompleteConnectedTo']\n            }], autocompleteAttribute: [{\n                type: Input,\n                args: ['autocomplete']\n            }], autocompleteDisabled: [{\n                type: Input,\n                args: ['matAutocompleteDisabled']\n            }] } });\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\", \"click\": \"_handleClick()\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"autocompleteDisabled ? null : \\\"listbox\\\"\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(click)': '_handleClick()',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteOriginBase, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteOriginBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatAutocompleteOriginBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatAutocompleteOriginBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin], imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule], exports: [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\nMatAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[OverlayModule, MatOptionModule, MatCommonModule, CommonModule], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatAutocomplete,\n                        MatAutocompleteTrigger,\n                        MatAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatProgressBar.\n/** @docs-private */\nconst _MatProgressBarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** Injection token to be used to override the default options for `mat-progress-bar`. */\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS = new InjectionToken('MAT_PROGRESS_BAR_DEFAULT_OPTIONS');\n/** Counter used to generate unique IDs for progress bars. */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarBase {\n    constructor(elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location, defaults, \n    /**\n     * @deprecated `_changeDetectorRef` parameter to be made required.\n     * @breaking-change 11.0.0\n     */\n    _changeDetectorRef) {\n        super(elementRef);\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Flag that indicates whether NoopAnimations mode is set to true. */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /** Reference to animation end subscription to be unsubscribed on destroy. */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /** ID of the progress bar. */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use `Location`\n        // since we can't tell the difference between whether the consumer is using the hash location\n        // strategy or not, because `Location` normalizes both `/#/foo/bar` and `/foo/bar` to\n        // the same thing.\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            this.mode = defaults.mode || this.mode;\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        var _a;\n        this._value = clamp(coerceNumberProperty(v) || 0);\n        // @breaking-change 11.0.0 Remove null check for _changeDetectorRef.\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() {\n        return this._bufferValue;\n    }\n    set bufferValue(v) {\n        var _a;\n        this._bufferValue = clamp(v || 0);\n        // @breaking-change 11.0.0 Remove null check for _changeDetectorRef.\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    _primaryTransform() {\n        // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n        const scale = this.value / 100;\n        return { transform: `scale3d(${scale}, 1, 1)` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            // We use a 3d transform to work around some rendering issues in iOS Safari. See #19328.\n            const scale = this.bufferValue / 100;\n            return { transform: `scale3d(${scale}, 1, 1)` };\n        }\n        return null;\n    }\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(() => {\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription = fromEvent(element, 'transitionend')\n                .pipe(filter((e) => e.target === element))\n                .subscribe(() => {\n                if (this.animationEnd.observers.length === 0) {\n                    return;\n                }\n                if (this.mode === 'determinate' || this.mode === 'buffer') {\n                    this._ngZone.run(() => this.animationEnd.next({ value: this.value }));\n                }\n            });\n        });\n    }\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_BAR_LOCATION, optional: true }, { token: MAT_PROGRESS_BAR_DEFAULT_OPTIONS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatProgressBar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatProgressBar, selector: \"mat-progress-bar\", inputs: { color: \"color\", value: \"value\", bufferValue: \"bufferValue\", mode: \"mode\" }, outputs: { animationEnd: \"animationEnd\" }, host: { attributes: { \"role\": \"progressbar\", \"aria-valuemin\": \"0\", \"aria-valuemax\": \"100\", \"tabindex\": \"-1\" }, properties: { \"attr.aria-valuenow\": \"(mode === \\\"indeterminate\\\" || mode === \\\"query\\\") ? null : value\", \"attr.mode\": \"mode\", \"class._mat-animation-noopable\": \"_isNoopAnimation\" }, classAttribute: \"mat-progress-bar\" }, viewQueries: [{ propertyName: \"_primaryValueBar\", first: true, predicate: [\"primaryValueBar\"], descendants: true }], exportAs: [\"matProgressBar\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div aria-hidden=\\\"true\\\">\\n  <svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n    <defs>\\n      <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n        <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n      </pattern>\\n    </defs>\\n    <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n  </svg>\\n  <!--\\n    The background div is named as such because it appears below the other divs and is not sized based\\n    on values.\\n  -->\\n  <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n  <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n  <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n</div>\\n\", styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], directives: [{ type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-bar', exportAs: 'matProgressBar', host: {\n                        'role': 'progressbar',\n                        'aria-valuemin': '0',\n                        'aria-valuemax': '100',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                        '[attr.mode]': 'mode',\n                        'class': 'mat-progress-bar',\n                        '[class._mat-animation-noopable]': '_isNoopAnimation',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div aria-hidden=\\\"true\\\">\\n  <svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n    <defs>\\n      <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n        <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n      </pattern>\\n    </defs>\\n    <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n  </svg>\\n  <!--\\n    The background div is named as such because it appears below the other divs and is not sized based\\n    on values.\\n  -->\\n  <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n  <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n  <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n</div>\\n\", styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PROGRESS_BAR_LOCATION]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PROGRESS_BAR_DEFAULT_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { value: [{\n                type: Input\n            }], bufferValue: [{\n                type: Input\n            }], _primaryValueBar: [{\n                type: ViewChild,\n                args: ['primaryValueBar']\n            }], animationEnd: [{\n                type: Output\n            }], mode: [{\n                type: Input\n            }] } });\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatProgressBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressBarModule, declarations: [MatProgressBar], imports: [CommonModule, MatCommonModule], exports: [MatProgressBar, MatCommonModule] });\nMatProgressBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressBarModule, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatProgressBar, MatCommonModule],\n                    declarations: [MatProgressBar],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_DEFAULT_OPTIONS, MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Output, Input, ContentChildren, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\n\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY,\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true,\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatRadioGroupBase, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatRadioGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatRadioGroupBase, inputs: { color: \"color\", name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\" }, outputs: { change: \"change\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatRadioGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { change: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }] } });\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioGroup, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRadioGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRadioGroup, selector: \"mat-radio-group\", host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-radio-group\" }, providers: [\n        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n    ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(function () { return MatRadioButton; }), descendants: true }], exportAs: [\"matRadioGroup\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                }]\n        }], propDecorators: { _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatRadioButton), { descendants: true }]\n            }] } });\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener = _radioDispatcher.listen((id, name) => {\n            if (id !== this.id && name === this.name) {\n                this.checked = false;\n            }\n        });\n    }\n    /** Whether this radio button is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return (this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            (this._providerOverride && this._providerOverride.color) ||\n            'accent');\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngDoCheck() {\n        this._updateTabIndex();\n    }\n    ngAfterViewInit() {\n        this._updateTabIndex();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Gets the tabindex for the underlying input element. */\n    _updateTabIndex() {\n        var _a;\n        const group = this.radioGroup;\n        let value;\n        // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n        // necessary, because the browser handles the tab order for inputs inside a group automatically,\n        // but we need an explicitly higher tabindex for the selected button in order for things like\n        // the focus trap to pick it up correctly.\n        if (!group || !group.selected || this.disabled) {\n            value = this.tabIndex;\n        }\n        else {\n            value = group.selected === this ? this.tabIndex : -1;\n        }\n        if (value !== this._previousTabIndex) {\n            // We have to set the tabindex directly on the DOM node, because it depends on\n            // the selected state which is prone to \"changed after checked errors\".\n            const input = (_a = this._inputElement) === null || _a === void 0 ? void 0 : _a.nativeElement;\n            if (input) {\n                input.setAttribute('tabindex', value + '');\n                this._previousTabIndex = value;\n            }\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatRadioButtonBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatRadioButtonBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatRadioButtonBase, inputs: { id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatRadioButtonBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatRadioGroupBase }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], checked: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioButton, deps: [{ token: MAT_RADIO_GROUP, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.UniqueSelectionDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RADIO_DEFAULT_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRadioButton, selector: \"mat-radio-button\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"class.mat-radio-checked\": \"checked\", \"class.mat-radio-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"attr.tabindex\": \"null\", \"attr.id\": \"id\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-radio-button\" }, exportAs: [\"matRadioButton\"], usesInheritance: true, ngImport: i0, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], directives: [{ type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', inputs: ['disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, exportAs: 'matRadioButton', host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{opacity:0;position:absolute;top:0;left:0;margin:0;width:100%;height:100%;cursor:inherit;z-index:-1}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatRadioGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RADIO_GROUP]\n                    }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RADIO_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRadioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioModule, declarations: [MatRadioGroup, MatRadioButton], imports: [MatRippleModule, MatCommonModule], exports: [MatRadioGroup, MatRadioButton, MatCommonModule] });\nMatRadioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioModule, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                    declarations: [MatRadioGroup, MatRadioButton],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n"],"names":["FormControl","Validators","map","startWith","i0","ctx_r27","ctx_r29","ctx_r30","ctx_r31","ctx_r32","ctx_r33","ctx_r34","ctx_r35","ctx_r36","ctx_r37","ctx_r38","_r2","_r5","_r8","_r11","_r14","ctx_r45","ctx_r47","BankIfscComponent","constructor","router","bankifscService","renderer","_formBuilder","sharedService","surveyService","bank","state","city1","city2","ifsc","branch","address","group","stateGroup","required","minLength","maxLength","opt","value","filterValue","toLowerCase","filter","item","includes","_filterBanks","banks","_filter2","states","_filterCity","cities","option","_filterBranch","branches","_filterGroup","ifscAddressGroup","_filterAddress","length","onBankdetailsSubmit","accountNumberControl","markAllAsTouched","retypeAccountNumberControl","selectedOption","ifscControl","bankControl","stateControl","cityControl","branchControl","invalid","showToastMesaages","saveBankDetails","checkBankDetailsValidity","startLoader","setTimeout","stopLoader","valid","saveUserDetails","ifscCode","surveySetId","localStorage","getItem","bankAccountNumber","subscribe","res","navigateByUrl","ngOnInit","fetchSurveySetSSIDDetails","getSurveyGroupByQRCode","onVerify","getBankDetails","bankDetails","result","error","onSubmit","radioButtonValue","reset","getBankNames","data","setValue","clearValues","names","filteredBanks","valueChanges","pipe","getStates","getStateNames","filteredStates","getCities","getCityNames","filteredCities","getBranches","getBranchNames","filteredBranches","getIFSCAndAddressList","getIfscAndAddress","ifscAddressGroupOptions","stateForm","get","getSelectedIFSCAddress","_a","i","onBackClick","args","forEach","arg","onAutoCompleteInputChange","event","type","filterArray","nameEntered","target","selectedName","selectors","decls","vars","consts","template","ctx","LanguageComponent","selectedLanguage","getDefaultSelectedLanguage","defaultLanguage","getLanguageName","checkForLanguageDisplay","select","document","querySelector","lang","getElementById","innerHTML","addEventListener","console","log","onNextClick","isLanguageChanged","appId","url","test","loadExternalScript","removeElement","body","script","createElement","id","src","async","defer","appendChild","remove","ngOnDestroy","cookie","split","find","row","startsWith","parts","langCode","languageNames","ActiveDescendantKeyManager","coerceBooleanProperty","coerceStringArray","InjectionToken","EventEmitter","TemplateRef","Directive","Inject","ViewChild","Input","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","forwardRef","Optional","Host","NgModule","mixinDisableRipple","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOption","MatOptionSelectionChange","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MatOptionModule","MatCommonModule","Subscription","Subject","merge","of","fromEvent","i1","_getEventTarget","i2","DOCUMENT","CommonModule","i1$1","Overlay","OverlayConfig","OverlayModule","i3","CdkScrollableModule","hasModifierKey","ESCAPE","ENTER","UP_ARROW","DOWN_ARROW","TAB","TemplatePortal","NG_VALUE_ACCESSOR","i4","MAT_FORM_FIELD","switchMap","take","tap","delay","i2$1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","platform","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_classList","inertGroups","SAFARI","_autoActiveFirstOption","isOpen","classList","reduce","className","_setVisibilityClasses","nativeElement","ngAfterContentInit","_keyManager","options","withWrap","change","index","emit","toArray","_setVisibility","unsubscribe","_setScrollTop","scrollTop","panel","_getScrollTop","markForCheck","_emitSelectEvent","_getPanelAriaLabelledby","labelId","ariaLabel","labelExpression","ariaLabelledby","_visibleClass","_hiddenClass","ɵfac","ChangeDetectorRef","ElementRef","Platform","ɵdir","undefined","decorators","static","panelWidth","MatAutocomplete","arguments","ɵcmp","provide","useExisting","NgClass","selector","encapsulation","None","changeDetection","OnPush","exportAs","inputs","host","providers","styles","optionGroups","descendants","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","changes","onSelectionChange","onStable","_scrollStrategy","autocompleteDisabled","ngAfterViewInit","window","_getWindow","runOutsideAngular","ngOnChanges","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","openPanel","_attachOverlay","_floatLabel","closePanel","_resetLabel","run","hasAttached","detach","_closingActionsSubscription","detectChanges","panelClosingActions","tabOut","_getOutsideClickStream","detachments","activeOption","activeItem","clickTarget","formField","customOrigin","connectedTo","elementRef","contains","overlayElement","writeValue","Promise","resolve","then","_setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","_handleKeydown","keyCode","hasModifier","preventDefault","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","_scrollToOption","activeItemIndex","_handleInput","parseFloat","_previousValue","_handleFocus","_handleClick","shouldAnimate","floatLabel","_animateAndLockLabel","_subscribeToClosingActions","firstStable","optionChanges","reapplyLastPosition","wasOpen","_setValueAndClose","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","skip","selected","deselect","ngDevMode","overlayRef","_portal","getLabelId","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setFirstItemActive","setActiveItem","element","readOnly","defaultView","labelCount","_getHostElement","newScrollPosition","offsetTop","offsetHeight","ViewContainerRef","NgZone","Directionality","ViewportRuler","MatFormField","_MatAutocompleteOriginBase","MatAutocompleteOrigin","MatAutocompleteModule","ɵmod","ɵinj","imports","exports","declarations","inject","mixinColor","coerceNumberProperty","ANIMATION_MODULE_TYPE","_MatProgressBarBase","MAT_PROGRESS_BAR_LOCATION","MAT_PROGRESS_BAR_LOCATION_FACTORY","_location","location","getPathname","pathname","search","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","progressbarId","MatProgressBar","_ngZone","_animationMode","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","mode","path","_rectangleFillValue","color","defaultColor","v","clamp","bufferValue","_primaryTransform","scale","transform","_bufferTransform","_primaryValueBar","e","observers","NgStyle","min","max","Math","MatProgressBarModule","Attribute","mixinTabIndex","MatRippleModule","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","name","_updateRadioButtonNames","labelPosition","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","_touch","_radios","radio","_markForCheck","isAlreadySelected","_emitChangeEvent","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_focusMonitor","_radioDispatcher","animationMode","_providerOverride","tabIndex","_uniqueId","_checked","_removeUniqueSelectionListener","_noopAnimations","listen","newCheckedState","notify","_setDisabled","_color","inputId","origin","focusVia","_inputElement","ngDoCheck","_updateTabIndex","monitor","focusOrigin","stopMonitoring","_isRippleDisabled","disableRipple","_onInputClick","_onInputInteraction","groupValueChanged","_previousTabIndex","input","setAttribute","FocusMonitor","UniqueSelectionDispatcher","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","providerOverride","MatRipple","MatRadioModule"],"sourceRoot":"webpack:///"}