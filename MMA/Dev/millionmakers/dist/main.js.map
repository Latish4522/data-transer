{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/configs/error.interceptor.ts","./src/app/configs/interceptor-providers.ts","./src/app/configs/jwt.interceptor.ts","./src/app/shared/shared.module.ts","./src/app/shared/shared.service.ts","./src/environments/environment.dev.ts","./src/main.ts","ignored|D:\\bhaskar\\work\\newwebpmammahp\\node_modules\\amazon-cognito-identity-js\\es\\utils|crypto"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'auth', pathMatch: 'full' },\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('../app/auth/auth.module').then(m => m.AuthModule),\r\n  },\r\n  {\r\n    path: 'home',\r\n    loadChildren: () => import('../app/dashboard/dashboard.module').then(m => m.DashboardModule),\r\n  },\r\n  {\r\n    path: 'claims',\r\n    loadChildren: () => import('../app/claims/claims.module').then(m => m.ClaimsModule),\r\n  },\r\n  {\r\n    path: 'help',\r\n    loadChildren: () => import('../app/help/help.module').then(m => m.HelpModule),\r\n  },\r\n  {\r\n    path: 'my-surveys',\r\n    loadChildren: () => import('../app/my-surveys/my-surveys.module').then(m => m.MySurveysModule),\r\n  },\r\n  { path: '**', redirectTo: 'auth', pathMatch: 'full' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { SharedService } from './shared/shared.service';\r\n//import { OAuthService } from 'angular-oauth2-oidc';\r\n// import { authConfig } from './configs/auth.config';\r\n//import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  serviceLoader: boolean = false;\r\n\r\n  constructor(private sharedService: SharedService) {\r\n   // this.configureOauth();\r\n  }\r\n\r\n  // private configureOauth() {\r\n  //   this.oauthService.configure(authConfig);\r\n  //   this.oauthService.tokenValidationHandler = new JwksValidationHandler();\r\n  //   this.oauthService.loadDiscoveryDocumentAndTryLogin();\r\n  //   /*https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/refreshing-a-token.html */\r\n  //   this.oauthService.setupAutomaticSilentRefresh();\r\n  // }\r\n\r\n  ngAfterContentChecked() {\r\n    this.serviceLoader = this.sharedService.loader;\r\n  }\r\n}\r\n","<ngx-loading [show]=\"serviceLoader\" [config]=\"{ backdropBorderRadius: '0px',fullScreenBackdrop:true  }\">\r\n</ngx-loading>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SharedService } from './shared/shared.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n//import { OAuthModule } from 'angular-oauth2-oidc';\r\nimport { environment } from '../environments/environment';\r\n// import { InterceptService } from './configs/interceptor.service';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpInterceptorProviders } from './configs/interceptor-providers';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n    NgbProgressbarModule,\r\n    ToastrModule.forRoot(),\r\n    NgxLoadingModule.forRoot({}),\r\n    // OAuthModule.forRoot({\r\n    //   resourceServer: {\r\n    //     allowedUrls: [environment.BlueNumberDataImportAPI, environment.BlueNumberGlobalAPI,environment.BlueNumberDataReqAPI],\r\n    //     sendAccessToken: true\r\n    //   }\r\n    // }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    }),\r\n  ],\r\n  providers: [\r\n    SharedService,\r\n    HttpInterceptorProviders\r\n    // InterceptService,\r\n    // {\r\n    //   provide: HTTP_INTERCEPTORS,\r\n    //   useClass: InterceptService,\r\n    //   multi: true\r\n    // },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Auth } from 'aws-amplify';\r\nimport { Router } from '@angular/router';\r\nimport { SharedService } from '../shared/shared.service';\r\n\r\n\r\n/**\r\n * This is used to logout the user, when the server responds with an unathorized status code.\r\n * Especially when the session token expires.\r\n * @export\r\n * @class ErrorInterceptor\r\n * @implements {HttpInterceptor}\r\n */\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router, private sharedService: SharedService) { }\r\n\r\n\r\n    /**\r\n     * Intercepter intercepts the responses, and then process based on the recieved status code\r\n     * Read more : http://jasonwatmore.com/post/2018/05/23/angular-6-jwt-authentication-example-tutorial\r\n     * @param {HttpRequest<any>} request\r\n     * @param {HttpHandler} next\r\n     * @returns {Observable<HttpEvent<any>>}\r\n     * @memberof ErrorInterceptor\r\n     */\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request).pipe(catchError(err => {\r\n            console.log(err);\r\n            this.sharedService.stopLoader();\r\n            if (err.status === 401) {\r\n                //alert('401 error' + request.url);\r\n                // auto logout if 401 response returned from api\r\n                Auth.signOut({ global: true })\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        localStorage.clear();\r\n                        this.router.navigateByUrl(\"/auth/login\");\r\n                    })\r\n                    .catch(err => { console.log(err); alert(err) });\r\n            } else {\r\n                // this.sharedService.showToastMesaages('error', err.error?.responseException?.exceptionMessage);\r\n            }\r\n            // err.error is not null, if the ResponsenEntity contains an Exception\r\n            // err.error.message will give the custom message send from the server\r\n            // const error = err.error.message || err.statusText;\r\n            const error = err;\r\n            return throwError(error);\r\n\r\n        }))\r\n    }\r\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {JwtInterceptor} from './jwt.interceptor';\r\nimport { ErrorInterceptor } from './error.interceptor';\r\n\r\nexport const HttpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor , multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor , multi: true }\r\n];\r\n\r\n\r\n","// Angular\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\n// RxJS\r\nimport { Auth } from 'aws-amplify';\r\nimport { from, Observable } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n\r\n/**\r\n * This will append jwt token for the http requests.\r\n *\r\n * @export\r\n * @class JwtInterceptor\r\n * @implements {HttpInterceptor}\r\n */\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        //get the idToken\r\n        const jwtToken = localStorage.getItem('idToken');\r\n\r\n        if (jwtToken) {\r\n            const jwtDecodedToken = this.getDecodedAccessToken(jwtToken);\r\n            const tokenExpirationTime = jwtDecodedToken.exp;\r\n            const currentTime = Math.floor(new Date().getTime() / 1000);\r\n\r\n            if (currentTime < tokenExpirationTime) {\r\n                // if the token is not expired\r\n                let with_auth_request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: `Bearer ${jwtToken}`\r\n                    }\r\n                });\r\n                return next.handle(with_auth_request);\r\n            }\r\n        }\r\n\r\n\r\n        return from(Auth.currentSession()).pipe(\r\n            switchMap((auth: any) => { // switchMap() is used instead of map().            \r\n                let jwt = auth.getIdToken().jwtToken;\r\n                localStorage.setItem('idToken', jwt);\r\n\r\n                let with_auth_request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: `Bearer ${jwt}`\r\n                    }\r\n                });\r\n                return next.handle(with_auth_request);\r\n            }),\r\n            catchError((err) => {\r\n                console.log(\"Error \", err);\r\n                return next.handle(request);\r\n            })\r\n        );\r\n    }\r\n\r\n    getDecodedAccessToken(token: string): any {\r\n        try {\r\n            return jwt_decode(token);\r\n        } catch (Error) {\r\n            return null;\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n\r\n  loader: boolean = false;\r\n  isLanguageChanged: boolean = false;\r\n  remainingTimeForSurvey: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  submitButton: boolean = true;\r\n  successErrorMsg: any = {\r\n    messageHeading: '',\r\n    message: '',\r\n    showAcceptReject: false,\r\n    showProceed: false,\r\n    connectionCode: '',\r\n    nextSurveyId: '',\r\n    firstSurveyId: '',\r\n    lastSurveyId: '',\r\n    isMsgFromInterceptor: false,\r\n    isRequestSurvey: false\r\n  };\r\n  messageText: any = '';\r\n\r\n  private currencyMap: { [key: string]: string } = \r\n  { \r\n    AED: \"د.إ\", AFN: \"؋\", ALL: \"L\", AMD: \"֏\", ANG: \"ƒ\", AOA: \"Kz\", ARS: \"$\", \r\n    AUD: \"A$\", AWG: \"ƒ\", AZN: \"₼\", BAM: \"KM\", BBD: \"$\", BDT: \"৳\", BGN: \"лв\", \r\n    BHD: \".د.ب\", BIF: \"FBu\", BMD: \"$\", BND: \"$\", BOB: \"Bs.\", BRL: \"R$\", BSD: \"$\", \r\n    BTN: \"Nu.\", BWP: \"P\", BYN: \"Br\", BZD: \"BZ$\", CAD: \"C$\", CDF: \"FC\", CHF: \"Fr\", \r\n    CLP: \"$\", CNY: \"¥\", COP: \"$\", CRC: \"₡\", CUP: \"$\", CVE: \"$\", CZK: \"Kč\", DJF: \"Fdj\", \r\n    DKK: \"kr\", DOP: \"RD$\", DZD: \"د.ج\", EGP: \"£\", ERN: \"Nfk\", ETB: \"Br\", EUR: \"€\", \r\n    FJD: \"$\", FKP: \"£\", FOK: \"kr\", GBP: \"£\", GEL: \"₾\", GHS: \"GH₵\", GIP: \"£\", \r\n    GMD: \"D\", GNF: \"FG\", GTQ: \"Q\", GYD: \"$\", HKD: \"HK$\", HNL: \"L\", HRK: \"kn\", \r\n    HTG: \"G\", HUF: \"Ft\", IDR: \"Rp\", ILS: \"₪\", INR: \"₹\", IQD: \"ع.د\", IRR: \"﷼\", \r\n    ISK: \"kr\", JMD: \"J$\", JOD: \"د.ا\", JPY: \"¥\", KES: \"Sh\", KGS: \"с\", KHR: \"៛\", \r\n    KMF: \"CF\", KPW: \"₩\", KRW: \"₩\", KWD: \"د.ك\", KYD: \"$\", KZT: \"₸\", LAK: \"₭\", \r\n    LBP: \"ل.ل\", LKR: \"Rs\", LRD: \"$\", LSL: \"L\", LYD: \"ل.د\", MAD: \"د.م.\", MDL: \"L\", \r\n    MGA: \"Ar\", MKD: \"ден\", MMK: \"K\", MNT: \"₮\", MOP: \"P\", MRU: \"UM\", MUR: \"₨\", \r\n    MVR: \"ރ.\", MWK: \"MK\", MXN: \"$\", MYR: \"RM\", MZN: \"MT\", NAD: \"$\", NGN: \"₦\", \r\n    NIO: \"C$\", NOK: \"kr\", NPR: \"₨\", NZD: \"$\", OMR: \"ر.ع.\", PAB: \"B/.\", PEN: \"S/\", \r\n    PGK: \"K\", PHP: \"₱\", PKR: \"₨\", PLN: \"zł\", PYG: \"₲\", QAR: \"ر.ق\", RON: \"lei\", \r\n    RSD: \"дин.\", RUB: \"₽\", RWF: \"FRw\", SAR: \"ر.س\", SBD: \"$\", SCR: \"₨\", SDG: \"ج.س.\", \r\n    SEK: \"kr\", SGD: \"$\", SHP: \"£\", SLE: \"Le\", SLL: \"Le\", SOS: \"Sh\", SRD: \"$\", SSP: \"£\", \r\n    STN: \"Db\", SYP: \"£S\", SZL: \"E\", THB: \"฿\", TJS: \"ЅМ\", TMT: \"m\", TND: \"د.ت\", TOP: \"T$\", \r\n    TRY: \"₺\", TTD: \"TT$\", TWD: \"NT$\", TZS: \"Sh\", UAH: \"₴\", UGX: \"Sh\", USD: \"$\", UYU: \"$U\", \r\n    UZS: \"soʻm\", VES: \"Bs.S.\", VND: \"₫\", VUV: \"Vt\", WST: \"T\", XAF: \"FCFA\", XCD: \"$\", XOF: \"CFA\", \r\n    XPF: \"₣\", YER: \"﷼\", ZAR: \"R\", ZMW: \"ZK\", ZWL: \"$\" \r\n  };  \r\n  getCurrencySymbol(code: string): string { return this.currencyMap[code] || code; }\r\n\r\n  constructor(private toastr: ToastrService) { }\r\n\r\n\r\n  // **************** Method to start Loader ******************************\r\n  startLoader() {\r\n    this.loader = true;\r\n  }\r\n  // **************** Method to stop Loader ******************************\r\n  stopLoader() {\r\n    this.loader = false;\r\n  }\r\n  // ***************** Method to send Toast Msgs *************************\r\n  showToastMesaages(type: any, msg: any) {\r\n    this.toastr.clear();\r\n    if (type == 'success') {\r\n      this.toastr.success(msg);\r\n    } else if (type == 'error') {\r\n      this.toastr.error(msg);\r\n    } else if (type == 'info') {\r\n      this.toastr.info(msg);\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n\tproduction: true,\r\n\tisMockEnabled: true, // You have to switch this, when your real back-end is done\r\n\tauthTokenKey: 'authce9d77b308c149d5992a80073637e4d5',\r\n\tTenantId: 'E7749B6460D6855A8698',\r\n\tmaxSurveyParticipants: 5,\r\n\torgConnectionCode: '000095',\r\n\tenvType: 'dev',\r\n\tBlueNumberIdentityServerClientId: \"localClient\",\r\n\t//BlueNumberSurveyAPI: \"https://dev-bnsurvey.bluenumber.com\",\r\n\t//BlueNumberGlobalAPI: \"https://dev-bngen.bluenumber.com\",\r\n\t//BlueNumberDataImportAPI: \"https://dev-bndi.bluenumber.com\",\r\n\t//BlueNumberIdentityServer: \"https://dev-auth.bluenumber.com\",\r\n\t//BlueNumberIssuerAPI: \"https://dev-bnissuer.bluenumber.com\",\r\n\t//BlueNumberDataReqAPI: \"https://dev-bndm.bluenumber.com\",\r\n\r\n\t//BluenumberSurveyOTPValidationUrl: \"https://bluenumber.global/mm_process\", // old\r\n\tBluenumberSurveyOTPValidationUrl: \"https://millionmakers.org/mm_process\",\r\n\tBlueNumberGlobalAPI: \"https://dev-cog-bngen.bluenumber.com\",\r\n\tBlueNumberDataReqAPI: \"https://dev-cog-bndm.bluenumber.com\",\r\n\tBlueNumberCredentialsAPI: \"https://dev-cog-credential.bluenumber.com\",\r\n\r\n\t//amplify settings\r\n\tBlueNumberCognitoAmplifyUrl: \"https://dev-sso.bluenumber.com/signin/\",\r\n\r\n\t// ******** Un Comment BlueNumberCognitoReturnUrl: \"http://localhost:4200/ while running locally ********************\r\n\t// BlueNumberCognitoReturnUrl: \"http://localhost:4200/auth/login/\",\r\n\r\n\t// ************  Comment it while running locally ********************\r\n\tBlueNumberCognitoReturnUrl: \"https://dev-survey.millionmakers.org/auth/login/\",\r\n\tIpAPiUrl: \"https://pro.ip-api.com/json?key=VyIZD0eqToHTt6J\",\r\n\tBNFGlobalAPI: \" https://dev-cog-bnf-global.bluenumber.com\",\r\n\r\n\tcognito: {\r\n\t\tuserPoolId: 'us-east-2_Zxy17fHDS',\r\n\t\tuserPoolWebClientId: '7tmt86q7t9ilvua99ln51pc20k',\r\n\t\t// ************  Comment cookieStorage while running locally ********************\r\n\t\t// cookieStorage: {\r\n\t\t// \tdomain: '.millionmakers.org',\r\n\t\t// \tsecure: false,\r\n\t\t// \tpath: '/',\r\n\t\t// \texpires: 365,\r\n\t\t// }\r\n\t\t// ************ Un Comment it while running locally ********************\r\n\t\tstorage: localStorage,\r\n\t\tcookieStorage: false,\r\n\t}\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { Amplify} from 'aws-amplify';\r\n\r\nAmplify.configure({\r\n  Auth: environment.cognito,\r\n});\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}